/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MiniInfoFrame.java
 *
 * Created on 08-06-2011, 13:17:30
 */

package gui.info;

import gui.FramePlaceHolder;
import controller.MainController;
import javax.swing.ImageIcon;

/**
 *
 * @author Morten Hulvej
 */
public class MiniInfoFrame extends javax.swing.JInternalFrame {

    /** Creates new form MiniInfoFrame */
    public MiniInfoFrame() {
        initComponents();
        FramePlaceHolder.setMinInfoFrame(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BertaToolbar = new javax.swing.JToolBar();
        BertaNameLabel = new javax.swing.JLabel();
        BertaStartStopLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        BertaStateLabel = new javax.swing.JLabel();
        BertaPosLabel = new javax.swing.JLabel();
        BertaAngleLabel = new javax.swing.JLabel();
        PropToolbar = new javax.swing.JToolBar();
        PropNameLabel = new javax.swing.JLabel();
        PropStartStopLabel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        PropStateLabel = new javax.swing.JLabel();
        PropPosLabel = new javax.swing.JLabel();
        PropAngleLabel = new javax.swing.JLabel();

        setTitle("Robot Information");

        BertaToolbar.setBackground(java.awt.Color.cyan);
        BertaToolbar.setRollover(true);

        BertaNameLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/robot.png"))); // NOI18N
        BertaNameLabel.setText("B.E.R.T.A.");
        BertaToolbar.add(BertaNameLabel);

        BertaStartStopLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/stop.png"))); // NOI18N
        BertaToolbar.add(BertaStartStopLabel);
        BertaToolbar.add(jSeparator1);

        BertaStateLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/state.png"))); // NOI18N
        BertaStateLabel.setText("State");
        BertaToolbar.add(BertaStateLabel);

        BertaPosLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/gps.png"))); // NOI18N
        BertaPosLabel.setText("Position");
        BertaToolbar.add(BertaPosLabel);

        BertaAngleLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/angle.png"))); // NOI18N
        BertaAngleLabel.setText("Angle");
        BertaToolbar.add(BertaAngleLabel);

        PropToolbar.setBackground(java.awt.Color.pink);
        PropToolbar.setRollover(true);

        PropNameLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/robot.png"))); // NOI18N
        PropNameLabel.setText("P.R.O.P.");
        PropToolbar.add(PropNameLabel);

        PropStartStopLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/ok.png"))); // NOI18N
        PropToolbar.add(PropStartStopLabel);
        PropToolbar.add(jSeparator2);

        PropStateLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/state.png"))); // NOI18N
        PropStateLabel.setText("State");
        PropToolbar.add(PropStateLabel);

        PropPosLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/gps.png"))); // NOI18N
        PropPosLabel.setText("Position");
        PropToolbar.add(PropPosLabel);

        PropAngleLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/angle.png"))); // NOI18N
        PropAngleLabel.setText("Angle");
        PropToolbar.add(PropAngleLabel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(PropToolbar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BertaToolbar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(BertaToolbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PropToolbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BertaAngleLabel;
    private javax.swing.JLabel BertaNameLabel;
    private javax.swing.JLabel BertaPosLabel;
    private javax.swing.JLabel BertaStartStopLabel;
    private javax.swing.JLabel BertaStateLabel;
    private javax.swing.JToolBar BertaToolbar;
    private javax.swing.JLabel PropAngleLabel;
    private javax.swing.JLabel PropNameLabel;
    private javax.swing.JLabel PropPosLabel;
    private javax.swing.JLabel PropStartStopLabel;
    private javax.swing.JLabel PropStateLabel;
    private javax.swing.JToolBar PropToolbar;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    // End of variables declaration//GEN-END:variables

    //Berta Info Update
    private void updateBertaOnOff(){
        if(MainController.getInstance().isBertaConnected()){
        BertaStartStopLabel.setIcon(new ImageIcon("/icons/on_lille"));
    }else{
             BertaStartStopLabel.setIcon(new ImageIcon("/icons/off_lille"));
        }

     }
    private void updateBertaState(){
        String text = MainController.getInstance().getBertaState().toString();
    if(!text.equals("")){
        BertaStateLabel.setText(text);
    }else{
        BertaStateLabel.setText("N/A");
    }
    }

    private void updateBertaPos(){
        int[]yx = MainController.getInstance().getBertaPos();
        if(yx[0]==0 && yx[1]==0){
            BertaAngleLabel.setText("N/A");
        }else{
        int x =yx[1];
        int y = yx[0];
        BertaPosLabel.setText("("+x+","+y+")");
        }
    }
    private void updateBertaAngle(){
       double radAngle = MainController.getInstance().getBertaAngle();
       if(radAngle == 0.0){
           BertaAngleLabel.setText("N/A");
       }else{
        BertaAngleLabel.setText(radAngle*180/Math.PI+"°");
       }
   }

//Prop Info Update
    private void updatePropOnOff(){
        if(MainController.getInstance().isPropConnected()){
        PropStartStopLabel.setIcon(new ImageIcon("/icons/on_lille"));
    }else{
             PropStartStopLabel.setIcon(new ImageIcon("/icons/off_lille"));
        }
    }
    private void updatePropState(){
     String text = MainController.getInstance().getPropState().toString();
    if(!text.equals("")){
        PropStateLabel.setText(text);
    }else{
        PropStateLabel.setText("N/A");
    }
    }
    private void updatePropPos(){
        int[]yx = MainController.getInstance().getPropPos();
        if(yx[0]==0 && yx[1]==0){
            PropAngleLabel.setText("N/A");
        }else{
        int x =yx[1];
        int y = yx[0];
        PropPosLabel.setText("("+x+","+y+")");
        }
    }
    private void updatePropAngle(){
       double radAngle = MainController.getInstance().getPropAngle();
       if(radAngle == 0.0){
           PropAngleLabel.setText("N/A");
       }else{
        PropAngleLabel.setText(radAngle*180/Math.PI+"°");
       }
       }

public void updateBertaInfo(){
    updateBertaAngle();
    updateBertaOnOff();
    updateBertaPos();
    updateBertaState();
}
public void updatePropInfo(){
    updatePropAngle();
    updatePropOnOff();
    updatePropPos();
    updatePropState();
}
public void UpdateBothRobots(){
    updateBertaInfo();
//    updatePropInfo();
}


}
