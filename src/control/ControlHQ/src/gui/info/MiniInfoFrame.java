/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MiniInfoFrame.java
 *
 * Created on 08-06-2011, 13:17:30
 */

package gui.info;

import gui.FramePlaceHolder;
import controller.MainController;
import javax.swing.ImageIcon;

/**
 *
 * @author Morten Hulvej
 */
public class MiniInfoFrame extends javax.swing.JInternalFrame {

    /** Creates new form MiniInfoFrame */
    public MiniInfoFrame() {
        initComponents();
        FramePlaceHolder.setMinInfoFrame(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        bertaInfoPanel = new javax.swing.JPanel();
        BertaNameLabel = new javax.swing.JLabel();
        BertaStartStopLabel = new javax.swing.JLabel();
        bertaStateLabel = new javax.swing.JLabel();
        bertaPosLabel = new javax.swing.JLabel();
        bertaAngleLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        propInfoPanel = new javax.swing.JPanel();
        PropNameLabel = new javax.swing.JLabel();
        PropStartStopLabel = new javax.swing.JLabel();
        PropStateLabel = new javax.swing.JLabel();
        PropPosLabel = new javax.swing.JLabel();
        PropAngleLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setIconifiable(true);
        setTitle("Robot Information");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        bertaInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("B.E.R.T.A."));
        bertaInfoPanel.setLayout(new java.awt.GridBagLayout());

        BertaNameLabel.setText("Connected");
        bertaInfoPanel.add(BertaNameLabel, new java.awt.GridBagConstraints());

        BertaStartStopLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/stop.png"))); // NOI18N
        bertaInfoPanel.add(BertaStartStopLabel, new java.awt.GridBagConstraints());

        bertaStateLabel.setText("N/A");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 10, 50);
        bertaInfoPanel.add(bertaStateLabel, gridBagConstraints);

        bertaPosLabel.setText("N/A");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        bertaInfoPanel.add(bertaPosLabel, gridBagConstraints);

        bertaAngleLabel.setText("N/A");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        bertaInfoPanel.add(bertaAngleLabel, gridBagConstraints);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/state.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        bertaInfoPanel.add(jLabel1, gridBagConstraints);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/gps.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        bertaInfoPanel.add(jLabel2, gridBagConstraints);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/angle.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        bertaInfoPanel.add(jLabel3, gridBagConstraints);

        getContentPane().add(bertaInfoPanel, new java.awt.GridBagConstraints());

        propInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("P.R.O.P."));
        propInfoPanel.setLayout(new java.awt.GridBagLayout());

        PropNameLabel.setText("Connected");
        propInfoPanel.add(PropNameLabel, new java.awt.GridBagConstraints());

        PropStartStopLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/ok.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        propInfoPanel.add(PropStartStopLabel, gridBagConstraints);

        PropStateLabel.setText("N/a");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 10, 50);
        propInfoPanel.add(PropStateLabel, gridBagConstraints);

        PropPosLabel.setText("N/A");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        propInfoPanel.add(PropPosLabel, gridBagConstraints);

        PropAngleLabel.setText("N/A");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        propInfoPanel.add(PropAngleLabel, gridBagConstraints);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/state.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        propInfoPanel.add(jLabel4, gridBagConstraints);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/gps.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        propInfoPanel.add(jLabel5, gridBagConstraints);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/angle.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        propInfoPanel.add(jLabel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        getContentPane().add(propInfoPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BertaNameLabel;
    private javax.swing.JLabel BertaStartStopLabel;
    private javax.swing.JLabel PropAngleLabel;
    private javax.swing.JLabel PropNameLabel;
    private javax.swing.JLabel PropPosLabel;
    private javax.swing.JLabel PropStartStopLabel;
    private javax.swing.JLabel PropStateLabel;
    private javax.swing.JLabel bertaAngleLabel;
    private javax.swing.JPanel bertaInfoPanel;
    private javax.swing.JLabel bertaPosLabel;
    private javax.swing.JLabel bertaStateLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel propInfoPanel;
    // End of variables declaration//GEN-END:variables

    //Berta Info Update
    private void updateBertaOnOff(){
        if(MainController.getInstance().isBertaConnected()){
        BertaStartStopLabel.setIcon(new ImageIcon("/icons/on_lille"));
    }else{
             BertaStartStopLabel.setIcon(new ImageIcon("/icons/off_lille"));
        }

     }
    private void updateBertaState(){
        String text = MainController.getInstance().getBertaState().toString();
    if(!text.equals("")){
        bertaStateLabel.setText(text);
    }else{
        bertaStateLabel.setText("N/A");
    }
    }

    private void updateBertaPos(){
        int[]yx = MainController.getInstance().getBertaPos();
        if(yx[0]==0 && yx[1]==0){
            bertaAngleLabel.setText("N/A");
        }else{
        int x =yx[1];
        int y = yx[0];
        bertaPosLabel.setText("("+x+","+y+")");
        }
    }
    private void updateBertaAngle(){
       double radAngle = MainController.getInstance().getBertaAngle();
       if(radAngle == 0.0){
           bertaAngleLabel.setText("N/A");
       }else{
        bertaAngleLabel.setText(radAngle*180/Math.PI+"Â°");
       }
   }

//Prop Info Update
    private void updatePropOnOff(){
        if(MainController.getInstance().isPropConnected()){
        PropStartStopLabel.setIcon(new ImageIcon("/icons/on_lille"));
    }else{
             PropStartStopLabel.setIcon(new ImageIcon("/icons/off_lille"));
        }
    }
    private void updatePropState(){
     String text = MainController.getInstance().getPropState().toString();
    if(!text.equals("")){
        PropStateLabel.setText(text);
    }else{
        PropStateLabel.setText("N/A");
    }
    }
    private void updatePropPos(){
        int[]yx = MainController.getInstance().getPropPos();
        if(yx[0]==0 && yx[1]==0){
            PropAngleLabel.setText("N/A");
        }else{
        int x =yx[1];
        int y = yx[0];
        PropPosLabel.setText("("+x+","+y+")");
        }
    }
    private void updatePropAngle(){
       double radAngle = MainController.getInstance().getPropAngle();
       if(radAngle == 0.0){
           PropAngleLabel.setText("N/A");
       }else{
        PropAngleLabel.setText(radAngle*180/Math.PI+"Â°");
       }
       }

public void updateBertaInfo(){
    updateBertaAngle();
    updateBertaOnOff();
    updateBertaPos();
    updateBertaState();
}
public void updatePropInfo(){
    updatePropAngle();
    updatePropOnOff();
    updatePropPos();
    updatePropState();
}
public void updateBothRobots(){
    updateBertaInfo();
    updatePropInfo();
}


}
