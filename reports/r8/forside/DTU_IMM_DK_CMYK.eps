%!PS-Adobe-3.1 EPSF-3.0%ADO_DSC_Encoding: MacOS Roman%%Title: DTU Informatik A.eps%%Creator: Adobe Illustrator(R) 12%%AI8_CreatorVersion: 12.0.1%AI9_PrintingDataBegin%%For: PeopleGroup%%CreationDate: 27/02/08%%BoundingBox: 0 0 258 37%%HiResBoundingBox: 0 0 257.1524 36.7867%%CropBox: 0 0 257.1524 36.7867%%LanguageLevel: 2%%DocumentData: Clean7Bit%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0%%+ procset Adobe_CoolType_Utility_T42 1.0 0%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0%%+ procset Adobe_CoolType_Core 2.23 0%%+ procset Adobe_AGM_Core 2.0 0%%+ procset Adobe_AGM_Utils 1.0 0%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Magenta Yellow Black%%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %ADO_BuildNumber: Adobe Illustrator(R) 12.0.1 x205 R agm 4.3861 ct 5.530%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 20 8%%BeginData: 3588 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C4552277D7D5227A852FF7DA8FFFF52A8FD04FF277DFD0FFFA8A8FF52%7D52FD56FF27FF28A87D7DFF52FF7D7DFFFF527D52527D7E277D7D277D7D%527D7D2752277DA85252FF277D7D7DA87D7DA8FD54FF52FF7DA87D52FF52%FF7D7DFFFF52A852A852FF2EA827FF52A852FF537D277D52FF5227FF7DA8%A852A8F852FD55FF27A827FF5252FF527E527DFFFF527D52A852A852A852%7D527D52FF7D7D527D52525227FF52A8A852A82727FD55FF7D52A8FFA87D%FFA85252FFFFFF7DFF7DFF7DFF7DFF7D52A8FF7DFFA8A87DFF7DA8527DA8%A852FF7DFFA8A87DFDF7FFA8FD5CFF7DFFA8FFFFFFA8FFA8FFA8A8A8FD04%FFA8A8FFA87DA8FFA8FD04FFA8A8FFA8FFA87DA8FFFFFFA8FFFFFFA8FFFF%FFA8FFA8FFA8A8A8FFA8FD05FFA8FFFFFF52FF7D7DFD04FFA8FFA8FFFFFF%A8FFFFFFA8FFFFA8A8A8FFFFA8A8A8FFFFFF52FF7E7DFFFFA8FFFFA8A8FF%A8FF7DA8A8FFA8FFFFFFA8FD05FFA8FFA8A8A87DFF7DFFA87DA8FF7DA8A8%FFA8FF7DA8FFFF7DA87DFD04A8FFA8A87DA8A8A87DFF7DFD05A87DA87DFF%A8A8A87DFD05A8FFFFA87DFFA8A87DFFFF7D7DA87DFF7DA8A87DA8A87EFF%7DA87DA8FFA97DAF7DAFA8A87DFFA8A8A8FFFF7D7DA87DA97DA8A8A87DAF%FD0BA8FFA8A87DFFA8A87D7DFD06A8FF7DFFFD09A8FFFFFD05A87DFFFFA8%7DFD05A87DFFA87DA8FF7DFD05A87DFF7DFF7DA852FFFFA8A8FF7DA8A8A8%FFFF7DA884A8A8A87DA8A8A87DA87DFD06A87EFD05A87DA8A852FFFFFF7D%A87DA87DFF7D7DA8A87DA87DA87EA87D7D7DA87DFF84A8A8FF7DA8A87DA8%7DFF7DAFA87DFD08A87EFF7DA8FFFF7DA87DA87DA8FFFF7DA8A8FF7DFFFD%04A87DFD07A87DFD06A87DA8FFFD04A87D7DA8FFA8A8FFFF7DA87DFD04A8%7EA8FFFD04A87D7E7DFF7DFF7DFFA8847E7DA8FFA8A8FFFF7DA8A8A87DA8%A8A87DFD05A87DA8A8A8FFA87DA8A8A87D7DFD04A8FFA8A8A8FF84A8A8FF%7DFF7DA8A8A87DFFFFA8A8A87DFFA8FFFFA8A8FFFFA8A8FFFFA8A8FFA8FF%A8FFFD05A8FFA8A8A8FFA8A8A8FF7EA8A87D7D7DFFFFA8FFFFFD04A8FF7D%FFA8A8A8FFA8FFA8FF7DFD04A8FFA8A8A8FFA8A8FFFFA8FFFFFD04A8FF7D%A8A8A87DFFA8FFA8FF7DA8A8FFA8A8A8FFA87D7D7DFD3DFFA8A8A8FD3DFF%A8A8A8FDFCFFFD84FFC3A0A19AC3A0A19AC3A0A19AC3A0A19AC3A0A19AC3%A0A19AC3A0A19AC3A0A19AC3A0A19AC3A0A19AC3A0A19AC3A1FD52FF6869%686968696869686968696869686968696869686968696869686968696869%6869686968696869686968696893FD52FFC3A1C9A1C3A1C9A1C3A1C9A1C3%A1C9A1C3A1C9A1C3A1C9A1C3A1C9A1C3A1C9A1C3A1C9A1C3A1C9A1C3A1C9%A1C3A1FDD1FFFF%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 70 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 	exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/set_gvm{	currentglobal exch setglobal}bdf/reset_gvm{	setglobal}bdf/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup () cvn eq{						pop (Process)					}if				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust	AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse	AGMUTIL_GSTATE_flt setflat	end}def/get_gstate_and_matrix{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_ctm matrix currentmatrix def	end	get_gstate}def/set_gstate_and_matrix{	set_gstate	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_ctm setmatrix	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/thold_halftone{ 	level3		{sethalftone currenthalftone}		{			dup /HalftoneType get 3 eq			{				sethalftone currenthalftone			}			{				begin				Width Height mul {					Thresholds read {pop} if				} repeat				end				currenthalftone			} ifelse		}ifelse} def /rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		exch () /SubFileDecode filter	}	{		exch pop	}	ifelse	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/filter_indexed_devn{	cvi Names length mul names_index add Lookup exch get} bdf/filter_devn{		4 dict begin	/srcStr xdf	/dstStr xdf	dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch		[			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx			currentdict /srcStr get /readstring cvx /pop cvx			/dup cvx /length cvx 0 /gt cvx [				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx				names_index Names length currentdict /srcStr get length 1 sub {					1 /index cvx /exch cvx /get cvx					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx				} for				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx			] cvx /if cvx			/end cvx		] cvx		bind		/exec cvx	] cvx	end} bdf/AGMUTIL_imagefile nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	10 dict begin	/imageDict xdf	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def	/imbufIdx 0 def	/origDataSource imageDict /DataSource get def	/origMultipleDataSources imageDict /MultipleDataSources get def	/origDecode imageDict /Decode get def	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse	{		/imbufCnt imageDict /DataSource get length def		/imbufs imbufCnt array def		0 1 imbufCnt 1 sub {			/imbufIdx xdf			imbufs imbufIdx imbufLen string put			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put		} for		DeviceN_PS2 {			imageDict begin		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def			/MultipleDataSources false def			/Decode [0 1] def			end		} if	}{		/imbuf imbufLen string def		Indexed_DeviceN level3 not and DeviceN_NoneName or {			/srcDataStrs [ imageDict begin				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse				{					Width Decode length 2 div mul cvi string				} repeat				end ] def					imageDict begin		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def			/Decode [0 1] def			end		}{			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put			imageDict /Decode [0 1] put		} ifelse	} ifelse	imageDict exch	load exec	imageDict /DataSource origDataSource put	imageDict /MultipleDataSources origMultipleDataSources put	imageDict /Decode origDecode put		end} bdf/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		2 dict begin		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {			/imbuf imbufLen string def		}if		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 			pop			MultipleDataSources {			 	0 1 DataSource length 1 sub {					DataSource type dup					/arraytype eq {						pop DataSource exch get exec					}{						/filetype eq {							DataSource exch get imbuf readstring pop						}{							DataSource exch get						} ifelse					} ifelse					AGMUTIL_imagefile exch writestring				} for			}{				DataSource type dup				/arraytype eq {					pop DataSource exec				}{					/filetype eq {						DataSource imbuf readstring pop					}{						DataSource					} ifelse				} ifelse				AGMUTIL_imagefile exch writestring			} ifelse		}for		end		true	}ifelse	end} bdf/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}defstatusdict /product known userdict /AGMP_current_show known not and{	/pstr statusdict /product get def	pstr (HP LaserJet 2200) eq 		pstr (HP LaserJet 4000 Series) eq or	pstr (HP LaserJet 4050 Series ) eq or	pstr (HP LaserJet 8000 Series) eq or	pstr (HP LaserJet 8100 Series) eq or	pstr (HP LaserJet 8150 Series) eq or	pstr (HP LaserJet 5000 Series) eq or	pstr (HP LaserJet 5100 Series) eq or	pstr (HP Color LaserJet 4500) eq or	pstr (HP Color LaserJet 4600) eq or	pstr (HP LaserJet 5Si) eq or	pstr (HP LaserJet 1200 Series) eq or	pstr (HP LaserJet 1300 Series) eq or	pstr (HP LaserJet 4100 Series) eq or 	{ 		userdict /AGMP_current_show /show load put		userdict /show {		  currentcolorspace 0 get		  /Pattern eq		  {false charpath f}		  {AGMP_current_show} ifelse		} put	}if	currentdict /pstr undef} if/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		DataSource 0 get type		dup /filetype eq			{			1 dict begin			/flushbuffer Width cvi string def			1 1 Height cvi				{				pop				0 1 DataSource length 1 sub					{					DataSource exch get					flushbuffer readstring pop pop					}for				}for			end			}if		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and			{			Width Height mul cvi				{				0 1 DataSource length 1 sub					{dup DataSource exch get exec length exch 0 ne {pop}if}for				dup 0 eq					{pop exit}if				sub dup 0 le					{exit}if				}loop			pop			}if				}		{		/DataSource load type 		dup /filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 idiv mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and			{				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul					{					DataSource length dup 0 eq						{pop exit}if					sub dup 0 le						{exit}if					}loop				pop			}if		}ifelse	end}bdf/addprocs{	  2{/exec load}repeat	  3 1 roll	  [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin	 currentdict 2 index known{	 	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse		 addprocs /TransferFunction xdf 		 currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/clonearray{	dup xcheck exch	dup length array exch	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 	{	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 	dup type /dicttype eq		{			Adobe_AGM_Core/AGMCORE_tmp get			exch			clonedict			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	dup type /arraytype eq		{			Adobe_AGM_Core/AGMCORE_tmp get exch			clonearray			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	exch dup	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put	}forall	exch {cvx} if}bdf/clonedict{	dup length dict	begin		{		dup type /dicttype eq			{				clonedict			} if		dup type /arraytype eq			{				clonearray			} if		def		}forall	currentdict	end}bdf/DeviceN_PS2{	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and} bdf/Indexed_DeviceN{ 	/indexed_colorspace_dict AGMCORE_gget dup null ne {		dup /CSDBase known {			/CSDBase get /CSD get_res /Names known 		}{			pop false		}ifelse	}{		pop false	} ifelse} bdf/DeviceN_NoneName{		/Names where {		pop		false Names		{			(None) eq or		} forall	}{		false	}ifelse} bdf/DeviceN_PS2_inRip_seps{	/AGMCORE_in_rip_sep where	{		pop dup type dup /arraytype eq exch /packedarraytype eq or		{			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and			{				/currentcolorspace exch AGMCORE_gput				false			}			{				true			}ifelse		}		{			true		} ifelse	}	{		true	} ifelse} bdf/base_colorspace_type{	dup type /arraytype eq {0 get} if} bdf/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse{	/pdfmark_5 {cleartomark} bind def}{	/pdfmark_5 {pdfmark} bind def}ifelse/ReadBypdfmark_5{	2 dict begin	/makerString exch def string /tmpString exch def	{		currentfile tmpString readline pop		makerString anchorsearch		{		pop pop cleartomark exit		}{			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5		} ifelse	}loop	end} bdf/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for%% definitions of some fundamental procedures.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 201 dict dup begin put/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSD_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/AGMCORE_Default_PageSize nd/AGMCORE_currentbg nd/AGMCORE_currentucr nd/AGMCORE_in_pattern false def/AGMCORE_currentpagedevice nd/knockout_unitsq ndcurrentglobal true setglobal[/CSA /Gradient /Procedure]{	/Generic /Category findresource dup length dict copy /Category defineresource pop} forallsetglobal/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	2 dict begin	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	end	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/npth_clp{	newpath clip} def/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	//Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/dictstackcount countdictstack def	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	dictstackcount 1 countdictstack 1 sub {end}for	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont	/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto	/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show			0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp xpt				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf	errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def	AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if	/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_currentbg currentblackgeneration def	/AGMCORE_currentucr currentundercolorremoval def	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 10 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_&setoverprint /setoverprint ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse			/AGMCORE_gstackptr exch store		}def		/grestoreall {			AGMCORE_&grestoreall			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/setoverprint{			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint		}def			0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and	{		/AGMCORE_&sysshfill systemdict/shfill get def		/AGMCORE_&sysmakepattern systemdict/makepattern get def		/AGMCORE_&usrmakepattern /makepattern load def	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/devicen_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	<<	/MaxPatternItem currentsystemparams /MaxPatternCache get	>>	setuserparams	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_have_reported_unsupported_color_space false def	/AGMCORE_report_unsupported_color_space	{		AGMCORE_have_reported_unsupported_color_space false eq		{			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf		} if	}def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def	/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/sRGB ne					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			//Adobe_AGM_Core begin			dup map_alias {				/Name get exch pop			} if			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						current_spot_alias false set_spot_alias						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor						set_spot_alias						currentgray 1 ne					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						//Adobe_AGM_Core/AGMCORE_name xddf						false						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse						not AGMCORE_currentpagedevice/OverrideSeparations known and						{							AGMCORE_currentpagedevice/OverrideSeparations get							{								/HqnSpots /ProcSet resourcestatus								{									pop pop pop true								}if							}if						}if											{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not						}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace							false							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall								not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse			end		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				dup true exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or						{pop}						{convert_spot_to_process and}ifelse					}				forall					{					true exch						{						dup (Cyan) eq exch						dup (Magenta) eq 3 -1 roll or exch						dup (Yellow) eq 3 -1 roll or exch						(Black) eq or and						}forall						not					}{pop false}ifelse				}{				false exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or					{pop}					{convert_spot_to_process or}ifelse					}				forall				}ifelse			}ifelse		}def	}ifelse		/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	/AGMCORE_IsSeparationAProcessColor		{		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or		}def	AGMCORE_host_sep{		/setcolortransfer		{ 			AGMCORE_cyan_plate{				pop pop pop			}{			  	AGMCORE_magenta_plate{			  		4 3 roll pop pop pop			  	}{			  		AGMCORE_yellow_plate{			  			4 2 roll pop pop pop			  		}{			  			4 1 roll pop pop pop			  		}ifelse			  	}ifelse			}ifelse			settransfer  		}			def		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/AGMCORE_RemoveProcessColorNames			{			1 dict begin			/filtername				{				dup /Cyan eq 1 index (Cyan) eq or					{pop (_cyan_)}if				dup /Magenta eq 1 index (Magenta) eq or					{pop (_magenta_)}if				dup /Yellow eq 1 index (Yellow) eq or					{pop (_yellow_)}if				dup /Black eq 1 index (Black) eq or					{pop (_black_)}if				}def			dup type /arraytype eq				{[exch {filtername}forall]}				{filtername}ifelse			end			}def		level3 {			/AGMCORE_IsCurrentColor				{				dup AGMCORE_IsSeparationAProcessColor					{					AGMCORE_plate_ndx 0 eq						{dup (Cyan) eq exch /Cyan eq or}if					AGMCORE_plate_ndx 1 eq						{dup (Magenta) eq exch /Magenta eq or}if					AGMCORE_plate_ndx 2 eq						{dup (Yellow) eq exch /Yellow eq or}if					AGMCORE_plate_ndx 3 eq						{dup (Black) eq exch /Black eq or}if					AGMCORE_plate_ndx 4 eq						{pop false}if					}{					gsave					false setoverprint					current_spot_alias false set_spot_alias					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor					set_spot_alias					currentgray 1 ne					grestore					}ifelse				}def			/AGMCORE_filter_functiondatasource				{					5 dict begin				/data_in xdf				data_in type /stringtype eq					{					/ncomp xdf					/comp xdf					/string_out data_in length ncomp idiv string def					0 ncomp data_in length 1 sub						{						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put						}for					string_out					}{					string /string_in xdf					/string_out 1 string def					/component xdf					[					data_in string_in /readstring cvx						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx						[/pop cvx ()]cvx /ifelse cvx					]cvx /ReusableStreamDecode filter				}ifelse				end				}def			/AGMCORE_separateShadingFunction				{				2 dict begin				/paint? xdf				/channel xdf				dup type /dicttype eq					{					begin					FunctionType 0 eq						{						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def						currentdict /Decode known							{/Decode Decode channel 2 mul 2 getinterval def}if						paint? not							{/Decode [1 1]def}if						}if					FunctionType 2 eq						{						paint?							{							/C0 [C0 channel get 1 exch sub] def							/C1 [C1 channel get 1 exch sub] def							}{							/C0 [1] def							/C1 [1] def							}ifelse									}if					FunctionType 3 eq						{						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def									}if					currentdict /Range known						{/Range [0 1] def}if					currentdict					end}{					channel get 0 paint? AGMCORE_separateShadingFunction					}ifelse				end				}def			/AGMCORE_separateShading				{				3 -1 roll begin				currentdict /Function known					{					currentdict /Background known						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf					/ColorSpace [/DeviceGray] def					}{					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq						{						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def						}{						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put						}ifelse					ColorSpace 0 get /Separation eq						{							{								[1 /exch cvx /sub cvx]cvx							}{								[/pop cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll put							pop						}{							{								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx							}{								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll bind put						}ifelse					ColorSpace 2 /DeviceGray put																							}ifelse				end				}def			/AGMCORE_separateShadingDict				{				dup /ColorSpace get				dup type /arraytype ne					{[exch]}if				dup 0 get /DeviceCMYK eq					{					exch begin 					currentdict					AGMCORE_cyan_plate						{0 true}if					AGMCORE_magenta_plate						{1 true}if					AGMCORE_yellow_plate						{2 true}if					AGMCORE_black_plate						{3 true}if					AGMCORE_plate_ndx 4 eq						{0 false}if							dup not currentoverprint and						{/AGMCORE_ignoreshade true def}if					AGMCORE_separateShading					currentdict					end exch					}if				dup 0 get /Separation eq					{					exch begin					ColorSpace 1 get dup /None ne exch /All ne and						{						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and							{							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 								{								/ColorSpace									[									/Separation									ColorSpace 1 get									/DeviceGray										[										ColorSpace 3 get /exec cvx										4 AGMCORE_plate_ndx sub -1 /roll cvx										4 1 /roll cvx										3 [/pop cvx]cvx /repeat cvx										1 /exch cvx /sub cvx										]cvx																		]def								}{								AGMCORE_report_unsupported_color_space								AGMCORE_black_plate not									{									currentdict 0 false AGMCORE_separateShading									}if								}ifelse							}{							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor							0 exch 							dup not currentoverprint and								{/AGMCORE_ignoreshade true def}if							AGMCORE_separateShading							}ifelse							}if								currentdict					end exch					}if				dup 0 get /DeviceN eq					{					exch begin					ColorSpace 1 get convert_to_process						{						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 							{							/ColorSpace								[								/DeviceN								ColorSpace 1 get								/DeviceGray									[									ColorSpace 3 get /exec cvx									4 AGMCORE_plate_ndx sub -1 /roll cvx									4 1 /roll cvx									3 [/pop cvx]cvx /repeat cvx									1 /exch cvx /sub cvx									]cvx																	]def							}{							AGMCORE_report_unsupported_color_space							AGMCORE_black_plate not								{								currentdict 0 false AGMCORE_separateShading								/ColorSpace [/DeviceGray] def								}if							}ifelse						}{						currentdict						false -1 ColorSpace 1 get							{							AGMCORE_IsCurrentColor								{								1 add								exch pop true exch exit								}if							1 add							}forall						exch 						dup not currentoverprint and							{/AGMCORE_ignoreshade true def}if						AGMCORE_separateShading						}ifelse					currentdict					end exch					}if				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not					{					exch begin					ColorSpace dup type /arraytype eq						{0 get}if					/DeviceGray ne						{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate not							{							ColorSpace 0 get /CIEBasedA eq								{								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def								}if							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or								{								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def								}if							ColorSpace 0 get /CIEBasedDEFG eq								{								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def								}if							currentdict 0 false AGMCORE_separateShading							}if						}if					currentdict					end exch					}if				pop				dup /AGMCORE_ignoreshade known					{					begin					/ColorSpace [/Separation (None) /DeviceGray {}] def					currentdict end					}if				}def			/shfill				{				AGMCORE_separateShadingDict 				dup /AGMCORE_ignoreshade known					{pop}					{AGMCORE_&sysshfill}ifelse				}def			/makepattern				{				exch				dup /PatternType get 2 eq					{					clonedict					begin					/Shading Shading AGMCORE_separateShadingDict def					Shading /AGMCORE_ignoreshade known					currentdict end exch					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if					exch AGMCORE_&sysmakepattern					}{					exch AGMCORE_&usrmakepattern					}ifelse				}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				//Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf	/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def	/map_index	{		1 index mul exch getinterval {255 div} forall	} bdf	/map_indexed_devn	{		Lookup Names length 3 -1 roll cvi map_index	} bdf	/n_color_components	{		base_colorspace_type		dup /DeviceGray eq{			pop 1		}{			/DeviceCMYK eq{				4			}{				3			}ifelse		}ifelse	}bdf	level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		level2 /setcolorspace AGMCORE_key_known not and{			/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					/AGMCORE_SpotAliasAry2 where {						begin						dup 0 get dup /Separation eq						{							pop							dup length array copy							dup dup 1 get							current_spot_alias							{								dup map_alias								{									false set_spot_alias									dup 1 exch setsepcolorspace									true set_spot_alias									begin									/sep_colorspace_dict currentdict AGMCORE_gput									pop pop	pop									[ 										/Separation Name 										CSA map_csa										MappedCSA 										/sep_colorspace_proc load									]									dup Name									end								}if							}if							map_reserved_ink_name 1 xpt						}{							/DeviceN eq 							{								dup length array copy								dup dup 1 get [ 									exch {										current_spot_alias{											dup map_alias{												/Name get exch pop											}if										}if										map_reserved_ink_name									} forall 								] 1 xpt							}if						}ifelse						end					} if				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if			}def		}if		}{		/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def		/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def		/setcolor_devicecolor		{			base_colorspace_type			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def		/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse	/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/devn /setdevicencolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/devncs /setdevicencolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/f /fill ldf	/ef /eofill ldf	/@ /stroke ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf	/AGMCORE_def_ht currenthalftone def	/clonedict Adobe_AGM_Utils begin /clonedict load end def	/clonearray Adobe_AGM_Utils begin /clonearray load end def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	/getrampcolor	{ 		/indx exch def		0 1 NumComp 1 sub		{			dup			Samples exch get			dup type /stringtype eq {indx get} if			exch			Scaling exch get aload pop			3 1 roll			mul add		} for		ColorSpaceFamily /Separation eq 		{sep}		{			ColorSpaceFamily /DeviceN eq			{devn} {setcolor}ifelse		}ifelse	} bdf	/sssetbackground {aload pop setcolor} bdf	/RadialShade	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/r2 xdf		/c2y xdf		/c2x xdf		/r1 xdf		/c1y xdf		/c1x xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		c1x c2x eq		{			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope c2y c1y sub c2x c1x sub div def			/theta slope 1 atan def			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if		} ifelse		gsave		clippath		c1x c1y translate		theta rotate		-90 rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax xdf		/xMax xdf		/yMin xdf		/xMin xdf		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			/max { 2 copy gt { pop } {exch pop} ifelse } bdf			/min { 2 copy lt { pop } {exch pop} ifelse } bdf			rampdict begin			40 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			c1x c1y translate			theta rotate			-90 rotate			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def			/c1y 0 def			/c1x 0 def			/c2x 0 def			ext0			{				0 getrampcolor				c2y r2 add r1 sub 0.0001 lt				{					c1x c1y r1 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2y r1 add r2 le					{						c1x c1y r1 0 360 arc						fill					}					{						c2x c2y r2 0 360 arc fill						r1 r2 eq						{							/p1x r1 neg def							/p1y c1y def							/p2x r1 def							/p2y c1y def							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto							fill						}						{							/AA r2 r1 sub c2y div def							AA -1 eq							{ /theta 89.99 def}							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}							ifelse							/SS1 90 theta add dup sin exch cos div def							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def							/p1y p1x SS1 div neg def							/SS2 90 theta sub dup sin exch cos div def							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def							/p2y p2x SS2 div neg def							r1 r2 gt							{								/L1maxX p1x yMin p1y sub SS1 div add def								/L2maxX p2x yMin p2y sub SS2 div add def							}							{								/L1maxX 0 def								/L2maxX 0 def							} ifelse							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto							L1maxX L1maxX p1x sub SS1 mul p1y add lineto							fill						} ifelse					} ifelse				} ifelse			} if		c1x c2x sub dup mul		c1y c2y sub dup mul		add 0.5 exp		0 dtransform		dup mul exch dup mul add 0.5 exp 72 div		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		1 index 1 index lt { exch } if pop		/hires xdf		hires mul		/numpix xdf		/numsteps NumSamples def		/rampIndxInc 1 def		/subsampling false def		numpix 0 ne		{			NumSamples numpix div 0.5 gt			{				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def				/rampIndxInc NumSamples 1 sub numsteps div def				/subsampling true def			} if		} if		/xInc c2x c1x sub numsteps div def		/yInc c2y c1y sub numsteps div def		/rInc r2 r1 sub numsteps div def		/cx c1x def		/cy c1y def		/radius r1 def		newpath		xInc 0 eq yInc 0 eq rInc 0 eq and and		{			0 getrampcolor			cx cy radius 0 360 arc			stroke			NumSamples 1 sub getrampcolor			cx cy radius 72 hires div add 0 360 arc			0 setlinewidth			stroke		}		{			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				cx cy radius 0 360 arc				/cx cx xInc add def				/cy cy yInc add def				/radius radius rInc add def				cx cy radius 360 0 arcn				eofill				rampIndxInc add			} repeat			pop		} ifelse		ext1		{			c2y r2 add r1 lt			{				c2x c2y r2 0 360 arc				fill			}			{				c2y r1 add r2 sub 0.0001 le				{					c2x c2y r2 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2x c2y r2 0 360 arc fill					r1 r2 eq					{						/p1x r2 neg def						/p1y c2y def						/p2x r2 def						/p2y c2y def						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto						fill					}					{						/AA r2 r1 sub c2y div def						AA -1 eq						{ /theta 89.99 def}						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}						ifelse						/SS1 90 theta add dup sin exch cos div def						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def						/p1y c2y p1x SS1 div sub def						/SS2 90 theta sub dup sin exch cos div def						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def						/p2y c2y p2x SS2 div sub def						r1 r2 lt						{							/L1maxX p1x yMax p1y sub SS1 div add def							/L2maxX p2x yMax p2y sub SS2 div add def						}						{							/L1maxX 0 def							/L2maxX 0 def						}ifelse						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto						L1maxX L1maxX p1x sub SS1 mul p1y add lineto						fill					} ifelse				} ifelse			} ifelse		} if		grestore		grestore		end		end		end		} ifelse	} bdf	/GenStrips	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/y2 xdf		/x2 xdf		/y1 xdf		/x1 xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		x1 x2 eq		{			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope y2 y1 sub x2 x1 sub div def			/theta slope 1 atan def			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if		}		ifelse		gsave		clippath		x1 y1 translate		theta rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax exch def		/xMax exch def		/yMin exch def		/xMin exch def		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			rampdict begin			20 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			x1 y1 translate			theta rotate			/xStart 0 def			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def			/ySpan yMax yMin sub def			/numsteps NumSamples def			/rampIndxInc 1 def			/subsampling false def			xStart 0 transform			xEnd 0 transform			3 -1 roll			sub dup mul			3 1 roll			sub dup mul			add 0.5 exp 72 div			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			1 index 1 index lt { exch } if pop			mul			/numpix xdf			numpix 0 ne			{				NumSamples numpix div 0.5 gt				{					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def					/rampIndxInc NumSamples 1 sub numsteps div def					/subsampling true def				} if			} if			ext0			{				0 getrampcolor				xMin xStart lt				{					xMin yMin xMin neg ySpan rectfill				} if			} if			/xInc xEnd xStart sub numsteps div def			/x xStart def			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				x yMin xInc ySpan rectfill				/x x xInc add def				rampIndxInc add			} repeat			pop			ext1 {				xMax xEnd gt				{					xEnd yMin xMax xEnd sub ySpan rectfill				} if			} if			grestore			grestore			end			end			end		} ifelse	} bdf}def/page_trailer{	end}def/doc_trailer{}def/capture_currentpagedevice {	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf} defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup //Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA get_csa_by_name setcolorspace_opt		set_crd	end}def/map_csa{	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse	{pop}{get_csa_by_name /MappedCSA xdf}ifelse} def/setsepcolor{ 	/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/setdevicencolor{ 	/devicen_colorspace_dict AGMCORE_gget begin		Names length copy		Names length 1 sub -1 0		{			/devicen_tints AGMCORE_gget 3 1 roll xpt		} for		TintProc	end} def/sep_colorspace_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	CSA map_csa	/AGMCORE_sep_special Name dup () eq exch (All) eq or store	AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx							AGMCORE_host_sep{								AGMCORE_is_cmyk_sep								/Name cvx 								/AGMCORE_IsSeparationAProcessColor load /exec cvx								/not cvx /and cvx 							}{								Name inRip_spot_has_ink not							}ifelse							[		 						/pop cvx 1							] cvx /if cvx							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc {setcolor} bdf						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/additive_blend{  	3 dict begin  	/numarrays xdf  	/numcolors xdf  	0 1 numcolors 1 sub  		{  		/c1 xdf  		1  		0 1 numarrays 1 sub  			{			1 exch add /index cvx  			c1 /get cvx /mul cvx  			}for 		numarrays 1 add 1 /roll cvx   		}for 	numarrays [/pop cvx] cvx /repeat cvx  	end}def/subtractive_blend{	3 dict begin	/numarrays xdf	/numcolors xdf	0 1 numcolors 1 sub		{		/c1 xdf		1 1		0 1 numarrays 1 sub			{			1 3 3 -1 roll add /index cvx  			c1 /get cvx /sub cvx /mul cvx			}for		/sub cvx		numarrays 1 add 1 /roll cvx		}for	numarrays [/pop cvx] cvx /repeat cvx	end}def/exec_tint_transform{	/TintProc [		/TintTransform cvx /setcolor cvx	] cvx bdf	MappedCSA setcolorspace_opt} bdf/devn_makecustomcolor{	2 dict begin	/names_index xdf	/Names xdf	1 1 1 1 Names names_index get findcmykcustomcolor	/devicen_tints AGMCORE_gget names_index get setcustomcolor	Names length {pop} repeat	end} bdf/setdevicencolorspace{ 	dup /AliasedColorants known {false}{true}ifelse 	current_spot_alias and {		7 dict begin		/names_index 0 def		dup /names_len exch /Names get length def		/new_names names_len array def		/new_LookupTables names_len array def		/alias_cnt 0 def		dup /Names get		{			dup map_alias {				exch pop				dup /ColorLookup known {					dup begin					new_LookupTables names_index ColorLookup put					end				}{					dup /Components known {						dup begin						new_LookupTables names_index Components put						end					}{						dup begin						new_LookupTables names_index [null null null null] put						end					} ifelse				} ifelse				new_names names_index 3 -1 roll /Name get put				/alias_cnt alias_cnt 1 add def 			}{				/name xdf								new_names names_index name put				dup /LookupTables known {					dup begin					new_LookupTables names_index LookupTables names_index get put					end				}{					dup begin					new_LookupTables names_index [null null null null] put					end				} ifelse			} ifelse			/names_index names_index 1 add def 		} forall		alias_cnt 0 gt {			/AliasedColorants true def			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def			0 1 names_len 1 sub {				/names_index xdf				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {					/AliasedColorants false def					exit				}				{					new_LookupTables names_index get 0 get null eq {						dup /Names get names_index get /name xdf						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq						or or or not {							/AliasedColorants false def							exit						} if					} if				} ifelse			} for			lut_entry_len 1 eq {				/AliasedColorants false def			} if			AliasedColorants {				dup begin				/Names new_names def				/LookupTables new_LookupTables def				/AliasedColorants true def				/NComponents lut_entry_len def				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def				currentdict /TTTablesIdx known not {					/TTTablesIdx -1 def				} if				end			} if		}if		end	} if	dup /devicen_colorspace_dict exch AGMCORE_gput	begin	currentdict /AliasedColorants known {		AliasedColorants	}{		false	} ifelse	dup not {		CSA map_csa	} if	/TintTransform load type /nulltype eq or {		/TintTransform [			0 1 Names length 1 sub				{				/TTTablesIdx TTTablesIdx 1 add def				dup LookupTables exch get dup 0 get null eq					{					1 index					Names exch get					dup (Cyan) eq						{						pop exch						LookupTables length exch sub						/index cvx						0 0 0						}						{						dup (Magenta) eq							{							pop exch							LookupTables length exch sub							/index cvx							0 /exch cvx 0 0							}							{							(Yellow) eq								{								exch								LookupTables length exch sub								/index cvx								0 0 3 -1 /roll cvx 0								}								{								exch								LookupTables length exch sub								/index cvx								0 0 0 4 -1 /roll cvx								} ifelse							} ifelse						} ifelse					5 -1 /roll cvx /astore cvx					}					{					dup length 1 sub					LookupTables length 4 -1 roll sub 1 add					/index cvx /mul cvx /round cvx /cvi cvx /get cvx					} ifelse					Names length TTTablesIdx add 1 add 1 /roll cvx				} for			Names length [/pop cvx] cvx /repeat cvx			NComponents Names length  			TintMethod /Subtractive eq  				{  				subtractive_blend  				}  				{  				additive_blend  				} ifelse		] cvx bdf	} if	AGMCORE_host_sep {		Names convert_to_process {			exec_tint_transform		}		{				currentdict /AliasedColorants known {				AliasedColorants not			}{				false			} ifelse			5 dict begin			/AvoidAliasedColorants xdf			/painted? false def			/names_index 0 def			/names_len Names length def			AvoidAliasedColorants {				/currentspotalias current_spot_alias def				false set_spot_alias			} if			Names {				AGMCORE_is_cmyk_sep {					dup (Cyan) eq AGMCORE_cyan_plate and exch					dup (Magenta) eq AGMCORE_magenta_plate and exch					dup (Yellow) eq AGMCORE_yellow_plate and exch					(Black) eq AGMCORE_black_plate and or or or {						/devicen_colorspace_dict AGMCORE_gget /TintProc [							Names names_index /devn_makecustomcolor cvx						] cvx ddf						/painted? true def					} if					painted? {exit} if				}{					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {					/devicen_colorspace_dict AGMCORE_gget /TintProc [						Names names_index /devn_makecustomcolor cvx					] cvx ddf					/painted? true def					exit					} if				} ifelse				/names_index names_index 1 add def			} forall			AvoidAliasedColorants {				currentspotalias set_spot_alias			} if			painted? {				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put			}{				/devicen_colorspace_dict AGMCORE_gget /TintProc [					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx 					0 0 0 0 /setcmykcolor cvx				] cvx ddf			} ifelse			end		} ifelse	}	{		AGMCORE_in_rip_sep {			Names convert_to_process not		}{			level3		} ifelse		{			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt			/TintProc level3 not AGMCORE_in_rip_sep and {				[					Names /length cvx [/pop cvx] cvx /repeat cvx				] cvx bdf			}{				{setcolor} bdf			} ifelse		}{			exec_tint_transform		} ifelse	} ifelse	set_crd	/AliasedColorants false def	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		currentdict /CSDBase known {			CSDBase /CSD get_res begin			currentdict /Names known {				currentdict devncs			}{				1 currentdict sepcs			} ifelse			AGMCORE_host_sep{				4 dict begin				/compCnt /Names where {pop Names length}{1}ifelse def				/NewLookup HiVal 1 add string def				0 1 HiVal {					/tableIndex xdf					Lookup dup type /stringtype eq {						compCnt tableIndex map_index					}{						exec					} ifelse					/Names where {						pop setdevicencolor					}{						setsepcolor					} ifelse					currentgray					tableIndex exch					HiVal mul cvi 					NewLookup 3 1 roll put				} for				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt				end			}{				level3				{					currentdict /Names known {						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt					}{						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt					} ifelse				}{				[/Indexed MappedCSA HiVal					[					currentdict /Names known {						Lookup dup type /stringtype eq							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}							{/exec cvx}ifelse							/TintTransform load /exec cvx					}{						Lookup dup type /stringtype eq							{/exch cvx /get cvx 255 /div cvx}							{/exec cvx}ifelse							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx					} ifelse					]cvx				]setcolorspace_opt				}ifelse			} ifelse			end			set_crd		}		{			CSA map_csa			AGMCORE_host_sep level2 not and{				0 0 0 0 setcmykcolor			}{				[/Indexed MappedCSA 				level2 not has_color not and{					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{						pop [/DeviceGray]					}if					HiVal GrayLookup				}{					HiVal 					currentdict/RangeArray known{						{ 							/indexed_colorspace_dict AGMCORE_gget begin							Lookup exch 							dup HiVal gt{								pop HiVal							}if							NComponents mul NComponents getinterval {} forall							NComponents 1 sub -1 0{								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range								NComponents 1 roll							}for							end						} bind					}{						Lookup					}ifelse				}ifelse				] setcolorspace_opt				set_crd			}ifelse		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep {		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 			begin			CSDBase /CSD get_res begin			currentdict /Names known{				map_indexed_devn				devn			}			{				Lookup 1 3 -1 roll map_index				sep			}ifelse			end			end		}{			/Lookup get 4 3 -1 roll map_index setcmykcolor		} ifelse	}{		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin			map_indexed_devn			devn			end		}		{			setcolor		} ifelse	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave		dup clonedict begin		1 setgray		/Decode [0 1] def		/DataSource <FF> def		/MultipleDataSources false def		/BitsPerComponent 8 def		currentdict end		systemdict /image get exec		grestore		}if	consumeimagedata}def/add_res{	dup /CSD eq {		pop 		//Adobe_AGM_Core begin		/AGMCORE_CSD_cache load 3 1 roll put		end	}{		defineresource pop	} ifelse}def/del_res{	{		aload pop exch		dup /CSD eq {			pop 			{				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef			}forall		}{			exch			{				1 index undefineresource			}forall			pop		} ifelse	} forall}def/get_res{	dup /CSD eq {		pop		dup type dup /nametype eq exch /stringtype eq or {			AGMCORE_CSD_cache exch get		} if	}{		findresource	} ifelse}def/get_csa_by_name{	dup type dup /nametype eq exch /stringtype eq or{		/CSA get_res	} if}def/pattern_buf_init{	/count get 0 0 put} def/pattern_buf_next{	dup /count get dup 0 get	dup 3 1 roll	1 add 0 xpt	get				} def/cachepattern_compress{	5 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	/string_size 16000 def	/readbuffer string_size string def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	/LZWFilter 	{		exch		dup length 0 eq {			pop		}{			patarray dup length 1 sub 3 -1 roll put		} ifelse		{string_size}{0}ifelse string	} /LZWEncode filter def	{ 				ReadFilter readbuffer readstring		exch LZWFilter exch writestring		not {exit} if	} loop	LZWFilter closefile	patarray					end}def/cachepattern{	2 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	{		ReadFilter 16000 string readstring exch		patarray dup length 1 sub 3 -1 roll put		not {exit} if	} loop	patarray dup dup length 1 sub () put						end	}def/wrap_paintproc{   statusdict /currentfilenameextend known{	clonedict	begin	/OldPaintProc /PaintProc load def	/PaintProc	{		mark exch		dup /OldPaintProc get stopped		{closefile restore end} if		cleartomark	}  def	end  } {pop} ifelse} def/make_pattern{	exch clonedict exch	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix			  1 index begin		BBox 0 get XStep div cvi XStep mul /xshift exch neg def		BBox 1 get YStep div cvi YStep mul /yshift exch neg def		BBox 0 get xshift add		BBox 1 get yshift add		BBox 2 get xshift add		BBox 3 get yshift add		4 array astore		/BBox exch def		[ xshift yshift /translate load null /exec load ] dup		3 /PaintProc load put cvx /PaintProc exch def		end	1 index dup /ID get exch /Pattern add_res	gsave 0 setgray	makepattern	grestore}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{	currentcolorrendering/RenderingIntent known{		currentcolorrendering/RenderingIntent get	}{null}ifelse	Intent ne {		Intent /ColorRendering {findresource} stopped		{			pop pop systemdict /findcolorrendering known			{				Intent findcolorrendering pop				/ColorRendering findresource 				true			}			{false} ifelse		}		{true} ifelse		{			dup begin			currentdict /TransformPQR known {				currentdict /TransformPQR get aload pop				3 {{} eq 3 1 roll} repeat or or			}			{true} ifelse			currentdict /MatrixPQR known {				currentdict /MatrixPQR get aload pop				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq				and and and and and and and and			}			{true} ifelse			end			or			{				clonedict begin				/TransformPQR [					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind				] def				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def				currentdict end			} if			setcolorrendering_opt		} if			}if} def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict /ColorRendering known{			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse		currentcolorspace dup type /arraytype eq			{0 get}if		/DeviceRGB eq			{			currentdict/UCR known				{/UCR}{/AGMCORE_currentucr}ifelse			load setundercolorremoval			currentdict/BG known 				{/BG}{/AGMCORE_currentbg}ifelse			load setblackgeneration			}if	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		clonedict		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cpaint_gcomp{	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/set_spot_alias_ary{	dup inherit_aliases	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf}def/set_spot_normalization_ary{	dup inherit_aliases	dup length	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if	array	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf	/AGMCORE_SpotAliasAry where{		pop		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval		AGMCORE_SpotAliasAry length	}{0} ifelse	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval	true set_spot_alias}def/inherit_aliases{	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall}def/set_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry2 where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry2{				dup/Name get AGMCORE_name eq{					/CSD get /CSD get_res					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias	/AGMCORE_&setcustomcolor AGMCORE_key_known not {		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput	//Adobe_AGM_Core begin	/setcustomcolor	{		currentdict/TintProc known currentdict/CSA known and 3 1 roll		//Adobe_AGM_Core begin		dup /customcolor_tint exch AGMCORE_gput		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not		current_spot_alias and{1 index 4 get map_alias}{false}ifelse		{			false set_spot_alias			4 -1 roll{				exch pop /sep_tint AGMCORE_gget exch			}if			mark 3 1 roll			setsepcolorspace			counttomark 0 ne{				setsepcolor			}if			pop			pop			true set_spot_alias		}{			AGMCORE_&setcustomcolor			pop		}ifelse		end	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	//Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		initializepage		/initializepage{}def		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if	/mysetup where {		/mysetup [1 0 0 1 0 0] put	}if	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put	level2		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if}def/driver_check_media_override{	/PrepsDict where		{pop}		{		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq			{			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and			}if			{			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix			}if		}ifelse}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defend/set_def_ht{	AGMCORE_def_ht sethalftone} defendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.25 0%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.25 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }ifuserdict /Adobe_CoolType_Core 60 dict dup begin put/Adobe_CoolType_Version 2.25 def/Level2?	systemdict /languagelevel known dup		{ pop systemdict /languagelevel get 2 ge }	if defLevel2? not	{	/currentglobal false def	/setglobal /pop load def	/gcheck { pop false } bind def	/currentpacking false def	/setpacking /pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict /Adobe_CoolType_Data 2 copy known not	 { 2 copy 10 dict put }ifget	 begin	 /@opStackCountByLevel 32 dict def	 /@opStackLevel 0 def	 /@dictStackCountByLevel 32 dict def	 /@dictStackLevel 0 def	 endsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup /args			7 index			5 add array put			put get			}			{			get dup /args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch /args exch put				}				{ pop }			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{ pop count }			if			dup /argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{ pop }			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	} bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{ { pop } repeat }				{ pop }			ifelse			args 0 argCount getinterval {} forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{ { end } repeat }		{ pop }	ifelse	} bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	} bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	} bind def/@ReRaise	{	cvx $error /errorname get errordict exch get exec	stop	} bind def/@Stopped	{	0 @#Stopped	} bind def/@#Stopped	{	@_SaveStackLevels	stopped		{ @_RestoreStackLevels true }		{ @_PopStackLevels false }	ifelse	} bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	} bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					 { (*) { pop stop } 128 string /Category resourceforall }				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup					 {						  /@shouldNotDisappearDictValue known								{										  {												end												currentdict 1 index eq													 { pop exit }												if										  }									 loop								}						  if					 }				if				end		}		{ false }	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{ /steveamerige /Category resourcestatus }		stopped			{ cleartomark true }			{ cleartomark currentglobal not }		ifelse		}		{ false }	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec				{ cleartomark false }				{ { 3 2 roll pop true } { cleartomark false } ifelse }			ifelse			end		} bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad /ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup /CMap CTHasResourceStatusBug						{ CTResourceStatus }						{ resourcestatus }					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup /CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{ exit }								{ stop }							ifelse							}						ifelse						}						{ pop }					ifelse					}				128 string /CMap resourceforall				}			stopped				{ cleartomark }			stopped pop			setglobal			}		if		}	if	} bind def/doc_setup	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mov /moveto load def		/nfnt /newencodedfont load def		/mfnt /makefont load def		/sfnt /setfont load def		/ufnt /undefinefont load def		/chp /charpath load def		/awsh /awidthshow load def		/wsh /widthshow load def		/ash /ashow load def		/sh /show load def		end		currentglobal false setglobal	  userdict /Adobe_CoolType_Data 2 copy known not		  { 2 copy 10 dict put }		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	} bind def/doc_trailer	{	currentdict Adobe_CoolType_Core eq		{ end }	if	} bind def/page_setup	{	Adobe_CoolType_Core begin	} bind def/page_trailer	{	end	} bind def/unload	{	systemdict /languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{ undef }				{ pop pop }			ifelse			}		if		}	if	} bind def/ndf	{	1 index where		{ pop pop pop }		{ dup xcheck { bind } if def }	ifelse	} def/findfont systemdict	begin	userdict		begin		/globaldict where { /globaldict get begin } if			dup where pop exch get		/globaldict where { pop end } if		end	endAdobe_CoolType_Core_Defined	{ /systemfindfont exch def }	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{ pop } ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq { 0 } { dup length } ifelse	2 index length add 1 add dict		begin		exch			{			1 index /FID eq				{ pop pop }				{ def }			ifelse			}		forall		dup null eq			{ pop }			{ { def } forall }		ifelse		currentdict		end	exch setglobal	} bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	} bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index  known			{ SharedFontDirectory 3 index get /FontReferenced known }			{ false }		ifelse		}		{		FontDirectory 3 index known			{ FontDirectory 3 index get /FontReferenced known }			{			SharedFontDirectory 3 index known				{ SharedFontDirectory 3 index get /FontReferenced known }				{ false }			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont /FontReferenced get		2 index dup type /nametype eq			{findfont}		if ne			{ pop false }		if		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{ 2 copy get 3 index 3 1 roll put }		for		pop pop pop		}		{		dup type /nametype eq		  { findfont }	  if		dup dup maxlength 2 add dict			begin			exch				{				1 index /FID ne					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type /stringtype eq { cvn } if def dup			currentdict			end		definefont def		}	ifelse	} bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type /dicttype ne			{ 0 dict }		if		currentdict /$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{ def } forall					{ def } forall					currentdict					dup /$Init known						{ dup /$Init get exec }					if					end				/$Strategy exch def				}				{ pop pop pop }			ifelse			}			{ pop pop }		ifelse		end	} bind def/scff	{	$SubstituteFont		begin		dup type /stringtype eq			{ dup length exch }			{ null }		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{ $sname }			ifelse def		end		{ findfont }	@Stopped		{		dup length 8 add string exch		1 index 0 (BadFont:) putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{ findfont }		@Stopped			{ pop /Courier findfont }		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	} bind def/isWidthsOnlyFont	{	dup /WidthsOnly known		{ pop pop true }		{		dup /FDepVector known			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }			{			dup /FDArray known				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }				{ pop }			ifelse			}		ifelse		}	ifelse	} bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 4 index def		/$doSmartSub false def		end	3 index	currentglobal false setglobal exch	/CompatibleFonts /ProcSet resourcestatus		{		pop pop		/CompatibleFonts /ProcSet findresource			begin			dup /CompatibleFont currentexception			1 index /CompatibleFont true setexception			1 index /Font resourcestatus				{				pop pop				3 2 roll setglobal				end				exch				dup findfont				/CompatibleFonts /ProcSet findresource					begin					3 1 roll exch /CompatibleFont exch setexception					end				}				{				3 2 roll setglobal				1 index exch /CompatibleFont exch setexception				end				findfont				$SubstituteFont /$substituteFound true put				}			ifelse		}		{ exch setglobal findfont }	ifelse	$SubstituteFont		begin		$substituteFound			{		 false		 (%%[Using embedded font ) print		 5 index ?str1 cvs print		 ( to avoid the font substitution problem noted earlier.]%%\n) print		 }			{			dup /FontName known				{				dup /FontName get $fontname eq				1 index /DistillerFauxFont known not and				/currentdistillerparams where					{ pop false 2 index isWidthsOnlyFont not and }				if				}				{ false }			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		exch pop exch pop exch		2 dict dup /Found 3 index put		exch findfont exch		}		{		exch exec		exch dup findfont		dup /FontType get 3 eq	  {		  exch ?str1 cvs		  dup length 1 sub		  -1 0		{			  exch dup 2 index get 42 eq			{				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop				 exit			  }			  {exch pop} ifelse		  }for		}		{		 exch pop	  } ifelse		2 dict dup /Downloaded 6 5 roll put		}	ifelse	dup /FontName 4 index put copyfont definefont pop	} bind def/?str2 256 string def/?add	{	1 index type /integertype eq		{ exch true 4 2 }		{ false 3 1 }	ifelse	roll	1 index findfont	dup /Widths known		{		Adobe_CoolType_Data /AddWidths? true put		gsave dup 1000 scalefont setfont		}	if	/Downloaded known		{		exec		exch			{			exch ?str2 cvs exch			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length			?str1 1 index 1 add 3 index putinterval			exch length 1 add 1 index add			?str1 2 index (*) putinterval			?str1 0 2 index getinterval cvn findfont 			?str1 3 index (+) putinterval			2 dict dup /FontName ?str1 0 6 index getinterval cvn put			dup /Downloaded Downloaded put end copyfont			dup /FontName get exch definefont pop pop pop			}			{			pop			}		ifelse		}		{		pop		exch			{			findfont			dup /Found get			dup length exch ?str1 cvs pop			?str1 1 index (+) putinterval			?str1 1 index 1 add 4 index ?str2 cvs putinterval			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn			1 dict exch 1 index exch /FontName exch put copyfont			dup /FontName get exch definefont pop			}			{			pop			}		ifelse		}	ifelse	Adobe_CoolType_Data /AddWidths? get		{ grestore Adobe_CoolType_Data /AddWidths? false put }	if	} bind def/?sh	{	currentfont /Downloaded known { exch } if pop	} bind def/?chp	{	currentfont /Downloaded known { pop } { false chp } ifelse	} bind def/?mv 	{	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse	} bind defsetpackinguserdict /$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{ get }			{ pop pop { pop /Courier } bind }		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams /CannotEmbedFontPolicy 2 copy known			{ get /Error eq }			{ pop pop false }		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup /WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type /stringtype eq { cvn } if def								/FontType 3 def								/FontMatrix [ .001 0 0 .001 0 0 ] def								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def								/FontBBox [ 0 0 0 0 ] def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth /y exch def /x exch def											x y setcharwidth											$SubstituteFont /$Strategy get /$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									} bind def								currentdict								end							exch setglobal							} bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup /WMode known										{ dup /WMode get }										{ 0 }									ifelse									/$WMode exch def									$fontname exch									dup /FontName known										{										dup /FontName get										dup type /stringtype eq { cvn } if										}										{ /unnamedfont }									ifelse									exch									Adobe_CoolType_Data /InVMDeepCopiedFonts get									1 index /FontName get known										{										pop										Adobe_CoolType_Data /InVMDeepCopiedFonts get										1 index get										null copyfont										}										{ $deepcopyfont }									ifelse									exch 1 index exch /FontBasedOn exch put									dup /FontName $fontname dup type /stringtype eq { cvn } if put									definefont									Adobe_CoolType_Data /InVMDeepCopiedFonts get										begin										dup /FontBasedOn get 1 index def										end									} bind def								/$Underprint									{									gsave									x abs y abs gt										{ /y 1000 def }										{ /x -1000 def 500 120 translate }									ifelse									Level2?										{										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]										setcolorspace										}										{ 0 setgray }									ifelse									10 setlinewidth									x .8 mul									[ 7 3 ]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{ .2 setcolor }											{ .8 setgray }										ifelse										fill grestore										stroke										}									forall									pop									grestore									} bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict /FontName known											{											FontName											dup type /stringtype eq { cvn } if											}											{ /unnamedfont }										ifelse										def										/FontName $fontname dup type /stringtype eq { cvn } if def										/currentdistillerparams where											{ pop }											{											/FontInfo currentdict /FontInfo known												{ FontInfo null copyfont }												{ 2 dict }											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									} bind def								end def						/$None							1 dict dup								begin								/$BuildFont {} bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type /stringtype eq { cvn } if						dup /$fontname exch def						$sname null eq							{ $str cvs dup length $slen sub $slen getinterval }							{ pop $sname }						ifelse						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont /$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{ /$match exch def exit }							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont /$dstack get								{								exch									{									1 index eq										{ pop false }										{ true }									ifelse									}									{ begin false }								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{ $match (fonts/) anchorsearch pop pop cvn }							{ /Courier }						ifelse						} bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1  [ /Ryumin-Light /HeiseiMin-W3										  /GothicBBB-Medium /HeiseiKakuGo-W5										  /HeiseiMaruGo-W4 /Jun101-Light ] def							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def							/GB1	  [ /STSong-Light /STHeiti-Regular ] def							/CNS1	 [ /MKai-Medium /MHei-Medium ] def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup /FontType get 0 eq							{							1 dict dup /FontName /copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup /FontName /copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{ $Strategies /$Type3Underprint get exec }						ifelse						} bind def					/$buildfontname						{						dup /CIDFont findresource /CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index (-) putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy (-) putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }							{ pop pop pop pop pop }						ifelse						length						$str 1 index (-) putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						} bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{ get }								{ pop pop [] }							ifelse							}							{ pop pop [] }						ifelse						false exch							{							dup /CIDFont resourcestatus								{								pop pop								save								1 index /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get }									{ false }								ifelse								exch pop								exch restore									{ pop }									{ exch pop true exit }								ifelse								}								{ pop }							ifelse							}						forall							{ $str cvs $buildfontname }							{							false (*)								{								save exch								dup /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get not }									{ true }								ifelse								exch /CIDSystemInfo get								dup /Registry get Registry eq								exch /Ordering get Ordering eq and and									{ exch restore exch pop true exit }									{ pop restore }								ifelse								}							$str /CIDFont resourceforall								{ $buildfontname }								{ $fontname $findfontByEnum }							ifelse							}						ifelse						} bind def					end				end				currentdict /$error known currentdict /languagelevel known and dup					{ pop $error /SubstituteFont known }				if				dup					{ $error }					{ Adobe_CoolType_Core }				ifelse				begin					{					/SubstituteFont					/CMap /Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{ dup $str cvs dup length $slen sub $slen getinterval cvn }									{ $sname }								ifelse								Adobe_CoolType_Data /InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{ exch pop true exit }												{ pop }											ifelse											}											{											FontDirectory 1 index known												{ exch pop true exit }												{												GlobalFontDirectory 1 index known													{ exch pop true exit }													{ pop }												ifelse												}											ifelse											}										ifelse										}									forall									}									{ pop pop false }								ifelse									{									exch pop exch pop									}									{									dup /CMap resourcestatus										{										pop pop										dup /$cmapname exch def										/CMap findresource /CIDSystemInfo get { def } forall										$findfontByROS										}										{										128 string cvs										dup (-) search											{											3 1 roll search												{												3 1 roll pop													{ dup cvi }												stopped													{ pop pop pop pop pop $findfontByEnum }													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup /CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup /$cmapname exch def															/CMap findresource /CIDSystemInfo get { def } forall															$findfontByROS															true exit															}															{ pop }														ifelse														}													for													dup type /booleantype eq														{ pop }														{ pop pop pop $findfontByEnum }													ifelse													}												ifelse												}												{ pop pop pop $findfontByEnum }											ifelse											}											{ pop pop $findfontByEnum }										ifelse										}									ifelse									}								ifelse								}								{ //SubstituteFont exec }							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{ $findfontByEnum }								{ //SubstituteFont exec }							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core /scfindfont /systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup /FontName known								{ dup /FontName get dup 3 index ne }								{ /noname true }							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def /$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{ 1 index /FID eq { pop pop } { def } ifelse }										forall										currentdict										end									definefont									dup /FontName known { dup /FontName get } { null } ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using ) print										dup /FontName known											{ dup /FontName get } { (unspecified font) }										ifelse										$str cvs print (.\n) print										}									if									}									{ exch pop }								ifelse								}								{ exch pop }							ifelse							end						} bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core /findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type /stringtype ne { $str cvs } if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{ dup $inVMIndex $AddInVMFont }						if						$doSmartSub							{							currentdict /$Strategy known								{ $Strategy /$BuildFont get exec }							if							}						if						}					if					end				} bind put			}		if		}	if	end/$AddInVMFont	{	exch /FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data /InVMFontsByCMap get exch		$DictAdd		}		{ pop pop pop }	ifelse	} bind def/$DictAdd	{	2 copy known not		{ 2 copy 4 index length dict put }	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get { forall } def				2 copy currentdict put				end			}			{ pop }		ifelse		}	if	get		begin			{ def }		forall		end	} bind defendend%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.%%Version: 1.21 0systemdict /languagelevel known dup	{ currentglobal false setglobal }	{ false }ifelseexchuserdict /Adobe_CoolType_Utility 2 copy known	{ 2 copy get dup maxlength 27 add dict copy }	{ 27 dict }ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch /eCCRun known not			ct_Level2? and or defct_Level2?	{ globaldict begin currentglobal true setglobal }if	/ct_AddStdCIDMap		ct_Level2?			{ {				mark				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put					 {					 ((Hex) 57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec					 }				stopped					 {					 cleartomark					 Adobe_CoolType_Utility /@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						  {						  2 copy get 3 index eq								{ 1 index length exch sub 1 sub { end } repeat exit }								{ pop }						  ifelse						  }					 for					 pop pop					 Adobe_CoolType_Utility /@eexecStartData get eexec					 }					 { cleartomark }				ifelse			} }			{ {				Adobe_CoolType_Utility /@eexecStartData get eexec			} }		ifelse bind defuserdict /cid_extensions knowndup { cid_extensions /cid_UpdateDB known and } if	 {	 cid_extensions	 begin	 /cid_GetCIDSystemInfo		 {		 1 index type /stringtype eq			 { exch cvn exch }		 if		 cid_extensions			 begin			 dup load 2 index known				 {				 2 copy				 cid_GetStatusInfo				 dup null ne					 {					 1 index load					 3 index get					 dup null eq						  { pop pop cid_UpdateDB }						  {						  exch						  1 index /Created get eq							  { exch pop exch pop }							  { pop cid_UpdateDB }						  ifelse						  }					 ifelse					 }					 { pop cid_UpdateDB }				 ifelse				 }				 { cid_UpdateDB }			 ifelse			 end		 } bind def	 end	 }ifct_Level2?	{ end setglobal }if	/ct_UseNativeCapability?  systemdict /composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring () def		/usewidths? true def		end def	ct_Level2? { setglobal } { pop } ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict /languagelevel known				{ pop /CIDFont findresource /GlyphDirectory get }				{				1 index /CIDFont findresource /GlyphDirectory				get dup type /dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			} def		/+			{			systemdict /languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{ 1 dict begin }			ifelse			/$ exch def			systemdict /languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			? { $ begin } if			} def		/? { $ type /dicttype eq } def		/| {			userdict /Adobe_CoolType_Data known				{			Adobe_CoolType_Data /AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					  begin						AddWidths?								{								Adobe_CoolType_Data /CC 3 index put								? { def } { $ 3 1 roll put } ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont /Widths get exch CC exch put								}								{ ? { def } { $ 3 1 roll put } ifelse }							ifelse					end				end				}				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse				}				{ ? { def } { $ 3 1 roll put } ifelse }			ifelse			} def		/!			{			? { end } if			systemdict /languagelevel known				{ gvm setglobal }			if			end			} def		/: { string currentfile exch readstring pop } executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx [.001 0 0 .001 0 0] def		/ct_1000Mtx [1000 0 0 1000 0 0] def		/ct_raise {exch cvx exch errordict exch get exec stop} bind def		/ct_reraise			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print					errordict exch get exec stop			} bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			} bind def		/ct_GetInterval			{			Adobe_CoolType_Utility /ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{ dup string /dst_string exch def }				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex  get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string  dst_index 2 index putinterval						length dst_index add /dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string  dst_index 2 index putinterval						pop dup dst_index add /dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							  { arrayIndex get }							  {							  pop							  exit							  }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			} bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{ /unknowninstancename /Category resourcestatus }			stopped				{ cleartomark setglobal true }				{ cleartomark currentglobal not exch setglobal }			ifelse				{					{					mark 3 1 roll /Category findresource						begin						ct_Vars /vm currentglobal put						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec							{ cleartomark false }							{ { 3 2 roll pop true } { cleartomark false } ifelse }						ifelse						ct_Vars /vm get setglobal						end					}				}				{ { resourcestatus } }			ifelse bind def			/CIDFont /Category ct_resourcestatus				{ pop pop }				{				currentglobal  true setglobal				/Generic /Category findresource				dup length dict copy				dup /InstanceType /dicttype put				/CIDFont exch /Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit /ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				  /Registry (Adobe) def				  /Ordering (Identity) def				  /Supplement 0 def				end def				/CMapName /Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000> <FFFF>				endcodespacerange				1 begincidrange				<0000> <FFFF> 0				endcidrange				endcmap				CMapName currentdict /CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont  10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{ pop pop /defineresource /undefined ct_raise }				ifelse				} bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{ get 3 1 roll pop pop}						{ pop pop /findresource /undefinedresource ct_raise }					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/ct_resourcestatus /resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup (Binary) eq						{						pop						null						currentfile						ct_Level2?							{								{ cid_BYTE_COUNT () /SubFileDecode filter }							stopped								{ pop pop pop }							if							}						if						/readstring load						exit						}					if					dup (Hex) eq						{						pop						currentfile						ct_Level2?							{								{ null exch /ASCIIHexDecode filter /readstring }							stopped								{ pop exch pop (>) exch /readhexstring }							if							}							{ (>) exch /readhexstring }						ifelse						load						exit						}					if					/StartData /typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch /GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop /readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				} bind def			/StartData				{				mark					{					currentdict					dup /FDArray get 0 get /FontMatrix get					0 get 0.001 eq						{						dup /CDevProc known not							{							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known								{ get }								{								pop pop								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }								}							ifelse							def							}						if						}						{						 /CDevProc							 {							 pop pop pop pop pop							 0							 1 cid_temp /cid_CIDFONT get							 /FDArray get 0 get							 /FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							 } def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup /cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup /SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup /SubrMapOffset undef										dup /SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{ pop }								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict /CIDFont defineresource pop					end end					}				stopped					{ cleartomark /StartData ct_reraise }				if				} bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit /ProcSet ct_resourcestatus				{ true }				{ /CIDInitC /ProcSet ct_resourcestatus }			ifelse				{				pop pop				/CIDInit /ProcSet findresource				ct_UseNativeCapability?					{ pop null }					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }				ifelse				}				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }			ifelse			ct_Vars exch /ct_oldCIDInit exch put			} bind def		/ct_restoreCIDInit			{			ct_Vars /ct_oldCIDInit get dup null ne				{ /CIDInit exch /ProcSet defineresource pop }				{ pop }			ifelse			} bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility /ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{ pop 0 }						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{ get }								{ pop pop nullstring }							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{ 0 FDBytes ct_cvnsi }									{ pop 0 }								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{ /charstring nullstring def exit }								if								/cid 0 def								}							ifelse							}						loop			} def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			} def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont /Widths get cid					2 copy known						{ get exch pop aload pop }						{ pop pop stringwidth }					ifelse					}					{ stringwidth }				ifelse				setcharwidth				0 0 moveto				}			ifelse			} def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{ get }				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup /FontMatrix 2 copy known						{ get }						{ pop pop ct_defaultFontMtx }					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont /Widths get def					/CharStrings 1 dict dup /.notdef						<d841272cf18f54fc13> dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup /CharStrings get 1 index /Encoding get			ct_dfCharCode get charstring put			rootfont /WMode 2 copy known				{ get }				{ pop pop 0 }			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ ct_str1 show }			ifelse			} def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ ct_1000Mtx matrix concatmatrix concat }				{ pop }			ifelse			/Private get			Adobe_CoolType_Utility /ct_Level2? get not				{				ct_dfDict /Private				3 -1 roll					{ put }				1183615869 internaldict /superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility /ct_Level2? get				{ 1 index }				{ 3 index /Private get mark 6 1 roll }			ifelse			dup /RunInt known				{ /RunInt get }				{ pop /CCRun }			ifelse			get exec			Adobe_CoolType_Utility /ct_Level2? get not				{ cleartomark }			if			} bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility /ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{ stop }			if			end			end			end			end			} bind def		/BaseFontNameStr (BF00) def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/BuildChar /ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString /ct_Type3ShowCharString load def				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup /lenIV 4 put def				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def				/PaintType 0 def				/ct_ShowCharString /ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{ exit }				if				}			for			exch pop exch pop			} bind def		/ct_makeocf			{			15 dict				begin				exch /WMode exch def				exch /FontName exch def				/FontType 0 def				/FMapType 2 def			dup /FontMatrix known				{ dup /FontMatrix get /FontMatrix exch def }				{ /FontMatrix matrix def }			ifelse				/bfCount 1 index /CIDCount get 256 idiv 1 add					dup 256 gt { pop 256} if def				/Encoding					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for					bfCount 1 255 { 2 copy bfCount put pop } for					def				/FDepVector bfCount dup 256 lt { 1 add } if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont /FontBBox known						{ CIDFont /FontBBox get /FontBBox exch def }					if					CIDFont /CDevProc known						{ CIDFont /CDevProc get /CDevProc exch def }					if					currentdict					end				BaseFontNameStr 3 (0) putinterval				0 1 bfCount dup 256 eq { 1 sub } if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup /CIDFirstByte exch 256 mul def						FontType 3 eq							{ /ct_FDDict 2 dict def }						if						currentdict						end					1 index  16					BaseFontNameStr  2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont /Widths get						begin						exch /CIDFont get /GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{ exch pop }			ifelse			} bind def		/ct_ComposeFont			{			ct_UseNativeCapability?				{				2 index /CMap ct_resourcestatus					{ pop pop exch pop }					{					/CIDInit /ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch /WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry (Adobe) def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-) search									{									pop pop									(-) search										{										dup length string copy										exch pop exch pop										}										{ pop (Identity)}									ifelse									}									{ pop  (Identity)  }								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000> <FFFF>							endcodespacerange							1 begincidrange							<0000> <FFFF> 0							endcidrange							endcmap							CMapName currentdict /CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index /CMap ct_resourcestatus					{ pop pop }					{					/CIDInit /ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry (Adobe) def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-) search							{							pop pop							(-) search								{ dup length string copy exch pop exch pop }								{ pop (Identity) }							ifelse							}							{ pop (Identity) }						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000> <FFFF>					endcodespacerange					1 begincidrange					<0000> <FFFF> 0					endcidrange					endcmap					CMapName currentdict /CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		currentdict readonly pop		end	end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict /ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{  version  cvi  2015  ge} bind def/AllocGlyphStorage{  Is2015?  {			pop  }   { 		{string} forall  } ifelse} bind def/Type42DictBegin{	25 dict begin  /FontName exch def  /CharStrings 256 dict 	begin		  /.notdef 0 def		  currentdict 	end def  /Encoding exch def  /PaintType 0 def  /FontType 42 def  /FontMatrix [1 0 0 1 0 0] def  4 array  astore cvx /FontBBox exch def  /sfnts} bind def/Type42DictEnd  {	 currentdict dup /FontName get exch definefont end	ct_T42Dict exch	dup /FontName get exch put} bind def/RD {string currentfile exch readstring pop} executeonly def/PrepFor2015{	Is2015?	{		  		 /GlyphDirectory 		 16		 dict def		 sfnts 0 get		 dup		 2 index		 (glyx)		 putinterval		 2 index  		 (locx)		 putinterval		 pop		 pop	}	{		 pop		 pop	} ifelse			} bind def/AddT42Char{	Is2015?	{		/GlyphDirectory get 		begin		def		end		pop		pop	}	{		/sfnts get		4 index		get		3 index	  2 index		putinterval		pop		pop		pop		pop	} ifelse} bind def/T0AddT42Mtx2{	/CIDFont findresource /Metrics2 get begin def end}bind defend%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 75 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd/AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/AGMIMG_maskSource nd/AGMIMG_flushfilters nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/devnimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/devnimg /devn_imageormask ldf	/idximg /indexed_imageormask ldf	/_ctype 7 def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/AGMIMG_flushfilters{	dup type /arraytype ne		{1 array astore}if	aload length		{		dup type /filetype eq			{			dup status 1 index currentfile ne and				{dup flushfile closefile}				{pop}			ifelse			}{pop}ifelse		} repeat}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				use_mask {					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse				}{					AGMIMG_&image				}ifelse			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if		cleartomark restore	end}def/overprint_plate{	currentoverprint {		0 get dup type /nametype eq {			dup /DeviceGray eq{				pop AGMCORE_black_plate not			}{				/DeviceCMYK eq{					AGMCORE_is_cmyk_sep not				}if			}ifelse		}{			false exch			{				 AGMOHS_sepink eq or			} forall			not		} ifelse	}{		pop false	}ifelse}def/process_mask_L3{	dup begin	/ImageType 1 def	end	4 dict begin		/DataDict exch def		/ImageType 3 def		/InterleaveType 3 def		/MaskDict 9 dict begin			/ImageType 1 def			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def			/ImageMatrix [Width 0 0 Height neg 0 Height] def			/NComponents 1 def			/BitsPerComponent 1 def			/Decode [0 1] def			/DataSource AGMIMG_maskSource def		currentdict end def	currentdict end}def/use_mask{	dup type /dicttype eq	{		dup /Mask known	{			dup /Mask get {				level3				{true}				{					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse					3 -1 roll and				} ifelse			}			{false} ifelse		}		{false} ifelse	}	{false} ifelse}def/make_line_source{	begin	MultipleDataSources {		[		Decode length 2 div cvi {Width string} repeat		]	}{		Width Decode length 2 div mul cvi string	}ifelse	end}def/datasource_to_str{	exch dup type	dup /filetype eq {		pop exch readstring	}{		/arraytype eq {			exec exch copy		}{			pop		}ifelse	}ifelse	pop}def/masked_image_simulation{	3 dict begin	dup make_line_source /line_source xdf	/mask_source AGMIMG_maskSource /LZWDecode filter def	dup /Width get 8 div ceiling cvi string /mask_str xdf	begin	gsave	0 1 translate 1 -1 Height div scale	1 1 Height {		pop		gsave		MultipleDataSources {			0 1 DataSource length 1 sub {				dup DataSource exch get				exch line_source exch get				datasource_to_str			} for		}{			DataSource line_source datasource_to_str		} ifelse		<<			/PatternType 1			/PaintProc [				/pop cvx				<<					/ImageType 1					/Width Width					/Height 1					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix					/MultipleDataSources MultipleDataSources					/DataSource line_source					/BitsPerComponent BitsPerComponent					/Decode Decode				>>				/image cvx			] cvx			/BBox [0 0 Width 1]			/XStep Width			/YStep 1			/PaintType 1			/TilingType 2		>>		matrix makepattern set_pattern		<<			/ImageType 1			/Width Width			/Height 1			/ImageMatrix Width 1 matrix scale			/MultipleDataSources false			/DataSource mask_source mask_str readstring pop			/BitsPerComponent 1			/Decode [0 1]		>>		imagemask		grestore		0 1 translate	} for	grestore	end	end}def/imageormask{	begin		SkipImageProc {			currentdict consumeimagedata		}		{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq DeviceN_PS2 not and {					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					use_mask {						level3 {process_mask_L3 image}{masked_image_simulation}ifelse					}{						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 						{							Names convert_to_process not {								2 dict begin								/imageDict xdf								/names_index 0 def								gsave								imageDict write_image_file {									Names {										dup (None) ne {											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace											Operator imageDict read_image_file											names_index 0 eq {true setoverprint} if											/names_index names_index 1 add def										}{											pop										} ifelse									} forall									close_image_file								} if								grestore								end							}{								Operator /imagemask eq {									imagemask								}{									image								} ifelse							} ifelse						}{							Operator /imagemask eq {								imagemask							}{								image							} ifelse						} ifelse					}ifelse				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					/Adobe_AGM_OnHost_Seps where {						pop imagemask					}{						currentgray 1 ne{							currentdict imageormask_sys						}{							currentoverprint not{								1 AGMCORE_&setgray								currentdict imageormask_sys							}{								currentdict ignoreimagedata							}ifelse				 								}ifelse					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								AGMCORE_is_cmyk_sep{									MultipleDataSources{										/DataSource [											DataSource 0 get /exec cvx											DataSource 1 get /exec cvx											DataSource 2 get /exec cvx											DataSource 3 get /exec cvx											/AGMCORE_get_ink_data cvx										] cvx def									}{										/DataSource 										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 										/DataSource load										filter_cmyk 0 () /SubFileDecode filter def									}ifelse									/Decode [ Decode 0 get Decode 1 get ] def									/MultipleDataSources false def									/NComponents 1 def									/Operator /image def									invert_image_samples						 			1 AGMCORE_&setgray									currentdict imageormask_sys								}{									currentoverprint not Operator/imagemask eq and{  			 							1 AGMCORE_&setgray  			 							currentdict imageormask_sys  			 						}{  			 							currentdict ignoreimagedata  			 						}ifelse								}ifelse							}{									MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not Operator/imagemask ne and{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								use_mask {									level3 {process_mask_L3 image}{masked_image_simulation}ifelse								}{									image								}ifelse							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentcolorspace overprint_plate not{									knockout_unitsq								}if							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	CSA map_csa	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentdict/ImageMatrix get concat						knockout_unitsq					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{ 									Name AGMCORE_IsSeparationAProcessColor  									{ 										Operator /imagemask eq{ 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor 										}{											invert_image_samples 										}ifelse	 								}{	 									[ /Separation Name [/DeviceGray]	 									{ 	 										sep_colorspace_proc AGMCORE_get_ink_data											1 exch sub	 									} bind										] AGMCORE_&setcolorspace										/sep_tint AGMCORE_gget AGMCORE_&setcolor 									}ifelse 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or Operator/imagemask eq and{								currentdict imageormask_sys 								}{								currentoverprint not									{ 									gsave  									knockout_unitsq 									grestore									}if								currentdict consumeimagedata 		 					}ifelse 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name AGMCORE_IsSeparationAProcessColor not and					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end}def/decode_image_sample{	4 1 roll exch dup 5 1 roll	sub 2 4 -1 roll exp 1 sub div mul add} bdf/colorSpaceElemCnt{	mark currentcolor counttomark dup 2 add 1 roll cleartomark} bdf/devn_sep_datasource{	1 dict begin	/dataSource xdf	[		0 1 dataSource length 1 sub {			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx		} for	] cvx bind	end} bdf		/devn_alt_datasource{	11 dict begin	/convProc xdf	/origcolorSpaceElemCnt xdf	/origMultipleDataSources xdf	/origBitsPerComponent xdf	/origDecode xdf	/origDataSource xdf	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def	/DataSource origMultipleDataSources		{			[			BitsPerComponent 8 idiv origDecode length 2 idiv mul string			0 1 origDecode length 2 idiv 1 sub				{				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch				origDataSource exch get 0 () /SubFileDecode filter				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx				}for 			]bind cvx		}{origDataSource}ifelse 0 () /SubFileDecode filter def			[		origcolorSpaceElemCnt string		0 2 origDecode length 2 sub			{			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx			}for		/convProc load /exec cvx		origcolorSpaceElemCnt 1 sub -1 0			{			/dup cvx 2 /add cvx /index cvx			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx			}for	]bind cvx 0 () /SubFileDecode filter	end} bdf/devn_imageormask{ 	/devicen_colorspace_dict AGMCORE_gget begin	CSA map_csa	2 dict begin	dup	/srcDataStrs [ 3 -1 roll begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi			{				dup 65535 gt {1 add 2 div cvi}{exit}ifelse			} loop			string		} repeat		end ] def	/dstDataStr srcDataStrs 0 get length string def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_producing_seps not {			level3 not {				Operator /imagemask ne {					/DataSource [ [						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def									/MultipleDataSources true def					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				} if			}if			currentdict imageormask 		}{			AGMCORE_host_sep{				Names convert_to_process {					CSA get_csa_by_name 0 get /DeviceCMYK eq {						/DataSource							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 							devn_alt_datasource						filter_cmyk 0 () /SubFileDecode filter def						/MultipleDataSources false def						/Decode [1 0] def						/DeviceGray setcolorspace			 			currentdict imageormask_sys 					}{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate {							/DataSource								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get								devn_alt_datasource							/MultipleDataSources false def							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				 			currentdict imageormask_sys				 		}						{	 						gsave 	 						knockout_unitsq	 						grestore							currentdict consumeimagedata 						} ifelse 					} ifelse				}				{						/devicen_colorspace_dict AGMCORE_gget /names_index known {	 					Operator/imagemask ne{	 						MultipleDataSources {		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def								/MultipleDataSources false def	 						}{								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def	 						} ifelse							invert_image_samples	 					} if			 			currentdict imageormask_sys	 				}{	 					currentoverprint not Operator/imagemask eq and{							currentdict imageormask_sys 							}{							currentoverprint not								{	 							gsave 	 							knockout_unitsq	 							grestore								}if							currentdict consumeimagedata 			 			}ifelse	 				}ifelse	 			}ifelse 			}{				currentdict imageormask			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end	end}def/imageormask_l2_overprint{	currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 						currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace				AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 						mark exch						dup	dup dup						AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse			imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark  		currentdict 		AGMCORE_host_sep{			Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {					/CSA get get_csa_by_name				}{					/Names get				} ifelse				overprint_plate not{					knockout_unitsq				}if			}{				Indexed_DeviceN {					/devicen_colorspace_dict AGMCORE_gget /names_index known {			 			indexed_image_lev2_sep					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					} ifelse				}{		 			AGMCORE_is_cmyk_sep{						Operator /imagemask eq{							imageormask_sys						}{							level2{								indexed_image_lev2_sep							}{								indexed_image_lev1_sep							}ifelse						}ifelse					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					}ifelse				}ifelse			}ifelse 		}{			level2{				Indexed_DeviceN {					/indexed_colorspace_dict AGMCORE_gget begin				}{					/indexed_colorspace_dict AGMCORE_gget begin					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]						setcolorspace					} if					end				} ifelse				imageormask				Indexed_DeviceN {					end				} if			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		Indexed_DeviceN not {			currentcolorspace 			dup 1 /DeviceGray put			dup 3			currentcolorspace 2 get 1 add string			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub			{			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put			}for 			put	setcolorspace		} if		currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			use_mask {				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse			}{				AGMIMG_&image			}ifelse		}ifelse	end end}def  /OPIimage  {  	dup type /dicttype ne{  		10 dict begin  			/DataSource xdf  			/ImageMatrix xdf  			/BitsPerComponent xdf  			/Height xdf  			/Width xdf  			/ImageType 1 def  			/Decode [0 1 def]  			currentdict  		end  	}if  	dup begin  		/NComponents 1 cdndf  		/MultipleDataSources false cdndf  		/SkipImageProc {false} cdndf  		/HostSepColorImage false cdndf  		/Decode [  				0   				currentcolorspace 0 get /Indexed eq{  					2 BitsPerComponent exp 1 sub  				}{  					1  				}ifelse  		] cdndf  		/Operator /image cdndf  	end  	/sep_colorspace_dict AGMCORE_gget null eq{  		imageormask  	}{  		gsave  		dup begin invert_image_samples end  		sep_imageormask  		grestore  	}ifelse  }def/cachemask_level2{	3 dict begin	/LZWEncode filter /WriteFilter xdf	/readBuffer 256 string def	/ReadFilter		currentfile		0 (%EndMask) /SubFileDecode filter		/ASCII85Decode filter		/RunLengthDecode filter	def	{		ReadFilter readBuffer readstring exch		WriteFilter exch writestring		not {exit} if	}loop	WriteFilter closefile	end}def/cachemask_level3{	currentfile	<<		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]		/Intent 1	>>	/ReusableStreamDecode filter}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		<<			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		>>		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		current_spot_alias{dup 4 get map_alias}{false}ifelse		{			false set_spot_alias			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask			true set_spot_alias		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}def/snap_to_device{	6 dict begin	matrix currentmatrix	dup 0 get 0 eq 1 index 3 get 0 eq and	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop	{		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def		0 0 transform		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def		1 1 transform		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def					[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat	}{	}ifelse	end} deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse					Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 						currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{					MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop				Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 				{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResourcecurrentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetupAdobe_AGM_Utils begin2 2010 Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get execcurrentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: (Page 1) 1%%EndPageComments%%BeginPageSetup/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2008-01-14T11:49:06+01:00</xap:CreateDate>
         <xap:ModifyDate>2008-02-27T18:29:40+01:00</xap:ModifyDate>
         <xap:MetadataDate>2008-02-27T18:29:40+01:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>40</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAKAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AN/IvlzyzBpv5Yz2y8NW8&#xA;0LcW/mG3SaSt9ZtaTu5ni5UYK8afHTbxwq3JoOi6b5B/NDU7a39G50vzBPY206tIWhsopbKT0l3P&#xA;wrUnFXqsN7HP+dzJBOJY18sq7KjclBkvqoxoafEvT2wKwvzt5g13QvNv5j6xpF36F1pWj6VcwrIg&#xA;ljahnDIUbpyr1G+2FUv/ADQ1Xzv/AIO/MfQdW1qO8/Q9rpdylzb2q2pki1B3SW3ZQ8tEBiqDyrQ0&#xA;JOKo/VvN3m3ys+sWOmajY2+l+Q10ezOlG0VP0gL5Y+TBvUrAB6nGMJXcGtcVTW68x/mDHa/mHfLr&#xA;sXoeUFuBYQfUoucrxWUd6plk5Up8RSioPGvbFWNP+ZX5pWF9fSXWr2V1a6Nc6DJc26WIiNxb66Pi&#xA;iDeq5j9E/ZO5Pc9sVTyw/MnzJf8A5r2ujafqL3XlrULvU9MeSSzt4Vt7mxt5JqW8oleaUoyUYyRB&#xA;SOla4qkN1e+ZW/K+6v8AVdXGspF5o+rfVruIPRY9X9IAvz5jieLoAQFHw0IxVHeU9cn0j84da8m6&#xA;RHbaLpl7rD3s07RKsc4hsLVmsbVVogmcuZHPZdxUnFXuuBXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FWL+UvJX5e6aY9c8t6JZWMt5EDHdQQLHJ6bgbA0qoNBUDFU4TQdCgtr+B&#xA;bG3S21OSWfU4vTXhPJMoWV5gRRy6qA3LqMVSvyzoPkby8j/4c0210+C+iN1Lc2kISOSOM7FpVFNv&#xA;U+FSelaYqjp/LvlnU0u7iewtrtdXgjivZWjV/rECVMauSPiUcthiq280LyrqNxqVrd2VpdT6hDAN&#xA;VhkRHaaGJm9ATKQeSq3LjXFUDfeXvIur+bY7m90e3vPMGmxxypfSW3NohUmKspXjUEEoCdu2Kpu2&#xA;gaK0WowtYwmLV+X6UQoKXHOMQt6o/arGoXftiqXvoPkubUbnTn0y1e7mhtLi6RoFPOO0craFmIo3&#xA;osh4fy4qgNV8l/ltp963mG70Cy/SUtykv1yO1V7l7p3+FlKKXLs7VNOp3OKpjD5I8nJHeeno1oqa&#xA;ncJe3yGFQJbiNvUSV1I+2r/F88VRFx5T8s3MzTT6XbSzNdR6g0jxKW+txKEjnqRX1FVQobrTFU1x&#xA;VSkuraOeKCSVVmn5ejGSAz8BVuI70HXFUPZ6xZXc6wRFxM0Xr+nIjxsE5mOpDAU+JTiqNxV2KoO6&#xA;1fT7S/s7C4l9O6v/AFBaIQaOYgCwrSg2bv1xVrTtZ03UZruKzmEr2MpguaAgLIOoqRv9GKok3EAu&#xA;FtjIondGkWKvxFEIDNTwBYYqqYq7FVO4uILaF555FihQVeRzRQPcnFWo7mN7iWABg8IUuSpCnnUj&#xA;ixFG6b06YqtW+tmvpLEN/pMcSTulDT05GZVNenWM4qpXWr6faX9nYXEvp3V/6gtEINHMQBYVpQbN&#xA;364q6w1jTtQmu4bSYSyWMvoXIAICyAVIqRv9GKoi5uIra2luZjxigRpJCBWioOR2HsMVbhmSaGOa&#xA;M1jkUOh6bMKjFUHY65pt9KkVvIWeSN5kBVhVI5PSY7j+fbFUfiqlb3MdwrsgYBHeM81KmsbFTQMB&#xA;UVGx74qq4q8vi8u30ui3DT2M5urbQ7UWIKSB0uU9QkRjb94pC7DcYUJtDpsbeZ7pTp8t4upRS/Wr&#xA;m4tpE+ryrEBxWeQBHikNQFXofbFKG0PRmk0yytW06WNF0e6hu4ZYJIwbsPblah1UFiVqp7026Yq6&#xA;ETWemoINOvEjuNENqsUdtNyW7UtzDpxqpYtUMdj2OKpnommJa+bPrE1i6PPp1t6Vz6LlRMocTBpA&#xA;OKPSn2iK4FQmt6DTUtWuotPkeCSaxa59BG5zQFy10qcd3rtzC7nCrtK0X19UtA1hNHoyXd3LZwTJ&#xA;Iixx+lB6fKNqFFMquVVh9GKq/mrTL651u6aO3lkgltNOiLxq1Dx1LnIoZf5Y/ibwG+BVG68sxfWJ&#xA;7VNPJsYtXtHto+DFBC8MXrsn+QXB5HpXCql+jLj9LsUsrkasNRneS+4SCI2BR/TQTbRleBRQla17&#xA;Yqh28sOdO0qP6hKSNFuJbheMlfrzRQ8eff1eS7A77bdMVVJ9MuNPgu4YNLaW0uotN9eNreW5QOwm&#xA;FxL6KlTI60TmAa9K4qt0zR2juPL9zeafM8Vtd30RY28nKONpGNqWjo7pGCarXZfHFUJb6XrifoyW&#xA;5s7qWwhtwuq2qo4lkT63KVUbcm48ldkG7LihkPm+zim1CKS9sLi+sBZTJbx28ckvC6LKUbjHUo3H&#xA;7LkbeIwJYzdRXjX0kWrp8MK6al7qkiyTG3kEMRdBwPw8261FPiqT2woZh5m0NtW1vS1IkjSCC6dL&#xA;yNa+jOslu8TVIK1qh2PUVwJY5PokumSX9jHpr3enS3lqpnltXu/hWyAecRoU5ky7M1aAk4VX2Gk3&#xA;cY0qeaxnN62n3lvBcNDIzRXAmX6qZNmMdEHwlth44qhbDQ7v9GPGsU6SyJZR3lktjdWwdlvIWkke&#xA;Z5JFldVD8mTqN+mKplD5faxvVurLT3E0WqzpHRXANmbRyFqdvSaWm/SuKpTFpN7d6dqhOlyxrNYx&#xA;SmzSzltkF0kpLBEdn9RwpI5DqMUJtqumQXUOohba5hsW+ovYxC0nkUtEshKSW6qHKdnHaoxShTZa&#xA;nPqWm3k2kz2+kCytBqOnQowIcTTlQFA5OkbsHePrQio7YqyLzNob6trWmJ+8iSKC6ZLyNamGZZLZ&#xA;4m5EEA1Q0B6iuBWO/wCG/wBH39xby2Vzd6HHe27XKrG8pnUWBX1CiCso+sEF6A74VUZdKm+oU1HT&#xA;Lu4tTZ3aaPAYZbhoHaeQwh0UMyP6RQBmGwFK4qr2+j351yKS5Wa3uFns2tblbK4nYQpFEGjFwkgi&#xA;ijLB1dWTvU+yqyfStc/RZWC1nWUWUqOBG/IqdSWR0oChJeHl8IYFh0xVE6doCTT2MLQyS6ZJfu81&#xA;p9SuLKCJVspF2jmeRuDuF70LbYqqw6DJe6lImo2cktqBq7oJFcJze9Qwnt9pKlPbcYFSG9iuZFEW&#xA;oxuIo9O01b6/mjkleyb06v8ACpDKxIq1R8/DCh6zgS7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;qgLjQdFubwXs9lDLdAqfWZAWJT7JPiV7V6Yqj8VdirsVdirsVdirsVdirsVdirsVdirsVdirsVQF&#xA;5oGiXtwLm7sYZ51oPUdASQu6g16gdq4q8b/5VF+df/U8Sf8ASdf/ANMxPCyd/wBpen/lXRf6l/sY&#xA;u/5VF+df/U8Sf9J1/wD0x8LJ3/aV/lXRf6l/sYu/5VF+df8A1PEn/Sdf/wBMfCyd/wBpX+VdF/qX&#xA;+xi7/lUX51/9TxJ/0nX/APTHwsnf9pX+VdF/qX+xi7/lUX51/wDU8Sf9J1//AEx8LJ3/AGlf5V0X&#xA;+pf7GLv+VRfnX/1PEn/Sdf8A9MfCyd/2lf5V0X+pf7GLv+VRfnX/ANTxJ/0nX/8ATHwsnf8AaV/l&#xA;XRf6l/sYu/5VF+df/U8Sf9J1/wD0x8LJ3/aV/lXRf6l/sYu/5VF+df8A1PEn/Sdf/wBMfCyd/wBp&#xA;X+VdF/qX+xi7/lUX51/9TxJ/0nX/APTHwsnf9pX+VdF/qX+xi7/lUX51/wDU8Sf9J1//AEx8LJ3/&#xA;AGlf5V0X+pf7GL0D8s/K3m/y/ZXsXmXWW1maeRXt5Gmnn9NQtCtZtxU+GXYoyF2XU9o6nDlkDijw&#xA;AeQH3Mzy11zsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVf/2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:1BA0580029C4DC11B0F7C948713094C1</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:4761053FE6F411DCA9DBE848ED1657C8</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:1AA0580029C4DC11B0F7C948713094C1</stRef:instanceID>
            <stRef:documentID>uuid:19A0580029C4DC11B0F7C948713094C1</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>5080.000000</stDim:w>
            <stDim:h>5080.000000</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>White</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.609375</xapG:cyan>
                           <xapG:magenta>67.578125</xapG:magenta>
                           <xapG:yellow>66.796875</xapG:yellow>
                           <xapG:black>89.843750</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Red</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>98.828125</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Yellow</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>6.250000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>96.093750</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Green</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>62.500000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Cyan</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>51.562500</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>12.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Blue</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>87.890625</xapG:cyan>
                           <xapG:magenta>76.562500</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Magenta</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>26.953125</xapG:cyan>
                           <xapG:magenta>81.250000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=193 G=39 B=45</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>16.796875</xapG:cyan>
                           <xapG:magenta>97.656250</xapG:magenta>
                           <xapG:yellow>92.187500</xapG:yellow>
                           <xapG:black>6.640625</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=28 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.390625</xapG:cyan>
                           <xapG:magenta>98.828125</xapG:magenta>
                           <xapG:yellow>96.875000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=241 G=90 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>79.296875</xapG:magenta>
                           <xapG:yellow>96.484375</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=247 G=147 B=30</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>98.046875</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=251 G=176 B=59</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>34.765625</xapG:magenta>
                           <xapG:yellow>86.718750</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=252 G=238 B=33</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>4.687500</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>92.968750</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=217 G=224 B=33</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>18.750000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>97.656250</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=198 B=63</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>98.828125</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=57 G=181 B=74</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218750</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>99.218750</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=146 B=69</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>85.937500</xapG:cyan>
                           <xapG:magenta>17.578125</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>3.906250</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=104 B=55</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>89.843750</xapG:cyan>
                           <xapG:magenta>33.203125</xapG:magenta>
                           <xapG:yellow>98.437500</xapG:yellow>
                           <xapG:black>25.781250</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=34 G=181 B=115</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.781250</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>74.609375</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=169 B=157</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>78.125000</xapG:cyan>
                           <xapG:magenta>8.984375</xapG:magenta>
                           <xapG:yellow>45.703125</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=41 G=171 B=226</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>69.531250</xapG:cyan>
                           <xapG:magenta>14.843750</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=113 B=188</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>87.109375</xapG:cyan>
                           <xapG:magenta>52.343750</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=46 G=49 B=146</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>98.828125</xapG:cyan>
                           <xapG:magenta>96.093750</xapG:magenta>
                           <xapG:yellow>3.515625</xapG:yellow>
                           <xapG:black>0.390625</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=27 G=20 B=100</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>26.171875</xapG:yellow>
                           <xapG:black>24.609375</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=45 B=145</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218750</xapG:cyan>
                           <xapG:magenta>98.046875</xapG:magenta>
                           <xapG:yellow>0.781250</xapG:yellow>
                           <xapG:black>0.390625</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=147 G=39 B=143</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>49.218750</xapG:cyan>
                           <xapG:magenta>98.828125</xapG:magenta>
                           <xapG:yellow>1.171875</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=158 G=0 B=93</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>34.765625</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>37.109375</xapG:yellow>
                           <xapG:black>10.937500</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=212 G=20 B=90</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>11.718750</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>49.218750</xapG:yellow>
                           <xapG:black>0.781250</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=30 B=121</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>96.484375</xapG:magenta>
                           <xapG:yellow>20.312500</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=199 G=178 B=153</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>22.656250</xapG:cyan>
                           <xapG:magenta>27.343750</xapG:magenta>
                           <xapG:yellow>39.843750</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=153 G=134 B=117</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.843750</xapG:cyan>
                           <xapG:magenta>42.578125</xapG:magenta>
                           <xapG:yellow>52.343750</xapG:yellow>
                           <xapG:black>6.640625</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=115 G=99 B=87</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.390625</xapG:cyan>
                           <xapG:magenta>52.734375</xapG:magenta>
                           <xapG:yellow>60.546875</xapG:yellow>
                           <xapG:black>23.437500</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=83 G=71 B=65</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>57.421875</xapG:cyan>
                           <xapG:magenta>60.156250</xapG:magenta>
                           <xapG:yellow>63.671875</xapG:yellow>
                           <xapG:black>41.796875</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=198 G=156 B=109</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>22.656250</xapG:cyan>
                           <xapG:magenta>38.281250</xapG:magenta>
                           <xapG:yellow>63.281250</xapG:yellow>
                           <xapG:black>1.171875</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=166 G=124 B=82</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>31.640625</xapG:cyan>
                           <xapG:magenta>48.828125</xapG:magenta>
                           <xapG:yellow>73.828125</xapG:yellow>
                           <xapG:black>9.765625</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=98 B=57</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>35.937500</xapG:cyan>
                           <xapG:magenta>57.031250</xapG:magenta>
                           <xapG:yellow>83.593750</xapG:yellow>
                           <xapG:black>22.656250</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=117 G=76 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.062500</xapG:cyan>
                           <xapG:magenta>63.671875</xapG:magenta>
                           <xapG:yellow>92.968750</xapG:yellow>
                           <xapG:black>35.546875</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=96 G=56 B=19</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>41.406250</xapG:cyan>
                           <xapG:magenta>69.531250</xapG:magenta>
                           <xapG:yellow>96.484375</xapG:yellow>
                           <xapG:black>48.828125</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=66 G=33 B=11</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>47.656250</xapG:cyan>
                           <xapG:magenta>73.046875</xapG:magenta>
                           <xapG:yellow>83.203125</xapG:yellow>
                           <xapG:black>67.968750</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Web Color Group</xapG:groupName>
                  <xapG:groupType>1</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=236 G=28 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.781250</xapG:cyan>
                           <xapG:magenta>98.828125</xapG:magenta>
                           <xapG:yellow>96.875000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=169 B=157</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>78.125000</xapG:cyan>
                           <xapG:magenta>8.984375</xapG:magenta>
                           <xapG:yellow>45.703125</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=45 B=145</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218750</xapG:cyan>
                           <xapG:magenta>98.046875</xapG:magenta>
                           <xapG:yellow>0.781250</xapG:yellow>
                           <xapG:black>0.390625</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=139 G=146 B=152 1</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>48.437500</xapG:cyan>
                           <xapG:magenta>36.328125</xapG:magenta>
                           <xapG:yellow>33.593750</xapG:yellow>
                           <xapG:black>1.562500</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Grayscale</xapG:groupName>
                  <xapG:groupType>1</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=100</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>255</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=90</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>229</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=80</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>204</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=70</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>178</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=60</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>153</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=50</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>127</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=40</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>101</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=30</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>76</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=20</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>50</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=10</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>25</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=5</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>12</xapG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_AGM_Core/capture_currentpagedevice get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -36.7866 translate[1 0 0 1 0 0 ]  concat% page clipgsavenewpathgsave % PSGState0 0 mo0 36.7866 li257.152 36.7866 li257.152 0 licpclp[1 0 0 1 0 0 ] concat91.8145 33.2144 mo91.8145 36.7866 li0 36.7866 li0 33.2144 li91.8145 33.2144 licpfalse sop/0 [/DeviceCMYK] /CSA add_res0 0.91 0.72 0.23 cmykf5.33105 8.39746 mo4.69238 9.02686 3.73047 9.3125 2.56152 9.3125 cv1.67773 9.3125 0.638672 9.24023 0.283203 9.18018 cv0.103516 9.1499 0 9.05371 0 8.84375 cv0 0.66748 li0 0.462891 0.103516 0.360352 0.283203 0.330566 cv0.638672 0.27002 1.67773 0.198242 2.56152 0.198242 cv3.71875 0.198242 4.6748 0.474609 5.3125 1.09131 cv6.07227 1.82422 6.27148 2.83057 6.27148 4.19189 cv6.27148 5.31885 li6.27148 6.66504 6.0791 7.65967 5.33105 8.39746 cvcp4.89453 4.24854 mo4.89453 3.08887 4.74121 2.37207 4.22656 1.89502 cv3.80859 1.50781 3.22461 1.37061 2.56152 1.37061 cv2.05664 1.37061 1.71387 1.38867 1.38965 1.40674 cv1.38965 8.10986 li1.70801 8.12793 2.05664 8.13965 2.56152 8.13965 cv3.25195 8.13965 3.85547 7.98975 4.27734 7.56445 cv4.76172 7.07471 4.89453 6.38672 4.89453 5.26172 cv4.89453 4.24854 licp17.6172 9.3125 mo15.6758 9.3125 14.4248 8.37451 14.4248 5.9458 cv14.4248 0.51709 li14.4248 0.390625 14.5273 0.288574 14.6602 0.288574 cv15.5791 0.288574 li15.7051 0.288574 15.8145 0.384766 15.8145 0.51709 cv15.8145 5.9458 li15.8145 7.40625 16.2227 8.15186 17.6172 8.15186 cv19.0117 8.15186 19.4209 7.4126 19.4209 5.9458 cv19.4209 0.51709 li19.4209 0.390625 19.5234 0.288574 19.6553 0.288574 cv20.5752 0.288574 li20.7012 0.288574 20.8096 0.384766 20.8096 0.51709 cv20.8096 5.9458 li20.8096 8.37451 19.5586 9.3125 17.6172 9.3125 cvcp13.0586 1.45459 mo10.834 1.45459 li10.834 8.98193 li10.834 9.10791 10.7383 9.22217 10.6055 9.22217 cv9.67969 9.22217 li9.55273 9.22217 9.45117 9.11377 9.45117 8.98193 cv9.45117 1.45459 li7.22656 1.45459 li7.09473 1.45459 6.98633 1.38281 6.98633 1.25049 cv6.98633 0.510742 li6.98633 0.384766 7.09473 0.288574 7.22656 0.288574 cv13.0586 0.288574 li13.1904 0.288574 13.293 0.378906 13.293 0.510742 cv13.293 1.25049 li13.293 1.37646 13.1904 1.45459 13.0586 1.45459 cvcp82.2744 8.97559 mo82.2744 9.10791 82.3828 9.22217 82.5156 9.22217 cv83.3574 9.22217 li83.4893 9.22217 83.5977 9.10791 83.5977 8.97559 cv83.5977 6.03174 li85.9395 9.02344 li86.0273 9.13818 86.125 9.22217 86.2578 9.22217 cv87.498 9.22217 li87.5879 9.22217 87.6445 9.1499 87.6406 9.07178 cv87.6396 9.03564 87.626 8.99951 87.6006 8.96973 cv84.8887 5.68115 li87.3291 2.7832 li87.3643 2.74121 87.3809 2.69922 87.3799 2.65723 cv87.377 2.57861 87.3164 2.5249 87.1953 2.5249 cv86.1152 2.5249 li86.0195 2.5249 85.9355 2.55469 85.8613 2.65088 cv83.5977 5.5166 li83.5977 0.366699 li83.5977 0.233887 83.4893 0.125977 83.3574 0.125977 cv81.0195 0.125977 li80.8867 0.125977 80.7842 0.233887 80.7842 0.366699 cv80.7842 0.366699 80.7842 0.3125 80.7842 0.443848 cv80.7842 0.575684 80.873 0.685547 81.0195 0.728516 cv82.2744 1.09424 li82.2744 8.97559 licp82.2744 8.97559 mo82.2744 9.10791 82.3828 9.22217 82.5156 9.22217 cv83.3574 9.22217 li83.4893 9.22217 83.5977 9.10791 83.5977 8.97559 cv83.5977 6.03174 li85.9395 9.02344 li86.0273 9.13818 86.125 9.22217 86.2578 9.22217 cv87.498 9.22217 li87.5879 9.22217 87.6445 9.1499 87.6406 9.07178 cv87.6396 9.03564 87.626 8.99951 87.6006 8.96973 cv84.8887 5.68115 li87.3291 2.7832 li87.3643 2.74121 87.3809 2.69922 87.3799 2.65723 cv87.377 2.57861 87.3164 2.5249 87.1953 2.5249 cv86.1152 2.5249 li86.0195 2.5249 85.9355 2.55469 85.8613 2.65088 cv83.5977 5.5166 li83.5977 0.366699 li83.5977 0.233887 83.4893 0.125977 83.3574 0.125977 cv81.0195 0.125977 li80.8867 0.125977 80.7842 0.233887 80.7842 0.366699 cv80.7842 0.366699 80.7842 0.3125 80.7842 0.443848 cv80.7842 0.575684 80.873 0.685547 81.0195 0.728516 cv82.2744 1.09424 li82.2744 8.97559 licp78.3184 3.49316 mo77.0625 3.12744 li76.917 3.08447 76.8281 2.97461 76.8281 2.84326 cv76.8281 2.71143 76.8281 2.76563 76.8281 2.76563 cv76.8281 2.6333 76.9307 2.5249 77.0625 2.5249 cv79.4004 2.5249 li79.5332 2.5249 79.6406 2.6333 79.6406 2.76514 cv79.6406 8.97559 li79.6406 9.10791 79.5332 9.22217 79.4004 9.22217 cv78.5586 9.22217 li78.4268 9.22217 78.3184 9.10791 78.3184 8.97559 cv78.3184 3.49316 licp79.6719 1.3042 mo79.6719 0.294434 li79.6719 0.162109 79.5625 0.0537109 79.4307 0.0537109 cv78.541 0.0537109 li78.4082 0.0537109 78.2949 0.162109 78.2949 0.294434 cv78.2949 1.3042 li78.2949 1.43652 78.4082 1.54443 78.541 1.54443 cv79.4307 1.54443 li79.5625 1.54443 79.6719 1.43652 79.6719 1.3042 cvcp55.251 8.97559 mo55.251 9.10791 55.3477 9.22217 55.4727 9.22217 cv56.3447 9.22217 li56.4766 9.22217 56.5732 9.10205 56.5732 8.97559 cv56.5732 4.00977 li57.0723 3.75146 57.5176 3.57666 57.8594 3.57666 cv58.5098 3.57666 58.7383 3.80518 58.7383 4.7915 cv58.7383 8.97559 li58.7383 9.10791 58.834 9.22217 58.96 9.22217 cv59.832 9.22217 li59.9648 9.22217 60.0605 9.10205 60.0605 8.97559 cv60.0605 4.7915 li60.0605 4.46045 60.0361 4.15381 59.9824 3.88965 cv60.4336 3.68506 60.9141 3.57666 61.2441 3.57666 cv61.8945 3.57666 62.2246 3.83545 62.2246 4.80322 cv62.2246 8.97559 li62.2246 9.10791 62.333 9.22217 62.4648 9.22217 cv63.3066 9.22217 li63.4395 9.22217 63.5469 9.10791 63.5469 8.97559 cv63.5469 4.66113 li63.5469 3.12207 62.7822 2.43457 61.5752 2.43457 cv60.8477 2.43457 60.2227 2.62695 59.5859 2.95166 cv59.2969 2.60889 58.8818 2.43457 58.2813 2.43457 cv57.5957 2.43457 57.0352 2.69092 56.4863 3.04541 cv56.4766 2.76514 li56.4727 2.6333 56.3662 2.5249 56.2344 2.5249 cv54.0938 2.5249 li53.9746 2.5249 53.8818 2.6333 53.8818 2.76563 cv53.8818 2.76563 53.8818 2.71143 53.8818 2.84326 cv53.8818 2.97461 53.9629 3.08447 54.0938 3.12744 cv55.251 3.49316 li55.251 8.97559 licp70.3027 8.2627 mo70.3027 4.71924 li70.3027 3.24023 69.4971 2.44092 67.8076 2.44092 cv66.9844 2.44092 66.3594 2.5249 65.8721 2.61475 cv65.709 2.64502 65.6309 2.72314 65.6309 2.85547 cv65.6309 3.45068 li65.6309 3.61279 65.7402 3.65625 65.8545 3.64795 cv65.915 3.64355 li66.3555 3.61182 67.0322 3.55273 67.8076 3.55273 cv68.6309 3.55273 68.9805 3.82373 68.9805 4.71924 cv68.9805 5.22412 li68.1563 5.22412 li66.04 5.22412 65.2402 5.90381 65.2402 7.23779 cv65.2402 7.33447 li65.2402 8.89746 66.251 9.31201 67.2607 9.31201 cv67.8857 9.31201 68.5498 9.05664 69.0908 8.71338 cv69.1006 8.98193 li69.1055 9.11377 69.2168 9.22217 69.3496 9.22217 cv71.3818 9.22217 li71.5137 9.22217 71.623 9.11377 71.623 8.98193 cv71.623 8.98193 71.623 9.05371 71.623 8.92236 cv71.623 8.78418 71.5176 8.6543 71.3818 8.61084 cv70.3027 8.2627 licp68.9805 7.83936 mo68.5176 8.0918 68.0488 8.24854 67.5557 8.24854 cv66.9063 8.24854 66.5693 8.05566 66.5693 7.32861 cv66.5693 7.23193 li66.5693 6.46826 66.8818 6.13184 68.1563 6.13184 cv68.9805 6.13184 li68.9805 7.83936 licp30.7607 8.97559 mo30.7607 9.10791 30.8691 9.22217 30.9951 9.22217 cv31.8428 9.22217 li31.9756 9.22217 32.084 9.10205 32.084 8.97559 cv32.084 4.02197 li32.6123 3.75146 33.1172 3.5708 33.5742 3.5708 cv34.4941 3.5708 34.7471 3.90771 34.7471 5.0376 cv34.7471 8.97559 li34.7471 9.10791 34.8555 9.22217 34.9873 9.22217 cv35.8291 9.22217 li35.9609 9.22217 36.0693 9.10791 36.0693 8.97559 cv36.0693 4.896 li36.0693 3.56055 35.6084 2.44092 33.9834 2.44092 cv33.2314 2.44092 32.7275 2.59473 31.9961 3.04541 cv31.9863 2.76514 li31.9824 2.6333 31.877 2.5249 31.7441 2.5249 cv29.5117 2.5249 li29.3789 2.5249 29.2764 2.6333 29.2764 2.76563 cv29.2764 2.76563 29.2764 2.71143 29.2764 2.84326 cv29.2764 2.97461 29.3652 3.08447 29.5117 3.12744 cv30.7607 3.49316 li30.7607 8.97559 licp48.8105 2.5249 mo48.6777 2.5249 48.5752 2.6333 48.5752 2.76563 cv48.5752 2.76563 48.5752 2.71143 48.5752 2.84326 cv48.5752 2.97461 48.6641 3.08447 48.8105 3.12744 cv50.0176 3.49316 li50.0176 8.97559 li50.0176 9.10791 50.125 9.22217 50.252 9.22217 cv51.0996 9.22217 li51.2314 9.22217 51.3398 9.10205 51.3398 8.97559 cv51.3398 4.04004 li51.8926 3.72705 52.3975 3.5708 52.998 3.5708 cv53.1484 3.5708 53.2451 3.48047 53.2451 3.34814 cv53.2451 2.66895 li53.2451 2.53076 53.1484 2.44092 52.998 2.44092 cv52.4873 2.44092 51.9102 2.56543 51.2344 3.05762 cv51.2246 2.76514 li51.2197 2.6333 51.1133 2.5249 50.9824 2.5249 cv48.8105 2.5249 licp73.1367 7.55078 mo73.1367 9.01758 73.6777 9.31201 74.9102 9.31201 cv75.1572 9.31201 75.4453 9.28174 75.71 9.24023 cv75.8662 9.21582 75.9326 9.14404 75.9326 9.02979 cv75.9326 8.44043 li75.9326 8.32031 75.8418 8.26611 75.6797 8.26611 cv75.0254 8.26611 li74.5684 8.26611 74.4658 8.18213 74.4658 7.55078 cv74.4658 3.56494 li75.6563 3.56494 li75.7881 3.56494 75.8965 3.45654 75.8965 3.32471 cv75.8965 2.76514 li75.8965 2.6333 75.7881 2.5249 75.6563 2.5249 cv74.4658 2.5249 li74.4658 1.25049 li74.4658 1.11475 74.3535 1.03857 74.2373 1.05811 cv73.3652 1.20215 li73.2285 1.2251 73.1367 1.32568 73.1367 1.44287 cv73.1367 2.5249 li71.8613 2.5249 li71.7285 2.5249 71.627 2.62109 71.627 2.75342 cv71.627 2.84912 li71.627 2.98145 71.7285 3.08154 71.8613 3.12842 cv73.1367 3.50342 li73.1367 7.55078 licp47.918 6.34814 mo47.918 5.40479 li47.918 3.66113 46.9678 2.44092 45.1396 2.44092 cv43.3125 2.44092 42.3682 3.66113 42.3682 5.40479 cv42.3682 6.34814 li42.3682 8.0918 43.3125 9.31201 45.1396 9.31201 cv46.9678 9.31201 47.918 8.0918 47.918 6.34814 cvcp46.5947 6.34814 mo46.5947 7.46045 46.1191 8.16406 45.1396 8.16406 cv44.1543 8.16406 43.6914 7.45459 43.6914 6.34814 cv43.6914 5.40479 li43.6914 4.29248 44.1602 3.58887 45.1396 3.58887 cv46.125 3.58887 46.5947 4.29834 46.5947 5.40479 cv46.5947 6.34814 licp38.6221 8.97559 mo38.6221 9.10205 38.7363 9.22217 38.8691 9.22217 cv39.7109 9.22217 li39.8359 9.22217 39.9453 9.10205 39.9453 8.97559 cv39.9453 3.56494 li41.1533 3.56494 li41.2852 3.56494 41.3877 3.47461 41.3877 3.34814 cv41.3877 2.75342 li41.3877 2.62695 41.2852 2.5249 41.1533 2.5249 cv39.9453 2.5249 li39.9453 1.79736 li39.9453 1.17236 40.0957 1.02197 40.666 1.02197 cv41.2246 1.02197 li41.334 1.02197 41.4238 0.967773 41.4238 0.82959 cv41.4238 0.276367 li41.4238 0.168457 41.3164 0.111816 41.2012 0.0839844 cv41.0098 0.0375977 40.8105 0 40.5039 0 cv39.3496 0 38.6221 0.378418 38.6221 1.79736 cv38.6221 2.5249 li37.2617 2.5249 li37.1289 2.5249 37.0273 2.62109 37.0273 2.75342 cv37.0273 2.84912 li37.0273 2.98145 37.1289 3.08154 37.2617 3.12842 cv38.6221 3.53906 li38.6221 8.97559 licp27.9258 9.22217 mo27 9.22217 li26.874 9.22217 26.7715 9.11377 26.7715 8.98193 cv26.7715 0.516602 li26.7715 0.390625 26.8682 0.288574 27 0.288574 cv27.9258 0.288574 li28.0527 0.288574 28.1543 0.384766 28.1543 0.516602 cv28.1543 8.98193 li28.1543 9.10791 28.0586 9.22217 27.9258 9.22217 cvcp0 0 0 1 cmykf55.3428 17.1821 mo54.79 17.1821 54.2852 17.3267 53.6836 17.687 cv53.6836 22.7251 li53.6836 22.8452 53.5762 22.9653 53.4434 22.9653 cv52.8535 22.9653 li52.7344 22.9653 52.626 22.8569 52.626 22.7251 cv52.626 16.5928 li52.626 16.4604 52.7217 16.3525 52.8535 16.3525 cv53.4189 16.3525 li53.5518 16.3525 53.6484 16.4604 53.6484 16.5928 cv53.6484 16.8452 li54.249 16.4243 54.8018 16.2681 55.3428 16.2681 cv55.5117 16.2681 55.5957 16.3403 55.5957 16.4844 cv55.5957 16.9775 li55.5957 17.1099 55.5117 17.1821 55.3428 17.1821 cvcp50.1484 19.2026 mo50.1484 17.9756 49.6563 17.1938 48.5254 17.1938 cv47.4072 17.1938 46.9141 17.9634 46.9141 19.2026 cv46.9141 20.1157 li46.9141 21.3423 47.3955 22.1235 48.5254 22.1235 cv49.6436 22.1235 50.1484 21.354 50.1484 20.1157 cv50.1484 19.2026 licp48.5254 23.0503 mo46.7578 23.0503 45.8555 21.8833 45.8555 20.1157 cv45.8555 19.2026 li45.8555 17.4346 46.7578 16.2681 48.5254 16.2681 cv50.293 16.2681 51.207 17.4346 51.207 19.2026 cv51.207 20.1157 li51.207 21.8833 50.293 23.0503 48.5254 23.0503 cvcp45.1191 14.6572 mo44.542 14.6572 li43.9766 14.6572 43.8086 14.8252 43.8086 15.4868 cv43.8086 16.3525 li45.0703 16.3525 li45.2031 16.3525 45.2988 16.4487 45.2988 16.5688 cv45.2988 17.0376 li45.2988 17.1582 45.2031 17.2422 45.0703 17.2422 cv43.8086 17.2422 li43.8086 22.7251 li43.8086 22.8452 43.7002 22.9653 43.5801 22.9653 cv42.9902 22.9653 li42.8584 22.9653 42.75 22.8452 42.75 22.7251 cv42.75 17.2422 li41.584 17.1099 li41.4512 17.0977 41.3555 17.0137 41.3555 16.8936 cv41.3555 16.5688 li41.3555 16.4487 41.4512 16.3525 41.584 16.3525 cv42.75 16.3525 li42.75 15.4868 li42.75 14.2002 43.375 13.8154 44.4336 13.8154 cv44.7578 13.8154 44.9512 13.8511 45.1074 13.8877 cv45.2383 13.9233 45.3359 13.9717 45.3359 14.0796 cv45.3359 14.4766 li45.3359 14.6089 45.251 14.6572 45.1191 14.6572 cvcp37.54 22.9897 mo37.2988 23.0259 36.9863 23.0503 36.7578 23.0503 cv35.6523 23.0503 35.123 22.7612 35.123 21.439 cv35.123 17.2422 li33.957 17.1099 li33.8242 17.0977 33.7285 17.0259 33.7285 16.8936 cv33.7285 16.5688 li33.7285 16.4365 33.8242 16.3525 33.957 16.3525 cv35.123 16.3525 li35.123 15.1743 li35.123 15.0537 35.207 14.9575 35.3398 14.9336 cv35.9648 14.8374 li35.9766 14.8374 35.9883 14.8374 36 14.8374 cv36.0967 14.8374 36.1807 14.9214 36.1807 15.0415 cv36.1807 16.3525 li37.4795 16.3525 li37.6113 16.3525 37.7207 16.4604 37.7207 16.5928 cv37.7207 17.0015 li37.7207 17.1338 37.6113 17.2422 37.4795 17.2422 cv36.1807 17.2422 li36.1807 21.439 li36.1807 22.1001 36.3496 22.1958 36.8301 22.1958 cv37.5039 22.1958 li37.6719 22.1958 37.7559 22.2437 37.7559 22.3647 cv37.7559 22.7847 li37.7559 22.8931 37.6963 22.9653 37.54 22.9897 cvcp32.3818 22.9653 mo31.7803 22.9653 li31.6484 22.9653 31.5518 22.8569 31.5518 22.7251 cv31.5518 22.4966 li30.8906 22.8696 30.3496 23.0503 29.6406 23.0503 cv28.1973 23.0503 27.5488 22.1479 27.5488 20.5483 cv27.5488 16.5928 li27.5488 16.4604 27.6563 16.3525 27.7891 16.3525 cv28.3652 16.3525 li28.498 16.3525 28.6055 16.4604 28.6055 16.5928 cv28.6055 20.5483 li28.6055 21.7632 29.0156 22.1362 29.9287 22.1362 cv30.4336 22.1362 30.999 21.9429 31.5518 21.6675 cv31.5518 16.5928 li31.5518 16.4727 31.6602 16.3525 31.793 16.3525 cv32.3818 16.3525 li32.502 16.3525 32.6104 16.4604 32.6104 16.5928 cv32.6104 22.7251 li32.6104 22.8569 32.5137 22.9653 32.3818 22.9653 cvcp26.1279 22.9897 mo25.8877 23.0259 25.5752 23.0503 25.3467 23.0503 cv24.2402 23.0503 23.7109 22.7612 23.7109 21.439 cv23.7109 17.2422 li22.5449 17.1099 li22.4121 17.0977 22.3164 17.0259 22.3164 16.8936 cv22.3164 16.5688 li22.3164 16.4365 22.4121 16.3525 22.5449 16.3525 cv23.7109 16.3525 li23.7109 15.1743 li23.7109 15.0537 23.7949 14.9575 23.9277 14.9336 cv24.5527 14.8374 li24.5645 14.8374 24.5771 14.8374 24.5898 14.8374 cv24.6855 14.8374 24.7695 14.9214 24.7695 15.0415 cv24.7695 16.3525 li26.0684 16.3525 li26.2002 16.3525 26.3086 16.4604 26.3086 16.5928 cv26.3086 17.0015 li26.3086 17.1338 26.2002 17.2422 26.0684 17.2422 cv24.7695 17.2422 li24.7695 21.439 li24.7695 22.1001 24.9375 22.1958 25.4189 22.1958 cv26.0918 22.1958 li26.2598 22.1958 26.3447 22.2437 26.3447 22.3647 cv26.3447 22.7847 li26.3447 22.8931 26.2842 22.9653 26.1279 22.9897 cvcp20.8135 22.9653 mo20.2363 22.9653 li20.1035 22.9653 19.9961 22.8569 19.9961 22.7251 cv19.9961 16.5928 li19.9961 16.4604 20.1035 16.3525 20.2363 16.3525 cv20.8135 16.3525 li20.9463 16.3525 21.0537 16.4604 21.0537 16.5928 cv21.0537 22.7251 li21.0537 22.8569 20.9463 22.9653 20.8135 22.9653 cvcp20.8379 15.2944 mo20.2246 15.2944 li20.0918 15.2944 19.9844 15.186 19.9844 15.0537 cv19.9844 14.0918 li19.9844 13.9595 20.0918 13.8511 20.2246 13.8511 cv20.8379 13.8511 li20.9697 13.8511 21.0781 13.9595 21.0781 14.0918 cv21.0781 15.0537 li21.0781 15.186 20.9697 15.2944 20.8379 15.2944 cvcp18.4434 22.9897 mo18.2031 23.0259 17.8906 23.0503 17.6621 23.0503 cv16.5566 23.0503 16.0273 22.7612 16.0273 21.439 cv16.0273 17.2422 li14.8613 17.1099 li14.7285 17.0977 14.6328 17.0259 14.6328 16.8936 cv14.6328 16.5688 li14.6328 16.4365 14.7285 16.3525 14.8613 16.3525 cv16.0273 16.3525 li16.0273 15.1743 li16.0273 15.0537 16.1113 14.9575 16.2441 14.9336 cv16.8691 14.8374 li16.8809 14.8374 16.8926 14.8374 16.9043 14.8374 cv17.001 14.8374 17.0859 14.9214 17.0859 15.0415 cv17.0859 16.3525 li18.3838 16.3525 li18.5156 16.3525 18.624 16.4604 18.624 16.5928 cv18.624 17.0015 li18.624 17.1338 18.5156 17.2422 18.3838 17.2422 cv17.0859 17.2422 li17.0859 21.439 li17.0859 22.1001 17.2539 22.1958 17.7344 22.1958 cv18.4082 22.1958 li18.5762 22.1958 18.6602 22.2437 18.6602 22.3647 cv18.6602 22.7847 li18.6602 22.8931 18.6006 22.9653 18.4434 22.9897 cvcp11.6406 23.0503 mo11.1953 23.0503 10.3301 23.0132 9.74121 22.8696 cv9.58496 22.8335 9.48828 22.7612 9.48828 22.6284 cv9.48828 22.2085 li9.48828 22.1001 9.58496 22.0269 9.70508 22.0269 cv9.72852 22.0269 9.74121 22.0269 9.75293 22.0269 cv10.3301 22.1001 11.208 22.1597 11.6406 22.1597 cv12.4219 22.1597 12.8311 21.9556 12.8311 21.3062 cv12.8311 20.9448 12.6152 20.7173 11.9297 20.3081 cv10.7148 19.5874 li9.98145 19.1421 9.48828 18.6245 9.48828 17.8672 cv9.48828 16.6167 10.4258 16.2681 11.6641 16.2681 cv12.3379 16.2681 12.9756 16.3286 13.541 16.4243 cv13.6973 16.4487 13.7695 16.5327 13.7695 16.665 cv13.7695 17.062 li13.7695 17.2061 13.6846 17.2661 13.5645 17.2661 cv13.5527 17.2661 13.541 17.2661 13.5283 17.2661 cv13.1074 17.23 12.3379 17.1699 11.6641 17.1699 cv10.9922 17.1699 10.5469 17.2544 10.5469 17.8672 cv10.5469 18.228 10.8232 18.4565 11.377 18.7808 cv12.5664 19.4907 li13.5645 20.0796 13.8887 20.5972 13.8887 21.3062 cv13.8887 22.5327 12.9873 23.0503 11.6406 23.0503 cvcp7.83008 22.9653 mo7.25195 22.9653 li7.11914 22.9653 7.01172 22.8569 7.01172 22.7251 cv7.01172 18.769 li7.01172 17.5547 6.60352 17.1821 5.68945 17.1821 cv5.18359 17.1821 4.61914 17.3745 4.06641 17.6509 cv4.06641 22.7251 li4.06641 22.8452 3.95703 22.9653 3.8252 22.9653 cv3.23633 22.9653 li3.11621 22.9653 3.00781 22.8569 3.00781 22.7251 cv3.00781 16.5928 li3.00781 16.4604 3.10352 16.3525 3.23633 16.3525 cv3.83789 16.3525 li3.96973 16.3525 4.06641 16.4604 4.06641 16.5928 cv4.06641 16.8213 li4.72656 16.4487 5.26758 16.2681 5.97754 16.2681 cv7.41992 16.2681 8.07031 17.1699 8.07031 18.769 cv8.07031 22.7251 li8.07031 22.8569 7.96094 22.9653 7.83008 22.9653 cvcp0.916016 22.9653 mo0.253906 22.9653 li0.133789 22.9653 0.0371094 22.8569 0.0371094 22.7251 cv0.0371094 14.2603 li0.0371094 14.1401 0.12207 14.0317 0.253906 14.0317 cv0.916016 14.0317 li1.03516 14.0317 1.13281 14.1279 1.13281 14.2603 cv1.13281 22.7251 li1.13281 22.8452 1.04785 22.9653 0.916016 22.9653 cvcp255.865 18.481 mo255.865 17.7598 255.541 17.1943 254.242 17.1943 cv252.895 17.1943 252.618 17.8076 252.618 18.481 cv252.618 18.5771 li252.618 19.1069 252.859 19.8042 254.242 19.8042 cv255.541 19.8042 255.865 19.2983 255.865 18.5771 cv255.865 18.481 licp255.961 23.4116 mo255.961 22.9429 255.576 22.7495 254.494 22.4741 cv253.136 22.1245 li252.787 22.4253 252.547 22.7261 252.547 23.3511 cv252.547 23.4595 li252.547 24.1333 252.943 24.5542 254.277 24.5542 cv255.648 24.5542 255.961 24.1694 255.961 23.5073 cv255.961 23.4116 licp256.936 17.1582 mo256.502 17.2427 li256.719 17.4712 256.912 17.8315 256.912 18.481 cv256.912 18.5771 li256.912 19.8999 256.094 20.6333 254.242 20.6333 cv253.604 20.6333 253.195 20.5376 252.847 20.3931 cv252.643 20.4897 252.547 20.6216 252.547 20.8022 cv252.547 21.0063 252.643 21.1147 252.919 21.187 cv254.711 21.644 li255.889 21.9448 257.02 22.2808 257.02 23.4116 cv257.02 23.5073 li257.02 24.6616 256.25 25.3716 254.277 25.3716 cv252.378 25.3716 251.512 24.6382 251.512 23.4595 cv251.512 23.3511 li251.512 22.6772 251.873 22.1245 252.27 21.8237 cv252.186 21.7886 li251.801 21.6196 251.633 21.2222 251.633 20.8501 cv251.633 20.8374 li251.633 20.5132 251.789 20.1646 252.125 19.9722 cv251.752 19.6235 251.572 19.1909 251.572 18.5771 cv251.572 18.481 li251.572 17.4106 252.174 16.3525 254.242 16.3525 cv256.875 16.3525 li257.02 16.3525 257.152 16.4727 257.152 16.6172 cv257.152 16.9297 li257.152 17.0864 257.068 17.1343 256.936 17.1582 cvcp249.805 22.9663 mo249.227 22.9663 li249.095 22.9663 248.986 22.8589 248.986 22.7261 cv248.986 18.769 li248.986 17.5552 248.578 17.1821 247.664 17.1821 cv247.158 17.1821 246.594 17.3745 246.041 17.6514 cv246.041 22.7261 li246.041 22.8462 245.933 22.9663 245.8 22.9663 cv245.211 22.9663 li245.09 22.9663 244.982 22.8589 244.982 22.7261 cv244.982 16.5933 li244.982 16.4609 245.078 16.3525 245.211 16.3525 cv245.813 16.3525 li245.944 16.3525 246.041 16.4609 246.041 16.5933 cv246.041 16.8218 li246.702 16.4487 247.243 16.2686 247.953 16.2686 cv249.396 16.2686 250.045 17.1704 250.045 18.769 cv250.045 22.7261 li250.045 22.8589 249.937 22.9663 249.805 22.9663 cvcp242.962 22.9663 mo242.385 22.9663 li242.252 22.9663 242.145 22.8589 242.145 22.7261 cv242.145 16.5933 li242.145 16.4609 242.252 16.3525 242.385 16.3525 cv242.962 16.3525 li243.094 16.3525 243.203 16.4609 243.203 16.5933 cv243.203 22.7261 li243.203 22.8589 243.094 22.9663 242.962 22.9663 cvcp242.986 15.2944 mo242.373 15.2944 li242.24 15.2944 242.133 15.186 242.133 15.0542 cv242.133 14.0918 li242.133 13.9595 242.24 13.8511 242.373 13.8511 cv242.986 13.8511 li243.118 13.8511 243.227 13.9595 243.227 14.0918 cv243.227 15.0542 li243.227 15.186 243.118 15.2944 242.986 15.2944 cvcp240.617 17.1821 mo240.064 17.1821 239.559 17.3267 238.958 17.6875 cv238.958 22.7261 li238.958 22.8462 238.85 22.9663 238.717 22.9663 cv238.128 22.9663 li238.008 22.9663 237.899 22.8589 237.899 22.7261 cv237.899 16.5933 li237.899 16.4609 237.996 16.3525 238.128 16.3525 cv238.693 16.3525 li238.825 16.3525 238.922 16.4609 238.922 16.5933 cv238.922 16.8457 li239.523 16.4243 240.076 16.2686 240.617 16.2686 cv240.785 16.2686 240.869 16.3403 240.869 16.4849 cv240.869 16.978 li240.869 17.1099 240.785 17.1821 240.617 17.1821 cvcp235.387 19.0825 mo235.387 17.7236 234.869 17.1943 233.811 17.1943 cv232.776 17.1943 232.199 17.7837 232.199 19.0825 cv232.199 19.1909 li235.387 19.1909 li235.387 19.0825 licp236.229 19.9966 mo232.199 19.9966 li232.199 20.1646 li232.199 21.5952 232.765 22.1245 233.871 22.1245 cv234.568 22.1245 235.459 22.0767 236.012 21.9927 cv236.035 21.9927 236.047 21.9927 236.072 21.9927 cv236.168 21.9927 236.264 22.0405 236.264 22.1606 cv236.264 22.5698 li236.264 22.7261 236.216 22.8101 236.023 22.8462 cv235.338 22.978 234.677 23.0503 233.871 23.0503 cv232.488 23.0503 231.142 22.4019 231.142 20.1646 cv231.142 19.0825 li231.142 17.3628 232.092 16.2686 233.811 16.2686 cv235.566 16.2686 236.457 17.3745 236.457 19.0825 cv236.457 19.7319 li236.457 19.8882 236.373 19.9966 236.229 19.9966 cvcp229.386 22.9663 mo228.76 22.9663 li228.641 22.9663 228.544 22.8589 228.544 22.7261 cv228.544 14.1519 li228.544 14.0317 228.628 13.9233 228.76 13.9233 cv229.386 13.9233 li229.506 13.9233 229.602 14.0195 229.602 14.1519 cv229.602 22.7261 li229.602 22.8462 229.518 22.9663 229.386 22.9663 cvcp226.451 22.9663 mo225.826 22.9663 li225.706 22.9663 225.609 22.8589 225.609 22.7261 cv225.609 14.1519 li225.609 14.0317 225.693 13.9233 225.826 13.9233 cv226.451 13.9233 li226.572 13.9233 226.668 14.0195 226.668 14.1519 cv226.668 22.7261 li226.668 22.8462 226.584 22.9663 226.451 22.9663 cvcp222.977 19.0825 mo222.977 17.7236 222.459 17.1943 221.401 17.1943 cv220.367 17.1943 219.789 17.7837 219.789 19.0825 cv219.789 19.1909 li222.977 19.1909 li222.977 19.0825 licp223.818 19.9966 mo219.789 19.9966 li219.789 20.1646 li219.789 21.5952 220.355 22.1245 221.461 22.1245 cv222.158 22.1245 223.049 22.0767 223.602 21.9927 cv223.626 21.9927 223.638 21.9927 223.662 21.9927 cv223.758 21.9927 223.854 22.0405 223.854 22.1606 cv223.854 22.5698 li223.854 22.7261 223.807 22.8101 223.613 22.8462 cv222.928 22.978 222.267 23.0503 221.461 23.0503 cv220.078 23.0503 218.731 22.4019 218.731 20.1646 cv218.731 19.0825 li218.731 17.3628 219.682 16.2686 221.401 16.2686 cv223.156 16.2686 224.047 17.3745 224.047 19.0825 cv224.047 19.7319 li224.047 19.8882 223.963 19.9966 223.818 19.9966 cvcp216.254 17.2788 mo215.857 17.2065 215.232 17.1943 214.848 17.1943 cv213.669 17.1943 213.284 17.9277 213.284 19.2144 cv213.284 20.0806 li213.284 21.3911 213.656 22.1245 214.848 22.1245 cv215.256 22.1245 215.846 22.0894 216.254 22.0522 cv216.254 17.2788 licp217.061 22.8462 mo216.314 22.9907 215.581 23.0503 214.848 23.0503 cv213.056 23.0503 212.226 21.8843 212.226 20.0806 cv212.226 19.2144 li212.226 17.3267 213.092 16.2686 214.848 16.2686 cv215.221 16.2686 215.785 16.3042 216.254 16.3887 cv216.254 14.1519 li216.254 14.0317 216.351 13.9233 216.482 13.9233 cv217.096 13.9233 li217.217 13.9233 217.313 14.0195 217.313 14.1519 cv217.313 22.5698 li217.313 22.7261 217.276 22.8101 217.061 22.8462 cvcp209.965 19.2026 mo209.965 17.9761 209.472 17.1943 208.342 17.1943 cv207.223 17.1943 206.73 17.9639 206.73 19.2026 cv206.73 20.1167 li206.73 21.3433 207.211 22.1245 208.342 22.1245 cv209.46 22.1245 209.965 21.355 209.965 20.1167 cv209.965 19.2026 licp208.342 23.0503 mo206.574 23.0503 205.672 21.8843 205.672 20.1167 cv205.672 19.2026 li205.672 17.4351 206.574 16.2686 208.342 16.2686 cv210.109 16.2686 211.023 17.4351 211.023 19.2026 cv211.023 20.1167 li211.023 21.8843 210.109 23.0503 208.342 23.0503 cvcp203.99 22.9663 mo203.4 22.9663 li203.269 22.9663 203.16 22.8589 203.16 22.7261 cv203.16 15.5947 li203.16 15.5708 203.16 15.5591 203.148 15.5591 cv203.136 15.5591 203.136 15.5591 203.124 15.583 cv201.404 19.1421 li201.284 19.3833 201.164 19.4917 200.863 19.4917 cv200.31 19.4917 li200.01 19.4917 199.889 19.3833 199.769 19.1421 cv198.049 15.583 li198.037 15.5591 198.037 15.5591 198.025 15.5591 cv198.014 15.5591 198.014 15.5708 198.014 15.5947 cv198.014 22.7261 li198.014 22.8589 197.904 22.9663 197.772 22.9663 cv197.184 22.9663 li197.051 22.9663 196.943 22.8589 196.943 22.7261 cv196.943 14.3804 li196.943 14.188 197.1 14.0317 197.291 14.0317 cv198.073 14.0317 li198.289 14.0317 198.386 14.0796 198.458 14.2358 cv200.442 18.3608 li200.49 18.4692 200.526 18.4932 200.586 18.4932 cv200.646 18.4932 200.683 18.4692 200.73 18.3608 cv202.715 14.2358 li202.787 14.0796 202.883 14.0317 203.1 14.0317 cv203.881 14.0317 li204.074 14.0317 204.23 14.188 204.23 14.3804 cv204.23 22.7261 li204.23 22.8589 204.122 22.9663 203.99 22.9663 cvcp192.482 22.9663 mo191.616 22.9663 li191.484 22.9663 191.436 22.9302 191.34 22.8101 cv188.947 19.8521 li188.947 22.7261 li188.947 22.8589 188.838 22.9663 188.706 22.9663 cv188.129 22.9663 li187.997 22.9663 187.889 22.8589 187.889 22.7261 cv187.889 14.1641 li187.889 14.0317 187.997 13.9233 188.129 13.9233 cv188.706 13.9233 li188.838 13.9233 188.947 14.0317 188.947 14.1641 cv188.947 19.1665 li191.352 16.4609 li191.424 16.3765 191.472 16.3525 191.592 16.3525 cv192.434 16.3525 li192.555 16.3525 192.614 16.4126 192.614 16.4849 cv192.614 16.5327 192.59 16.5811 192.555 16.6172 cv189.908 19.479 li192.578 22.7017 li192.602 22.7261 192.614 22.7739 192.614 22.8101 cv192.614 22.894 192.566 22.9663 192.482 22.9663 cvcp184.221 23.0503 mo183.776 23.0503 182.91 23.0151 182.321 22.8706 cv182.165 22.8345 182.068 22.7622 182.068 22.6304 cv182.068 22.2085 li182.068 22.1011 182.165 22.0288 182.285 22.0288 cv182.31 22.0288 182.321 22.0288 182.334 22.0288 cv182.91 22.1011 183.788 22.1606 184.221 22.1606 cv185.003 22.1606 185.412 21.9565 185.412 21.3071 cv185.412 20.9468 185.195 20.7183 184.51 20.3091 cv183.295 19.5874 li182.563 19.1421 182.068 18.6255 182.068 17.8677 cv182.068 16.6172 183.007 16.2686 184.245 16.2686 cv184.919 16.2686 185.557 16.3286 186.121 16.4243 cv186.277 16.4487 186.35 16.5327 186.35 16.665 cv186.35 17.062 li186.35 17.2065 186.266 17.2666 186.145 17.2666 cv186.133 17.2666 186.121 17.2666 186.109 17.2666 cv185.688 17.2305 184.919 17.1704 184.245 17.1704 cv183.572 17.1704 183.127 17.2544 183.127 17.8677 cv183.127 18.2285 183.403 18.457 183.957 18.7817 cv185.146 19.4917 li186.145 20.0806 186.47 20.5972 186.47 21.3071 cv186.47 22.5337 185.568 23.0503 184.221 23.0503 cvcp180.266 22.9663 mo179.688 22.9663 li179.556 22.9663 179.447 22.8589 179.447 22.7261 cv179.447 16.5933 li179.447 16.4609 179.556 16.3525 179.688 16.3525 cv180.266 16.3525 li180.397 16.3525 180.506 16.4609 180.506 16.5933 cv180.506 22.7261 li180.506 22.8589 180.397 22.9663 180.266 22.9663 cvcp180.289 15.2944 mo179.676 15.2944 li179.544 15.2944 179.436 15.186 179.436 15.0542 cv179.436 14.0918 li179.436 13.9595 179.544 13.8511 179.676 13.8511 cv180.289 13.8511 li180.422 13.8511 180.529 13.9595 180.529 14.0918 cv180.529 15.0542 li180.529 15.186 180.422 15.2944 180.289 15.2944 cvcp177.896 22.9907 mo177.654 23.0269 177.342 23.0503 177.113 23.0503 cv176.008 23.0503 175.479 22.7622 175.479 21.439 cv175.479 17.2427 li174.312 17.1099 li174.18 17.0981 174.083 17.0259 174.083 16.8936 cv174.083 16.5688 li174.083 16.437 174.18 16.3525 174.312 16.3525 cv175.479 16.3525 li175.479 15.1743 li175.479 15.0542 175.563 14.9575 175.694 14.9336 cv176.32 14.8374 li176.332 14.8374 176.344 14.8374 176.355 14.8374 cv176.452 14.8374 176.536 14.9214 176.536 15.0415 cv176.536 16.3525 li177.835 16.3525 li177.967 16.3525 178.076 16.4609 178.076 16.5933 cv178.076 17.002 li178.076 17.1343 177.967 17.2427 177.835 17.2427 cv176.536 17.2427 li176.536 21.439 li176.536 22.1011 176.705 22.1968 177.186 22.1968 cv177.859 22.1968 li178.027 22.1968 178.111 22.2456 178.111 22.3647 cv178.111 22.7866 li178.111 22.894 178.052 22.9663 177.896 22.9907 cvcp172.049 19.7681 mo171.158 19.7681 li169.704 19.7681 169.319 20.0933 169.319 20.9468 cv169.319 21.0903 li169.319 21.9565 169.729 22.1851 170.426 22.1851 cv170.979 22.1851 171.472 22.0171 172.049 21.7036 cv172.049 19.7681 licp172.866 22.9663 mo172.313 22.9663 li172.182 22.9663 172.072 22.8589 172.072 22.7261 cv172.072 22.4614 li171.496 22.7983 170.895 23.0503 170.221 23.0503 cv169.199 23.0503 168.261 22.606 168.261 21.103 cv168.261 20.9585 li168.261 19.6597 169.018 19.0103 171.158 19.0103 cv172.049 19.0103 li172.049 18.5293 li172.049 17.519 171.7 17.1704 170.762 17.1704 cv169.98 17.1704 169.403 17.2183 168.922 17.2666 cv168.898 17.2666 168.886 17.2666 168.862 17.2666 cv168.754 17.2666 168.646 17.2305 168.646 17.0742 cv168.646 16.6533 li168.646 16.521 168.729 16.4487 168.898 16.4243 cv169.391 16.3403 169.944 16.2686 170.762 16.2686 cv172.434 16.2686 173.107 17.1099 173.107 18.5293 cv173.107 22.7261 li173.107 22.8589 172.999 22.9663 172.866 22.9663 cvcp166.625 22.9663 mo166.049 22.9663 li165.916 22.9663 165.808 22.8589 165.808 22.7261 cv165.808 18.4692 li165.808 17.459 165.339 17.1821 164.713 17.1821 cv164.28 17.1821 163.775 17.3267 163.307 17.5073 cv163.379 17.7715 163.414 18.084 163.414 18.4448 cv163.414 22.7261 li163.414 22.8462 163.33 22.9663 163.198 22.9663 cv162.561 22.9663 li162.44 22.9663 162.356 22.8589 162.356 22.7261 cv162.356 18.4448 li162.356 17.3989 162.056 17.1821 161.43 17.1821 cv160.998 17.1821 160.469 17.3989 159.963 17.6514 cv159.963 22.7261 li159.963 22.8462 159.879 22.9663 159.746 22.9663 cv159.109 22.9663 li158.989 22.9663 158.905 22.8589 158.905 22.7261 cv158.905 16.5933 li158.905 16.4609 159.002 16.3525 159.134 16.3525 cv159.734 16.3525 li159.867 16.3525 159.963 16.4609 159.963 16.5933 cv159.963 16.8218 li160.444 16.521 161.058 16.2563 161.719 16.2563 cv162.236 16.2563 162.621 16.4009 162.922 16.7495 cv163.583 16.437 164.293 16.2563 164.918 16.2563 cv166 16.2563 166.866 16.7974 166.866 18.4692 cv166.866 22.7261 li166.866 22.8589 166.758 22.9663 166.625 22.9663 cvcp156.392 19.0825 mo156.392 17.7236 155.875 17.1943 154.816 17.1943 cv153.782 17.1943 153.205 17.7837 153.205 19.0825 cv153.205 19.1909 li156.392 19.1909 li156.392 19.0825 licp157.233 19.9966 mo153.205 19.9966 li153.205 20.1646 li153.205 21.5952 153.771 22.1245 154.877 22.1245 cv155.574 22.1245 156.464 22.0767 157.018 21.9927 cv157.041 21.9927 157.053 21.9927 157.077 21.9927 cv157.174 21.9927 157.27 22.0405 157.27 22.1606 cv157.27 22.5698 li157.27 22.7261 157.222 22.8101 157.029 22.8462 cv156.344 22.978 155.683 23.0503 154.877 23.0503 cv153.494 23.0503 152.146 22.4019 152.146 20.1646 cv152.146 19.0825 li152.146 17.3628 153.097 16.2686 154.816 16.2686 cv156.572 16.2686 157.462 17.3745 157.462 19.0825 cv157.462 19.7319 li157.462 19.8882 157.378 19.9966 157.233 19.9966 cvcp151.029 22.9907 mo150.788 23.0269 150.475 23.0503 150.247 23.0503 cv149.141 23.0503 148.611 22.7622 148.611 21.439 cv148.611 17.2427 li147.445 17.1099 li147.313 17.0981 147.217 17.0259 147.217 16.8936 cv147.217 16.5688 li147.217 16.437 147.313 16.3525 147.445 16.3525 cv148.611 16.3525 li148.611 15.1743 li148.611 15.0542 148.695 14.9575 148.828 14.9336 cv149.453 14.8374 li149.465 14.8374 149.477 14.8374 149.489 14.8374 cv149.586 14.8374 149.67 14.9214 149.67 15.0415 cv149.67 16.3525 li150.969 16.3525 li151.101 16.3525 151.209 16.4609 151.209 16.5933 cv151.209 17.002 li151.209 17.1343 151.101 17.2427 150.969 17.2427 cv149.67 17.2427 li149.67 21.439 li149.67 22.1011 149.838 22.1968 150.319 22.1968 cv150.992 22.1968 li151.161 22.1968 151.245 22.2456 151.245 22.3647 cv151.245 22.7866 li151.245 22.894 151.185 22.9663 151.029 22.9907 cvcp145.182 19.7681 mo144.292 19.7681 li142.837 19.7681 142.452 20.0933 142.452 20.9468 cv142.452 21.0903 li142.452 21.9565 142.861 22.1851 143.559 22.1851 cv144.111 22.1851 144.605 22.0171 145.182 21.7036 cv145.182 19.7681 licp146 22.9663 mo145.447 22.9663 li145.314 22.9663 145.206 22.8589 145.206 22.7261 cv145.206 22.4614 li144.629 22.7983 144.027 23.0503 143.354 23.0503 cv142.332 23.0503 141.395 22.606 141.395 21.103 cv141.395 20.9585 li141.395 19.6597 142.152 19.0103 144.292 19.0103 cv145.182 19.0103 li145.182 18.5293 li145.182 17.519 144.834 17.1704 143.896 17.1704 cv143.113 17.1704 142.537 17.2183 142.056 17.2666 cv142.031 17.2666 142.02 17.2666 141.995 17.2666 cv141.887 17.2666 141.779 17.2305 141.779 17.0742 cv141.779 16.6533 li141.779 16.521 141.863 16.4487 142.031 16.4243 cv142.524 16.3403 143.078 16.2686 143.896 16.2686 cv145.566 16.2686 146.24 17.1099 146.24 18.5293 cv146.24 22.7261 li146.24 22.8589 146.132 22.9663 146 22.9663 cvcp139.65 22.9663 mo139.062 22.9663 li138.93 22.9663 138.82 22.8589 138.82 22.7261 cv138.82 15.5947 li138.82 15.5708 138.82 15.5591 138.809 15.5591 cv138.797 15.5591 138.797 15.5591 138.785 15.583 cv137.064 19.1421 li136.945 19.3833 136.824 19.4917 136.523 19.4917 cv135.971 19.4917 li135.67 19.4917 135.55 19.3833 135.43 19.1421 cv133.71 15.583 li133.698 15.5591 133.698 15.5591 133.686 15.5591 cv133.674 15.5591 133.674 15.5708 133.674 15.5947 cv133.674 22.7261 li133.674 22.8589 133.565 22.9663 133.434 22.9663 cv132.844 22.9663 li132.712 22.9663 132.604 22.8589 132.604 22.7261 cv132.604 14.3804 li132.604 14.188 132.76 14.0317 132.952 14.0317 cv133.734 14.0317 li133.951 14.0317 134.047 14.0796 134.119 14.2358 cv136.104 18.3608 li136.151 18.4692 136.188 18.4932 136.248 18.4932 cv136.307 18.4932 136.344 18.4692 136.392 18.3608 cv138.376 14.2358 li138.447 14.0796 138.545 14.0317 138.761 14.0317 cv139.543 14.0317 li139.734 14.0317 139.891 14.188 139.891 14.3804 cv139.891 22.7261 li139.891 22.8589 139.783 22.9663 139.65 22.9663 cvcp126.977 18.481 mo126.977 17.7598 126.651 17.1943 125.353 17.1943 cv124.006 17.1943 123.729 17.8076 123.729 18.481 cv123.729 18.5771 li123.729 19.1069 123.97 19.8042 125.353 19.8042 cv126.651 19.8042 126.977 19.2983 126.977 18.5771 cv126.977 18.481 licp127.072 23.4116 mo127.072 22.9429 126.688 22.7495 125.605 22.4741 cv124.246 22.1245 li123.897 22.4253 123.656 22.7261 123.656 23.3511 cv123.656 23.4595 li123.656 24.1333 124.054 24.5542 125.389 24.5542 cv126.76 24.5542 127.072 24.1694 127.072 23.5073 cv127.072 23.4116 licp128.046 17.1582 mo127.613 17.2427 li127.83 17.4712 128.021 17.8315 128.021 18.481 cv128.021 18.5771 li128.021 19.8999 127.205 20.6333 125.353 20.6333 cv124.715 20.6333 124.307 20.5376 123.957 20.3931 cv123.753 20.4897 123.656 20.6216 123.656 20.8022 cv123.656 21.0063 123.753 21.1147 124.029 21.187 cv125.821 21.644 li127 21.9448 128.131 22.2808 128.131 23.4116 cv128.131 23.5073 li128.131 24.6616 127.361 25.3716 125.389 25.3716 cv123.488 25.3716 122.623 24.6382 122.623 23.4595 cv122.623 23.3511 li122.623 22.6772 122.983 22.1245 123.381 21.8237 cv123.296 21.7886 li122.911 21.6196 122.743 21.2222 122.743 20.8501 cv122.743 20.8374 li122.743 20.5132 122.899 20.1646 123.236 19.9722 cv122.863 19.6235 122.683 19.1909 122.683 18.5771 cv122.683 18.481 li122.683 17.4106 123.284 16.3525 125.353 16.3525 cv127.986 16.3525 li128.131 16.3525 128.263 16.4727 128.263 16.6172 cv128.263 16.9297 li128.263 17.0864 128.179 17.1343 128.046 17.1582 cvcp120.314 19.2026 mo120.314 17.9761 119.82 17.1943 118.69 17.1943 cv117.572 17.1943 117.079 17.9639 117.079 19.2026 cv117.079 20.1167 li117.079 21.3433 117.561 22.1245 118.69 22.1245 cv119.809 22.1245 120.314 21.355 120.314 20.1167 cv120.314 19.2026 licp118.69 23.0503 mo116.923 23.0503 116.021 21.8843 116.021 20.1167 cv116.021 19.2026 li116.021 17.4351 116.923 16.2686 118.69 16.2686 cv120.458 16.2686 121.372 17.4351 121.372 19.2026 cv121.372 20.1167 li121.372 21.8843 120.458 23.0503 118.69 23.0503 cvcp112.463 22.9663 mo111.598 22.9663 li111.465 22.9663 111.416 22.9302 111.32 22.8101 cv108.928 19.8521 li108.928 22.7261 li108.928 22.8589 108.819 22.9663 108.687 22.9663 cv108.109 22.9663 li107.978 22.9663 107.869 22.8589 107.869 22.7261 cv107.869 14.1641 li107.869 14.0317 107.978 13.9233 108.109 13.9233 cv108.687 13.9233 li108.819 13.9233 108.928 14.0317 108.928 14.1641 cv108.928 19.1665 li111.332 16.4609 li111.404 16.3765 111.453 16.3525 111.572 16.3525 cv112.414 16.3525 li112.535 16.3525 112.596 16.4126 112.596 16.4849 cv112.596 16.5327 112.571 16.5811 112.535 16.6172 cv109.89 19.479 li112.559 22.7017 li112.583 22.7261 112.596 22.7739 112.596 22.8101 cv112.596 22.894 112.547 22.9663 112.463 22.9663 cvcp105.734 22.9663 mo105.158 22.9663 li105.025 22.9663 104.918 22.8589 104.918 22.7261 cv104.918 16.5933 li104.918 16.4609 105.025 16.3525 105.158 16.3525 cv105.734 16.3525 li105.867 16.3525 105.976 16.4609 105.976 16.5933 cv105.976 22.7261 li105.976 22.8589 105.867 22.9663 105.734 22.9663 cvcp105.76 15.2944 mo105.146 15.2944 li105.014 15.2944 104.905 15.186 104.905 15.0542 cv104.905 14.0918 li104.905 13.9595 105.014 13.8511 105.146 13.8511 cv105.76 13.8511 li105.892 13.8511 106 13.9595 106 14.0918 cv106 15.0542 li106 15.186 105.892 15.2944 105.76 15.2944 cvcp103.365 22.9907 mo103.125 23.0269 102.813 23.0503 102.584 23.0503 cv101.477 23.0503 100.948 22.7622 100.948 21.439 cv100.948 17.2427 li99.7813 17.1099 li99.6494 17.0981 99.5527 17.0259 99.5527 16.8936 cv99.5527 16.5688 li99.5527 16.437 99.6494 16.3525 99.7813 16.3525 cv100.948 16.3525 li100.948 15.1743 li100.948 15.0542 101.032 14.9575 101.164 14.9336 cv101.789 14.8374 li101.802 14.8374 101.813 14.8374 101.826 14.8374 cv101.922 14.8374 102.006 14.9214 102.006 15.0415 cv102.006 16.3525 li103.305 16.3525 li103.438 16.3525 103.545 16.4609 103.545 16.5933 cv103.545 17.002 li103.545 17.1343 103.438 17.2427 103.305 17.2427 cv102.006 17.2427 li102.006 21.439 li102.006 22.1011 102.175 22.1968 102.655 22.1968 cv103.329 22.1968 li103.498 22.1968 103.582 22.2456 103.582 22.3647 cv103.582 22.7866 li103.582 22.894 103.521 22.9663 103.365 22.9907 cvcp97.5186 19.7681 mo96.6289 19.7681 li95.1738 19.7681 94.7891 20.0933 94.7891 20.9468 cv94.7891 21.0903 li94.7891 21.9565 95.1973 22.1851 95.8945 22.1851 cv96.4482 22.1851 96.9414 22.0171 97.5186 21.7036 cv97.5186 19.7681 licp98.3359 22.9663 mo97.7832 22.9663 li97.6504 22.9663 97.543 22.8589 97.543 22.7261 cv97.543 22.4614 li96.9648 22.7983 96.3643 23.0503 95.6904 23.0503 cv94.668 23.0503 93.7305 22.606 93.7305 21.103 cv93.7305 20.9585 li93.7305 19.6597 94.4883 19.0103 96.6289 19.0103 cv97.5186 19.0103 li97.5186 18.5293 li97.5186 17.519 97.1699 17.1704 96.2324 17.1704 cv95.4502 17.1704 94.873 17.2183 94.3926 17.2666 cv94.3682 17.2666 94.3555 17.2666 94.332 17.2666 cv94.2236 17.2666 94.1152 17.2305 94.1152 17.0742 cv94.1152 16.6533 li94.1152 16.521 94.1992 16.4487 94.3682 16.4243 cv94.8613 16.3403 95.4141 16.2686 96.2324 16.2686 cv97.9033 16.2686 98.5771 17.1099 98.5771 18.5293 cv98.5771 22.7261 li98.5771 22.8589 98.4688 22.9663 98.3359 22.9663 cvcp92.0957 22.9663 mo91.5176 22.9663 li91.3857 22.9663 91.2773 22.8589 91.2773 22.7261 cv91.2773 18.4692 li91.2773 17.459 90.8086 17.1821 90.1836 17.1821 cv89.75 17.1821 89.2451 17.3267 88.7764 17.5073 cv88.8486 17.7715 88.8848 18.084 88.8848 18.4448 cv88.8848 22.7261 li88.8848 22.8462 88.8008 22.9663 88.668 22.9663 cv88.0313 22.9663 li87.9102 22.9663 87.8262 22.8589 87.8262 22.7261 cv87.8262 18.4448 li87.8262 17.3989 87.5254 17.1821 86.9004 17.1821 cv86.4668 17.1821 85.9385 17.3989 85.4336 17.6514 cv85.4336 22.7261 li85.4336 22.8462 85.3486 22.9663 85.2168 22.9663 cv84.5801 22.9663 li84.459 22.9663 84.375 22.8589 84.375 22.7261 cv84.375 16.5933 li84.375 16.4609 84.4707 16.3525 84.6035 16.3525 cv85.2051 16.3525 li85.3369 16.3525 85.4336 16.4609 85.4336 16.5933 cv85.4336 16.8218 li85.9141 16.521 86.5273 16.2563 87.1895 16.2563 cv87.7061 16.2563 88.0908 16.4009 88.3906 16.7495 cv89.0527 16.437 89.7617 16.2563 90.3877 16.2563 cv91.4697 16.2563 92.3359 16.7974 92.3359 18.4692 cv92.3359 22.7261 li92.3359 22.8589 92.2275 22.9663 92.0957 22.9663 cvcp82.9805 17.1821 mo82.4268 17.1821 81.9219 17.3267 81.3203 17.6875 cv81.3203 22.7261 li81.3203 22.8462 81.2129 22.9663 81.0801 22.9663 cv80.4902 22.9663 li80.3711 22.9663 80.2617 22.8589 80.2617 22.7261 cv80.2617 16.5933 li80.2617 16.4609 80.3584 16.3525 80.4902 16.3525 cv81.0566 16.3525 li81.1885 16.3525 81.2842 16.4609 81.2842 16.5933 cv81.2842 16.8457 li81.8857 16.4243 82.4395 16.2686 82.9805 16.2686 cv83.1484 16.2686 83.2324 16.3403 83.2324 16.4849 cv83.2324 16.978 li83.2324 17.1099 83.1484 17.1821 82.9805 17.1821 cvcp77.7852 19.2026 mo77.7852 17.9761 77.292 17.1943 76.1621 17.1943 cv75.043 17.1943 74.5508 17.9639 74.5508 19.2026 cv74.5508 20.1167 li74.5508 21.3433 75.0313 22.1245 76.1621 22.1245 cv77.2803 22.1245 77.7852 21.355 77.7852 20.1167 cv77.7852 19.2026 licp76.1621 23.0503 mo74.3945 23.0503 73.4922 21.8843 73.4922 20.1167 cv73.4922 19.2026 li73.4922 17.4351 74.3945 16.2686 76.1621 16.2686 cv77.9297 16.2686 78.8438 17.4351 78.8438 19.2026 cv78.8438 20.1167 li78.8438 21.8843 77.9297 23.0503 76.1621 23.0503 cvcp72.374 14.6572 mo71.7969 14.6572 li71.2314 14.6572 71.0625 14.8252 71.0625 15.4868 cv71.0625 16.3525 li72.3262 16.3525 li72.458 16.3525 72.5537 16.4487 72.5537 16.5688 cv72.5537 17.0381 li72.5537 17.1582 72.458 17.2427 72.3262 17.2427 cv71.0625 17.2427 li71.0625 22.7261 li71.0625 22.8462 70.9551 22.9663 70.834 22.9663 cv70.2451 22.9663 li70.1133 22.9663 70.0049 22.8462 70.0049 22.7261 cv70.0049 17.2427 li68.8379 17.1099 li68.7061 17.0981 68.6094 17.0142 68.6094 16.8936 cv68.6094 16.5688 li68.6094 16.4487 68.7061 16.3525 68.8379 16.3525 cv70.0049 16.3525 li70.0049 15.4868 li70.0049 14.1997 70.6299 13.8149 71.6885 13.8149 cv72.0127 13.8149 72.2051 13.8511 72.3613 13.8872 cv72.4941 13.9233 72.5898 13.9717 72.5898 14.0796 cv72.5898 14.4766 li72.5898 14.6089 72.5059 14.6572 72.374 14.6572 cvcp67.251 22.9663 mo66.6738 22.9663 li66.541 22.9663 66.4336 22.8589 66.4336 22.7261 cv66.4336 18.769 li66.4336 17.5552 66.0244 17.1821 65.1104 17.1821 cv64.6055 17.1821 64.04 17.3745 63.4873 17.6514 cv63.4873 22.7261 li63.4873 22.8462 63.3789 22.9663 63.2461 22.9663 cv62.6572 22.9663 li62.5371 22.9663 62.4287 22.8589 62.4287 22.7261 cv62.4287 16.5933 li62.4287 16.4609 62.5254 16.3525 62.6572 16.3525 cv63.2588 16.3525 li63.3906 16.3525 63.4873 16.4609 63.4873 16.5933 cv63.4873 16.8218 li64.1484 16.4487 64.6895 16.2686 65.3984 16.2686 cv66.8418 16.2686 67.4912 17.1704 67.4912 18.769 cv67.4912 22.7261 li67.4912 22.8589 67.3828 22.9663 67.251 22.9663 cvcp60.3359 22.9663 mo59.6748 22.9663 li59.5547 22.9663 59.459 22.8589 59.459 22.7261 cv59.459 14.2603 li59.459 14.1396 59.543 14.0317 59.6748 14.0317 cv60.3359 14.0317 li60.457 14.0317 60.5527 14.1279 60.5527 14.2603 cv60.5527 22.7261 li60.5527 22.8462 60.4688 22.9663 60.3359 22.9663 cvcp0 0 0 0.56 cmykf%ADOBeginClientInjection: EndPageContent "AI11EPS"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI11EPS"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5[[/CSA [/0 ]]] del_resAdobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%%TrailerAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 12.0%%AI8_CreatorVersion: 12.0.1%%For: (PeopleGroup) (PeopleGroup)%%Title: (DTU Informatik A.eps)%%CreationDate: 27/02/08 18:29%AI9_DataStream%Gb",KCNC^ZP2J!ls1g:J(e7hP$3d(&N%ZeMUng$.acCCfG%Y;pUI/(gh-0-lVj>?_q=U)2bQLb],$@mS,uUTi>"p:D'HW*Y,Or_h%ZeL8)\!K$<cYidYQV$5eV"&2/FZn,%<*t%C^Ft(=I-d2fH=$n.37Z`:M/C,:f"-D^I]=;rU#,>,`P_B.k5P7igPa%kO7V,,gUiMr%R=')T1B>`Ks09)F])?b,]/m_%V>B38C]!8dnnN/jHZsme5Om2@@B+T/Hap_7qsD;o:Q%;ZEGZ;hho*P6p(<bib9VN`nCKT8<tB3c%ha<lk[pNL[f,sMjpEk?<]sth4+[@+`FDq0'J,J4"_oMZ/ldu1;q>&Khril1no&K])q>KFBc$t.5:&h`5rc!"/^PEP2C7$"9a8^2e%k^NG1KrLV"C?"O`5$6.gkP86Xj)XZ?cG[]`c2I%MpGAE/0/$u[Npc=B?iCF&V@:0]rhaU_Gdpr4rU&b<T#PaAFeGblgqI'!_=XQ"%VcW%@c8n-=s/#i^T&9LZ\;+(t]m@IKrWTmU?boF.Sc?..b:iYY_rBh!gOG,EIMFu(W3$g4"r,Dte[Fij^d$r@9AII"I[c45<7EHW%Jk\ej%MmuL=H`.@/q:UJq2<jT;9h#CjHXVaLXk!BdE;F\mdb5"E,Jk2J8`1"KJ/iRJ_iA'/UjA,__g0+05c"cJ5,WREa*ZLrT5uN%jN%"F?oR880Sc[uJ7]H**Lm-Kg`2sDTDrJsTi70T^%gc$p=hai<"2&qj6sFqh]^qHq-9Rrj8W<C[p%h$>19sYVc]F'[4R\r.;\N5%Q>0VTe[DBRdUibe-3Pk5i!4%QJ>GTJ;YUQJA#]8D9?lX%F$@W_k&W(pHA^UOT!g6%5!?mR:J[r"opGSKrLl0u[ocSCf=Le[Iq'oI%'E6!L3$oLlI>9&ahcL(QKYMN^1)!V'a+V4t0,tT'`g1;0W+?q\rl/s<rs6RuiB(a3l2=]ka+_:5bipRnA::]F1rhG21e[V5C=:2&%pXFEP)nd8=/o)^YkQac>q!^5N6n:g'VXJ3;n:*!Cj-(4T=eWDd55^CiiTOtRnMg+\+o!!LiV;n$XWh0[bq$ILh^CI74W"$Y25C/u%XCE]J2jkI#3V=G?:App];Tl@P<'l&<%$"(:'1[hcC"2c,NXpVL.Dg!C+3b,B`SXc%7ot*^Qn<Z?Arb_5fI]'6\0BR[4XWoH>`a@W%CJ+1n]q\`.pX6]_cXfOUCt*Y[-#]^4WBP`+5Lac.R=rhljto$H_J/okr6;jEl;V-3DTt79jsf=S@CP0C`]pPqECb8!?=fPd]FNR=%R7XKNB1)MFrK[+T]2V_.3r\(;6kpI:1_"kss/-rLB)%SiVk<5^CC-1(V]Y*cn,,EKJ-6L7]U*hhr]*$6Dt<r#1RleLq1&7?^,S;'%8H,61:/:$Ar'1/0l%eI_Xr[M=Feuk70DZd1f9j+R[V;6nG/sCXOgiU"WB3<7=Mcucs)DmN:U(%M!n`XUmjp/9XDrQ&>Po99!?>=[%n#uunKV,L`rcT[](Aa$ZVSD?^pg1$lhr<Pc)qm7!,/Wg_^:SapetmgS-V#6T,(Efkn"X(]%CQ<H2V'k\Z2YTs.eTa942Ke8rlZ8M%+,ucDUfjH);YsRN8i@1YNic4f3-.&sr1Dhu5PUQ45:VS`O5c*rTCFM]o?OhcV[br/S)sdMQKaB.N`M;!/Nr(]j6?t.Ij6Q+s/C1>%9r`,QagCWoCAnEa?FD14Pb5Jb$-dks<bc-jau7GP;_'V]1(($)4dV9C-=J!m-C%6sTiH^'htV)WCP:0+bOqP`kI$KHg^2Q/DrR5f%r/W.%brg/`+dV*]*T<M1f<a7*q*4SL'g.&nJ`h]5:4:')B1SVX%*R:gk??`'ZUTFiPBrJmQQEpZdqhT;=:8ancUj^nq!WmU+Q$,p%jkRhHo1[+^nSEAM0]T0@#0d?K5K!/!d8MNA9]$0U04P-tqkR0]UthS%)[P][c93h#7D=o;036D0XN`P_`gs?=`9_M7o`*7L7'JM_%RHN^#hHoV'l%r66OqKIOR!rhg[CcD(majQ+1jY^45CSpP5g>Cs++'Y%F+%"0WGo6?J#GN9AGTZ(7f(s;(1gqLrRcVcC'RIO_=u1V%r*0">HG8C.1&o;JE@f.fB^?N_2fDPTUegU:CK0^dMVe.,*@U&7ds(%tr!#")LC^0ra1pMZHOHZ'Dbr$f^5_%F2r@t*^fQ$!]7'JD%p!(,'l;'ogDgtqa^-BA^5FGe/DVfj?El'O,F$__aH?T+F"i7)!QQNqHgYS!8BS6)*o%d+A]stS-apc@`?9_]O0/bc]q>rPA]?0F-%iT'gWO12T"WINa-;E#I5Ticb&hXQ#qE:_lpc1LRr\3U'g7sF\hpD,0jq@2rU0"4#/^Uh#Sq<n0uqoank(CY\`hF-7<nZpWEo=IGo%+9.T*8"es^f0A(t?%0H3fN:DQ5JOhF]XV.XrpAbEid,Z]a,>/NGLsg@7Hhk<58I>0+,Wf?aSF*8ahOJ*I9>)X0%7GUS%#UhidT2%%G^KAi/\@4un'=3L@X%:uT>m%t8"fD&q9A`k,f3KD8:CPgJY%!U'#@J@p'hSQP4ZG6[>$"dC,3CM^AmNTq:eOb[sshD#sS=m0>1N,%Se1\?C)@pBPd@jLIocTUWfQFJ4br415,h<m.^"cZasa;oGb"=SW$=/uF*4QZe7hi?T[Ym20q_=LW,OT-$-c='CZ`l]F&Fln]%0J4%TXGeVFfV),3p7eOdrTr=:\:WcNA?L@T^H"4)J?\hk/bb300D-?k1%s_J[V:)W/7sbXL$afHXpc4DNF1A4`+uu>1;cfZkdb4(KoWm%4)=$0s2#qig;=S3B]\/cGVVN&U?*QH+D$p[TP:?!`M9:"H608K(rdPN/;'6sbJ7]Q4Eqip'uqs`+EJ[3+S3B)5soBq:n*5/.p&lZ%3O!cM=G:>H19M\PS;,&L3A`]u<u>6IUQ`[!#DOUa*1*(JoU13[25hSf<*L+:?^7(-nRcqL,D54j0_#X=^qsP;$I(o8YY`BEA@)+\%%Ng61VD$q1n:\<o/ers^<;3n$"OWos6?R`1bdE2%<#-0V^n,&OUDZaMJ>mHq)%8&e"%uPp&tZmJc!fFg?j/]pAIGPR@!*Djk8MqL%"P/$.!?)pY6D.JT"V`\A/.J7H%6/G2\24GlU;:eQdTUOL>>/m#X0GN9<Z7:$\a_/W5NBkMl,3nY&^tH(UiH%aD)T,?9nVG6iOe3r%F+1GHAD;HP1$pJFXl1XjL,s41g;^%MO6gN7dB]\1Y--bfa,QXuG,ADfEt`77i]Kc@infFG?$5@QU=;lG\f87SZSK)Z&F=-h`?*ae%C1((Q?=[YYDT^X(o2Be/Le-F9S>FLnd7hYeQ*Zb<X%N!qV^tVIBA*^legHAKKX'MCZlR:+-h1,JUg5i&8%fe&q<6g4SrqRp&SL0'%k2W8T"!d-8<cJIpgtP"_EHRD<[4kj<)\sltY]:OMDrZf'=6WBS6G=qa/D?.pPms7lE'[Rg,uk^!6NpJFF;+HZR6()smEp1s<S=#E%XQld!P]q:K:UOq3h+"Sb99?a9!?c.:h'AquFW.<oY.f.eD7/%eGZ+`\/C6B/^$u3+MiXHDX/=T#4Y^@PTI.EeX'5$V0^Y0@[+mP7%J2QVKel--`Q!Z8S6>Tpd?8X]9m"M2F*eQ8YY]<[XCmS?J>6.r(_#^[+infKtBiA6Z?]UW.G,eg:Z)Pa'SQMl00CZeV&J0D6Cl9I-%ZFT@Bje;(pEDene,8aH1H>:>cJNg=IK16eW-;I?4:SL!hG'\6K:Aq.RD,9Pu!NEO/RSocJSt);jT?L)C-V#QC`1OQ'p;DQ]X+>jN%fJoeL-ca9JoAeNod;_/>eZh2RO6s1QiN`LD<6nA'-hHBoHp4#Ac,8>_h7T<5\H263!<Q<J:1kr\j4Sf<RiTbjbg5(GSQV&RorJ0H%=]\+k7jggI8+WM/dEtfNnji,H4gH2sC7o2H[d7]f$--HqB&P.ki.DDSYe^<8Ck,X=rm[S8@mB]DIg#B//+7lO/P,=B_dL5LB7cVb%R6,H*H08Gu/-s$08>cN(E8$nja6akRQ(r$"F.g?Oct"uS,H@jrHO;7J0rR,h:jE,@50gU0#Ha<Zgj84f=s`$bOmY8^/<dSYLrT*9%GFbZQTEjnp\h:H+6N@u=rKY)kIrBt<h`onE\6;RT!5SD1WVs!p!d95lqJXV`=>S8<aXla\=j']74#T7P;+*)L?2G8%NKRm\r&RU4%=4WXl"L-p$8HptD.c\/Q`3SqReS!C'70J`]=ro""Eje=1GQ"4XQ2dj$PXq%2V#"09])O[g5A[?`<JolborVBk<#sq6eRLL"2Et4;%7o.93osjG=;uAaB+[/EdRDhb8Bfh>R#Eot%%jqpd&18'f&LZ#H3$+S`SBasIN7+6UXMVWeEuNqo_Gl.[((`<)*$B)ML*48FJD;.G%d0#7G4YA*I#Z!`e`?!B+-ijC\>'p@8`h*gU0/F`IF!.D/5ZgfJ%Rc/\!W320J>$@`J8`EZRNirs5k9Ic"6ZW".Jd'&Bn16!?,8jo%YmVVOq@QQu):8.gT_0[&V][*4+TDm)!J@][/AV@&JG,Yg%%%4&RgSr1.>W3s"uj=l$r.h%ha.#+[7A#Pk.l7mGKio.R`/Ed1K2L,%c;#$cVjnhFkGLC/-TFIjRTCn5HX5TR/nQNM)4JM^_YH4Vc&[kUK<sTbZZ@$B"'+mH=IpJ#RA2SpVeKaV?J74hBi`ZX`$q\FN6%OM%)*%lF"'(*\W0IBoCLR0)YjWfM@?/_[a/;0f'sMp*!Pn%RbaO.bKaO,Y"uCQ6;Sae3/Z;U!Zs[lG&Ke68+AG-"e'kB/jMro:U%]OL%SltU-8_9OMg8$hY`H.K?%aE'Z:%@G)Pu$BO-7N6k[-;Spn`^AE3Kg:toQS;SGb3Elj.rcILrr1_U0G04q$1SS`C<(;/3dut*'\t=%j",?5m:6Ad?2&.Z[QSY8Xf&X\cWYADa0SKB[i5;AW<SH('k5Io/b)%5rP[8c(UT[]bIU:EMY&2qH49(o^/-bmW13&PlC562?jkLq%M`UAK;8GS1$1ta+C=QEBOFd`gBK@?paPtsqHp*lM.OWCnGel[+3@H7*P`p74a!Sc:4JFIb%f#.?T[8-<aL^4`?d-g:\Z&UIVdsZh%V*?!s3>q?,%mO&)0^h6^\#sMQ>B/5>Nf")88;4hRnX[_J'Apqg-l?Rn5)>1NLhn&iP?LE7SbtFg1oV]i,KrdnHa9Vo4fEeP]]`7f%9sHm9/]%$CWtDo^8dig;g\AXk6RtU&-14`7i61;nqc#^5C.Xd2&?1saX$Xb)3c\90nol03nCW9sLfma!@`pNp)jJ\HTWH./eJ6kc%cYUQV?h"+`W<tr[GYmU.ISSKXeL%i-5K/7NnP_<7Ie:4,4F$3,0+7qge%feH\7%JmJ\j`M'h3f'9TT\ed8Z3l[]Ibd<=RKcRAah"%emhj>[2gQ:Q&;FD<EN)H.ah`o:Q&skWMkrZ(0FQee_!c^/QB09[C2hI`h,)s6D5]jeg(DOX0nbCTct:Q\Z!a&<Rg/-T0nTuFLjBM%;>R6ETl*BSh42aqTT0hr]K2cqPB8t;p-@N9U<86`T?!)SGX0J>h/=A-^Z0R/i&#2"OY0%-0`'Fr7VJMsLjEK/[t03&"Ygo)i^:YV%fRY^_@3(c4U`]0bXItJebunfj>#inC2&OUoKX-;/X(0_\fWHOaWX@KI4+O>Z4O'`+2RHFoBo-q\foD/r/B>kmOA.:ZN)5mDWfE'-%F\pO5CBE0&k"AgUg!Cp4"i/6[K9@Tu?-)^CZ7so@2A.Xf8mKT-=@H1_Lq&+nJqX@<1):3,p+W]p"D%F7KmbIkDk0A2V&nGO;*J$I%*mgsC2!PNNc1Oji7dV70qd^)u=quILRQg4?S$i#C*nWO()L_W?c`A#r`3snOingS;?oh)k[68oT1Lq`fmTD=0HoBInMh#$+@Pt=@%GU+Qr.bd&](6?2SUMohhg-+*Z;5*5!>!>!UO.Q$>C]>e7+C,pW5iG/U+NY0-m3&5OUpPi?erX\Y.4cZC@2(08,2"X_J1$Lk,hkeo%FX5^3fKrIN7M7G>A4)3@9#OgUk)sC36&rbs'=!r.lS528$n#RH&`X1c:WS&Q-5850O;W`\.6?1"<=F16N<U-gH[VnWX)H:`#4,Js%>-tjFXX_I'j(qn7XBKW.U04O#@Fn[ofc%/5("Otd*DW?<XDd"]>I_7&Y0tHmg:9u*Gq5bpCsC)q*46qBZA_O(X2J^*G3Ta?ln[*3%>P-<ji=hj^CiH0+^"NG`)5#_uOArH5=M];PCfP"3;T5X[\7#,C6!kMq7Mp6t0ilAq_Db6`K@teR5b,O@d6#Nhn;^BN1i&WS5TJ^B%<O8I'C<"C6bY^7U!&%X9V5ops[*fCi3l4NkGgt1,A321[iiK,a$b2t3-"X2g4K+GATPH\-Da3G7DUfXE6=5?qm0KO0=4e-XCP#?J%j(qUG:!J+@oa'mLntDI/QA0-A*;2Gc4rppd<;d)k?4;hL'"O('K\\!^]:2*M_pLHnY55Z!b[ShI=mTgS=UYL<--T[R5Fa";c3B)r%$"DR=<Y^uR\8@BP@`U73!OXGtmB0;1RjBh1BB-ocH5?in/`F3IH,fIXhif"T':2tUc79<!"X,Bcb>((3(qllm'To*TeK%j;HAn>j%`K4HL:),"@2+?O04`*HObKXoU8MS8sF\8rFATr/XBq)(+PV7WJ2jNH[?J%:nWYtuAd01"A\dmd&f3sQkEMC_-CXiaUh4b[uB?d6?%G&!:W@FD$T1X3FtmT6-lLne6)9bfo>FrURc*G/o90&s>"GDr]1NVi<c2`KpOMmnnB91Sp\nDO4,3'Rr!c\(i\i;>\s57c&cKCe]m%r&cr'&'iLRoCLo<4?,P9cHh.7oAKO/3'Rr!c[BX!l!94Zhr)?HH#S3RS=^&LkJ?t>E./juT78!HVp^4c:B6_OQ(r#?)TCa#,U1R0%QqW)eMTR*Qn6F+JBK;QVLs?Hdc]t:bN":4.N]GFZGkm@t^-hJbjg8`b&^<]s;aV$D70tM*O.&$0O&Md[)<\#alu(l#FL@oc,QFFX%dO[i+p,KZg7sA16]rf`?##8Z0CG`P$3o#l6a!t=nii3#2DT0HY'mcD;T$=DF4c[t<I6N(FAts\MiUl*8l.+f)V[oCoYKFcIP*.Jn%@>TqpOReWb])5LZN<rOa!b"k3[*?ZB:ME)<QH7Lse1k6?McXU\/$3j03b53,`/[ILfp_Y%_50*n?tcVd6>.C\:-%X0lC;K/?(T?R%:Q9-=.j)i6.<Snq%/d\7T1BpG0PrWeg:62raKnr_SO7#c+k(%3GoVhG)"RP7V2@i^rG%$FJ&ln"jJZGVaB(M`r'6R86(e"r1bhu`%;p<Bh1&NRMM^d,oJ3[J,3FhgjkrDA^/3WUs*#HqX4;IHP9!VVR-SX:%IG'M%jjiNf?A9@h[DLTW13m$Cb8GG_.QKL^(MD;W9)%If%dPI?QI!8"oW2Ns#alRD$8YK$SW*VfhDE=^k1+:S+X2.b3@hM'BBqWU":fTF`e>e5[[.J,M^M3uDeh8WTActXQ:p%fE^DR>YTL$!6%gV&OORnt7P6T'N+^%dN9kV.Mu<=^;]S9S:^Yc<TtbF[_\1A@oT:2]+5*T7^52S-G"3_5#Nc%`p%b5l5X6"^;1bM]@#"eVn*5T:2"%9+5WA.,&Vog0d0LeRa'-P$\[]]onU],3Q0u1(?+=R4?,pVksL7[O`DXWUu%1N?+=$Cc<*nR,Gm,G`eSt(R9e\.chd8mc5J6*2Q;!%qHTl?=+HT9*F_>qq*u!uXghI,*DOife@broq/VPa/JpKFrWrrtWlZ&c7-;ijEupM&1/B+:BhEP$G'SpC'uo31\5]Cd&c=39!cf::%@hST=S!s(@_ma5kcLOTTJAc/*^.#qJp3fR39$-lM`Qs<"HDKFu6,6,+T)![ZigG`]+]&#!LE1C,RqG3?P`0oKk,f_@,Z_P=0V`<9%Y/CrIiu`%a*TI-eP654+S[9>"3(r4_-Nf*$R'17WXYa6TPJ*24VDSbK9l^QYVdetkkmL!e\[W333W`2.*K,`<KqrrL9YM;iS*NLB%>*86&+PT+fH]r?%8U&)5gL3dmDjU#4LNH<#Kb;U?9Y`BD):5-f>CTF+:<D%mIVO"!"2CWHD_=Xo7(*(j>;QZOp`UPSft?RB]9j9E%7U'%H\#Dg9@EqoGbaUe(Iq#;TQo5PY^\oGVgJn#+k,!j`EkS97Is13qZu21RJn!Cd-b4]mX\#3iEO3gY]h,A#PhMHt]B4pPB\AXk%]@(,N#.sG4a4sJuCd!QnB[J9`mNj`'k9bqDcXTAr:W'RoHo`ZtcNeHo/k;.!:?^b#lR%='#=HYWjN"h]f]28pa3+h8Ygs2X^=o7T%%][8/&g18G!P&uNkL%CF='1E^NlcNG6IR6]nWM]f=cTOh9NsCsMZHtTTd1[/>*7Ku9U94p-)3=XP[j_u2p7%q?9R.31G%NdO13IE%)ec7l>A/a#1tCV<1rF!1FV8hpV.td8D!+@kDEP;#3Im3C#k9'"H5$af(_C]2EGG(^\8ijWKe[&]`AT$POQ+hlKbo%JVME%?Ne]8Y%q^bt@O.B'k+9?CV\EQ:(QU2a'm1b3o4n3h*qlk%r%XlHCM\nNq)?`7kb16qKnN_D15:Lal*)!$<_h##q1^HLB.Ek1g:`0'"F5:iA%`"\[a:>'`"ZGOc`=e98Bn9E_e%>%AF5,ZS"<Os=XT4.WKnp*J!WT8[i]uLmagNd&oq"+]8.Lq`,B9o,L5KE"Kad._!qG8R*>dQaq%4X3AH%,mALelC>Q.;Wft-$ru4)6cjpe6$;b0!aO.%[6GfPKs+Qe]J7nnl\HhkaK]n,t1p;pP'/*NgB5u=mlEU_U@;SSYL[]$!Z2c%?MJ"0>hN;]q[esp17+m@h#"Xi7rI@\*F*HrH.VIh<K5Y>h4G/R[9D:e9:L'CVtTk!g8.e^S#V`c_W;fL@WtjeH`#%jlqQ0$VR&)%%ICZ^8X!4LJglkB4$8(_eJ__/KT%u*[H"SK_9D8^7UPSe+jM2P4dLP%TA+rCX+TXZ^f2\!;ZZIe)F]JQ8XCe/p7;<I6;4JtARRCkL%;*HBuUD+`N#Yu"qIq\>ui'''/K1@pk2Yc?WSf\k51q8#EWbr+'B7#*R#(%M^NoLJpLKZ.ss*-E/g=qIi;[;rrLdfsn<jY7SZ,HrT%Rl3rt3;IY:o\a"[gK+5/.n)U7VPq+X%i^+&qXH(OU/a6/.`:d)6]mZRY2cQP`E=f>,$H!n=Y7Tnp>[Y"!L<Ukas)pfIB:q;<7JMK%fG*&h%q=foV6'2\V+'\2YUUHa]+!f^QdMqkq(?9jN++@d\")&j:0f6I,BW(1jtI]/krIb0e0/.9lCq^nN<TIuc'r_n?H%/-3F?&5%M@ZhmU.$7J[+9'A??%a7Y[-SS`-&dlD,qC\Wg3=YF`1=H>HNZ:kf)$%e]Rd><o1'h3fdT+0P=05'VDA@`u6uCXdN\dQQ&XBeHidC%4=fFf\jhitV6+:\`n@hj/D3(bT"21C7HmuR]%3+onsO>Eo4lVP=r9O51MG[cP3jfSXefK:b>MSGcR:8t(G`[[Bs_XqQ$AUTJQ+?S%cokl4BdiA<9$&X%L7'Mo9XDu#)ecP1ZthWQ9f6I_8JaWn9D9Db.<?J5;>8`lq$Hq@P>QAfDB.A^eV_&Ld\!bc1g+sEfNM(f39+PW%eq_UgLgkJLk/hARHa(dXWRmRd@4-jqJ(:[aK6Noj1Jh,+KsJA[I(",4HoWV4pDjENU9('ldLQE3(^@3*$@n9^p4E@f&:iG+,NVeC%8?"WKSt5i\B88^^qpF)XT)NgTpC8*u?;-!dHQnqR:G74RB?NlTD*G7b8]J@;a?Ds@Z"iYtNCSZb=.MR2cYa.?^+0_4<.ee>'rNrJ%*8$(C]398J,9P2j(blO1*ZEhF_4<MoXt8!1ZBq@(ob<'!bt0mr`rN*9'4S_M+J%4)A+XT^Zo07IBe#BO'XZEAFJ(.TmFl(q*F7]h%N2)$95W"3V]AcLd%U/<+d>nR.miQVQ55gji2i+ork*RspO3J:4h%O&Tq5o*"52/tV/AC<;*Yg'2nlZ^@FM(\050o!`WoA\(cH"ef%aNcS-6i*%"#"RK:3&n-Wn<cLcBRDM.F'1hRE3cXQiXcU#CAm,5,0+8DE\@Ch'>lU(DpPMqACREV,;F71^>OV1S`tle</>UP*%-rK%(e%`dFq(1Z1n%tgc-hn^>&r6OK2NF#Ta][pB8Qo2D+SNR4`57,-;N%)*MhD64\2>]A#+,:heb9c]1mq;@H"i!Son3PZL,?94<Q\D%Bg]p^8j0"t/4YBlFK5$[SZD(J3mF/+4CL0>\+5C)P"t0r:Z\RR0!S_0f,]HKXes`<>?_Q\9!b=Gg83Ioo2Be/BND&kh1J<L&]$S2%j_UdhWY.HW(3`qCH'L0sG0fE=A9!G[b)qhS4U,m=5BTHL<AS[FRusf/Q1L,NAG(>g)>TNm(c\^%Xl:&k\@6l3JQHhs;QVoK=-:hP%Up&45P5\##*T\r4p5;%C-?%jpY0K\?/2X5R#uRSH+]IQQ].9CQrChb**fjd,<ckigg2Od:/-:,V#p<rn_LoU/29reRk>:Kal'R'q%DI?a4ai\@uXjRm35P_ii/X!Fp]:CR7lh/QjBg#In/MeW1X:SUfEYK78iTLB78``m%D@2cuEpI3c:f]&0YQt:nmYs2qG5471qKgB0%[\,Ya''U>sG%.9\^VC(H)NiPPL31T#[`=[5,^!ScS?D*G>3%KFq7QLnM/cBMQHtNe%S%`cI#"D<;nVh#E)ihX6i?;\>%22X8HLOu%QcZg0:AVPd1MFB&a_Po$IE$q;eXG647NP')-)Y[EL.?nJDDGCV1`W\S*cGc]mE*bIT>(2$U=*-=I9(TA.X$'^dre#**D`TgOOa+)%j8el0@?G:R9"dn)gc[==9rudXMMP%d=2!@E9J>)</3/HNF#N+sp>T=uQ(18<XCublQ01S3k2b]^ZdSRL0;#)_[to0>kbODZVX_6$%ELpcBdc>dQPOHa+TDIt'!\)TK%%jQa+.hj?T<4!haH+DTQ'-Bi6aYCr_qs(W[co!$om*C"HkFo%s'^VZTgLVjh$LYr)dYIbb&B>Q%0'=sj"p4-lVD2<t@RoREC./3AFst^TSDdtjfjSDfq.:`-7ebc*pAoE/op>J:_M)#"+QH)'frB^4;\ue[:0f#MOnd$R,c8#1@BC`e%@8Su6!Mn]R_;6d/`-6GuWD_fj8;X^/XN0@YJ"!GtQr+9bLO4+RpZN[dd669[HalT?E0'GG*o4^s\qbWS&,5:JZND69dG7^t)0cYc%kWU&'%eo19##m_?UO0L@pMc2]i?$gm4h<;L_2Wd8B"-W0I!2:$_`bSdHZTemkk6S;LO4+RpZN[dd669[qf;/Q[=e2VfQ^+U8q4Lj%o<J/Fi";q\2b6^U)>7pK]0[*cB/Pe8B.1r!RA(g8'O\1"-O8!dq"kj>jWjap.E4=(6I`]67@WjK(.Y(ZSs*<5'."#PFZPd@iHHIQ%FbQMU*3+;hl8#$7Zr$L<m'"&mW`i$9HX'kr]A5:0]&QFCa8#+(]Bbd279(Q7>.U(X'ZIrQ;m"2ZZiYGl@YpUAU4YGU#gCE"q=H@R%$#qre0k659l"3A??B%$p?Q=tCeZq83%d%U)Zd)cX`&Xsn&e?%Nmbq,3S8-:`Y$F0S+NS<IW(*Vql68Vg:XUC3N!e)J&K+&k<<T*L%cBUgDW![b"1AU..J2k!'V9K&BWZonN0E:KgEc$^:BBreSX#/Z*2M!abP@6QI=C^uREO]1q7')7,=;Sm&\V>-GFC?i:E-6D6[CjPk%-^?9V?kfF_e4YFYAoc]*o&W?9CQRVEjI6k1T8uOajV$ZLguHP,RT)+g!W\lt8jst668I+m/#8eKfk6+V%>[0t$E<3!Q./a.4;t"s%eQSARq'N\s\W46XMcF7eXlWgZAZ;RPoXH3YF]&[k4l+kHQESY?F2:\\jHYeKnT`/hPoMV'!`^`sTQ-<]0*shm7`hRSiKhHS%e<Rl%EmJFS)+L035jmmo@T^]7?0iFARB%XUVp"j-$kcK3:\<nG:c3&_*%r>7OG&A,T]*gDl]\CCdA;ID<DWHO*KYaH\N]nHOjPA9PbVYa%GRZtjUI0S@eOgEuLl@;>S17R1r%\m1n[EFR>7*hMid5cm$a9"B^n\i@2<%?<9%"S#i/A:^edF454kiP;WJ6F#X>pTl/>r,`7b-0%%II-F_r<TL.<'QN7C91d5j0g(fe]L:hKp:)E<+<ckPWj&0Q";siM`N(.-+)0i/L7/lrmN-h0ISB(Tdrk/V5?VHlXn'5:gTH(^-A=4%g$[t56Xe`IK?*t4d.ZpLe`r5<@>e'DX3&L/!mubqUbR>IARG(>01BaQ@c584BiYY36areM./ZZhg(#H,DdsE&1[5%ueTe?X)2oNb%&r(Q?ns5<cN$WmbC;uO+3&c2S6=76/@o)H\"B[R^Q;2XI0*2MS(P27_!p_/<Xbnon_Dg^!UBJ[#o:@=Ok*&RuekG$Ap0qb+di(6J%)P('mfV0bnK_-7,T%W[5V%6cBJsE->k`BlCXgfhk8L=i:V<)=K:p!jf;AS,rfI)@qXK'Q3hGm4^EM;tb="BU43%]2XjSfc25/Z)W%h5[fkrFM7JS/9Lkk;hck<Vk(QjLRnccR.N0OoSJBX'(RfL=)_f;ThnnOeX1cGJoZ95gg7]X5odWB7=+Kbp\9cc;[]ABTg<DS%Nto%C%7'b&$*Vh<bM<T5;k[D4gca#G?"@;PkdE(rpJqLcd-FP_`>T7oO7.3%\&1?Q*EbnN/?;],-<al\W-r%*DF2Yrcn#MM-2bB4YNEr%>PhA%^f<C#7m6)HPVU$8jU:#9LNM`HnSKC0"[^9J+igZpq1eNObTh)D@4?=[Pp,=F,XeA$@1j1T,Z-f@#K-WV'J`O*3)IL3c_R5,%13eDf-R:[-_LiE)=58T0kVUrB@rK7kFcsLcoPN5?4:^d1_`PI2Sgq_9*r#6$;3Y^].BUG`.dKVUF/UH,i#PG?Q4g&H*C6MH^$uYK%`MZNm2q#9ZGJujI3TaORDgs,cDm/7C3cJb[R49c:O_+*i9Vr$R:rbt&AogGH"lh>Iiu"@]O8L!f'DU"&HK>&B^-@0$AOuG6<k+#a%c1Hhg:GX8Y@OE/(:/?fmP'7qo:Z*Tm'\*dg0"cBW+,Y"VienFE5WkTBUiabI_teApG8^$YL4)9EUd'T`0Ag5&'EHtt!Nu^Eq1jUu%;\1qIAN./^a?s7,Ga3_?1@rg>jo271T'.-;rBg\1S6gDm5?mVah[omM$Jr4UO0:&"=j&8i]#%i'bZ-14_5`S%ZY=/W(gLX38p\"u%;\]1b<:p)geC2fV(S,[aVpBIJY#3tOeA,o_F[icmYA_%!gK_6(J5f=W`Ls=Wp?FAtl/MT[LR<XP_Q&,`>2;'DENQC'DOXh%A=N)U%ODP&lV9a.^BU!=f2a*j!$2ddnhTrKVP4B"N^3^g@MMmXu't9P`h*XN9F%)s`F\+(64k1["p@tO(b\Am%cu:83drle]H$&N>?=_N)%%ThKa%)"J>h4N`Q1[dF^H)gYs;<J8!-VDJ>hV,jA\bWUUodT.1LZj&l-E13p6JH[#odR(T+sB8&A8a<UeQT)2K\`pTg$C.q(5`<i%>HQieL1H5jb@UiU7$ZA+DHC`sjT3/dDf9R.^Uq.h^V'C<eZ49EQ![MJI_]kYIImF5rVbaD"t8%"rSlfQTLfOm.b0;^cmu9m`)=[3%;SZQ&`_@G-*S1cjoFRFO@eTEfhr::.#<r,G!.UQ,aZ#F`r3(G;2T#Ln"8pbdo==pAZ]d1qp#":'EojXhp(2<ZhtA'kR/@B-p#K3L%h,l/*<.;/S99i;2U3=)Ce<ZiE\N!`)b$`=^;bqk!rV0eHJ,@!c^XuI$VJR7R^)e_FI/aWS[;O,e/1'r'/q=9?\IC$3baBn8"&'C9%\krTU1USC5,mZ</JpIuD3o'hq)kr&cD!884r+UC)Z("3W<NTaU[(Q1CU0",M$EIBu#TL>t#Q#!#>n.!G%Gk>d^:J,f\jDeCgSHo/%b"m<FGt@]>oOhp'n$Xa^Z3.-#0KH;+[b.<lob+@tQ?&!>6=5L^'UstOWWP):'@F6P_W.Fo75/C+bt:&P-K7Z&H&QrK5W\IX\k1qZ%;1(Bf(VkVU_2=RO-ei5?qR=B&"H<jSFgAb-f.0m>q<\946o8pD'*V&@'rqOM<[$oCNXqfkN[;'rDUi_X^n/tVHJ![0]I+oE\P@pa%-8;1HESK[Y=8FVfPuuZ'Ac+8UB\(p]"XkTQ^)<$Q2dMqC%$Y()pYW-r=2Ac&k<&bi:'G"s;b,&NM;$s)J>=b!g[:6$H,mdF)X9e9%jrJ(FhZeEZ:V:h@L*KCh8R(40%[CZJa??\UBY(nG^o6k0W`^C(BpT(-[-K9GFK`"sY`!\i6SR=JOn[nYD2U)U!na?h'c>+WpUkY.%VLUj#=@p27-KB(1!nMPH7lF>WNW\>d;'B^!1KA:1K0tuqS"^`d_\q[8%'^e4&<dB8Rgap<`:b,()7@+D\eLPP_O8/_n-/VOPdcTA%"*bq:<2,:E;E8_a'.gB?V-l?_-Elh)_*SXrDF.JQV2A""m6LteI40Z+lLZ6>Og5Wnn**O(&oHi2<"T`=P]mCYL6-4bWt+Nb+X/p7%9SY$F*)4(Da:K!c%*!_u1T_lJN?,3:(F.Njg_P]L+EZ#NX-neHTiKrk@#^R40(;tcL*93H9cKSeK'#FKd&jsUdkBtS(l@[IU"-n1%JZCK/%pMMo*^79<[L`sN8QlDc848)nhn+JqF^?pN5K*ZuFq?P[HnE%3a.uAB]a:m^M8:rijUN_`bn><p6_I/:cFYRJ8Kp3$=/uJ5%-nZ%H#,JC7oWD`O`In[Um9tQSPdm2[TTC`dLgA;&8M9kD6,B?]DaHsI#$i%L+XXaVEVA/Q?pVUZY,bu;d:$`PfFX\>Dq)M::^Rdb%3G]57,]*)UOGjO#!-_`Aq+4kl3ISV!;C$W;UpGfm%?]K4!f!E`)Db!+3WtYXB*7PCHi@':O>5eVjt3&O*b>fNoZcajiT#9!-Wt/K%s0AXP8+?!9^K(m7F=\ELp5NbAGbos*!58L01+dnEGWEc$JA&g)a.WX.otW6h=u?ms2R3CS)S(^\q[O(o-u^B4DWTTeQB#M-8-P,D%r3H5m69bN1$=;51-%]R9)3!6oLAFV(pF^oGAeMn?pdH-Rj44696`C?7a>Opga=Et%e8>Om0aO03SDRp@a;OV.f=9<:Qb'86j1#9>%r\OYNAS//J(TG$h>K^BHbsf4%d7XnNJX$nq[#S@6)WV2+>#ZdRk[B\#\H-1KO/#.3Q!\,Ako+%*?k;DL[0@DYO[7%>>mhLO9+:O!%&HK8b>62T3)48t\qE=$,^kQFG)r#DT4HWBBm(Jt%V=cYdm>j44(rJ.aDC8p6J^HtR9;J&ViRdlS08>316YthXD4DOc4Y^3GU%^:o%\!k,]_k$<G1s1O-6pk6t6)&-G^C*k&![H$"?u:HldkpR]QNV2cQ*OGF<eoHqd*aD,WJfDZ#-grs=f82'HKn^<@*a>CWM;ef$jshY%'<jBSP]b\OO-I#LF<`GQErG4]UIh^K`3M)G[GZJ;gd$LX13jP=%;J-OT+E\[V&3<]ks2AP!-ssYWbH]F2F&g.fcNE)p4/FD=p/VV%g>Zc[#_JGBH.)BdE%O-PjQM?AC>VY:+>BR*hRKda/CuiM##oXg<O.WGT^eHr/UOXcmF>Cr$GMufm8"Z>g#/_B.cHY0"K:&(5S+"L%f!<,#Am6o6WGUXT"!A;C@9EeL^oBeL&:pX.9^+)P!RW`/>K';RDc7=ODMg^k0Ii16DSo*T:ht[,$mRYg$3I3>Mi\\>)qj0cN<:rD%nS0SGg6UT,!&nH&UNI#sG&!Q[b(Ye/)R-H?[Bti]#[Z7RqH@dDL$<91'U7DS?l*>XX>>G5_6q"di!qZM;n5c*+(,;c9WTK"/2fg\%2%A'@!c2%Hg;X27);-$"dma<I,;6?Z5UJPYPYLf#ksgJH>:3m['7D`e'nJem.+eQZO=5B&clI)B1;u)m-:VWaU6sdVT`ZVI+U3'*%YQ*V$C*LpLLcDeY@t5a7"jG]A#S;h;_#rZPgKJe?0ZX<+F+>#H7uNu1<d5\tD]TdJdmaDY+@QrhLgqR#:OCRB5TH^dC`"N]fsemX%/<F<+HTTLk6l,"e)?Zo="K/*d;4^62oK4C.BLjson^'Us>MLjPX=XsAl#pmP[CH0g(">X3>7W@p9i2[V%^8d;_@;XW`!-cXHYEJ*%<9tH8/hJJ`>h[Z0G:kU&6j9;^/ejcrL^MT4h]U+-)+Wiq!b!)Ym5cBBb`]Y4iX2u*`B1m@lqU?B!mOF_]o-H]1Qcs9#&usJY_Lal%fYl:,6m*$pTD:>9f#P<)lB9(DAG!O*64MY<8Sg<'boH!sPOZh4lp-Amo9t$&TH;WRlKpGF23Fd;D40Aa.XjUF:]s8RZZO>E0o9;5%"?EQ'/;RLQaOV(C7R.2@Q=ndhbn(T#aHB4?3.kcE9=+\"??*S/qHmdMFn"0SgU&M_(qdJMJ1`*m8SAol]of;A.b_9A$nAt)0hUVP%!HXDLB4qiQ;@D>2`8EX7ctK/g4M<7L"[\V]7BKW0^lV<_ho<87kqc$cX.tON"<*=40Z:=YlTV^J=@3K5JQ<(qosL&c<FT"VA1J+"%>/_\2e>O!4K(,=]8c&QMTi)!<$RTP5<LUVN+$^3"!Do+\:$ZAC2rr10Y[NF/V7CCo&p&\)MG$Q%T[S0U<5U@F^o2MS!A4(HdE"U=%&0H.g>NbRO@K`f`,=s8UkD^2K&HRb#gpXdr<$e'_U1KUp!e,GY!<.s1@VVQ5"hM-/3a;0C0lj`Iaa6Ce*^p>bj:G-eJ;0mKS9gg:%(M8qt4u?HO\.NF9g9c\RfZ'nb,W26Y!pE4.6!sf58At>4<\4E+PP#!fVhsaqQ;t5!0\C2.e0q[]GH3$I*_B>b0MuX\PUd#*CP1)@%f%!*6,AK$]a>S.?aeZ,>M8[KY<F*e09WORtg/(FJi)j5#Xg#2J$6*"$:^:0M=r$3/"1:cMi)tqr?mTnNL:%Ss8M=kILr>I^.T(>b%#&oQu>unCrnE\"l5q8U0>?VD(QJ-B^(,8Qj7Ml-\"L^9cFT;l6JYnS+JGQpjC61!*Q[[m]&l<kAs(G:r+@uHjZ;OTc2['Q*%.ToZ%5*lOsPW9=X(TNg#4>@\<kQG1\`"=^n;%Uq&,i48@@NdVEiX,Z;kf,A4RWU7`M_-3f%!cmLK[`6i!Qc-W7Js")Ydplt/<I-2MB$"-%N::`N8/k',D.NWLbL1Zdfk/ngm:$bYHnlbqL1QN5D=KlN9/9(C$fd/HpPcple`A,C+:;P/`l<;I^c"ak)OW[p)t>`j1%s$\CBP#&%/%XRRl?`Y+"&4mAAnm?X'd-Tk<>&,m@S[mT21U9l,2Hk:&eq`MT'TXYb/t%@NIH*T!Ze[c68juL!LO<Ueqjrqi'bV[]Ku.($TZdq%!#38k/d)-JG`+fuSR`1-+#:jC6(9-h(5.H[(s\=-7Y>AF;0!F_+u,$Eiu\TPG)Cl)G>*q2$&*!"KQ.Y3S2RO,U`X#?am?s#)(;o+%(sSR'A7jsD.(/549;3`Ll=AU(L.Q@fVk"Z-5"kjV'eDVn.[Mti19[iZ;k9;,-8]ht</RK`2%4<Ue1#6;O@O8!lGh8\7A(9%--dV8%I6q%H_PH37`Kq(QJK`C6;)aK#/2j.1.51QH,Bp2P)$Q:naLOR6:"gQ3$^h1P3Z0GEYS*-3K"XiZ!t%2,Dc-'>SW(KBO4Qh06G"2t%C8Cic[/d=@Z8S@AW]"&uaYEk-VKKbiRTbQRRVe0:\?+:oXY;Xu*CDlYo^J0r8qRd/<)nl-#&P<2Z9[Su^rBf3LLa8!H,-:/BVi#1%EWZk`I9T6u"Dj7F<<pph%IDN]`n@1_qL,<5fI2=pr>t,qk!?=Jc_)+#oM6cc(4\]O(U+Rj"+[/_LqlF4!<tVUP[c@YLS?h5jJZ&Y%(Q'LVoakf#9bt8_!CN#^A(1K9:d\BPa9Nl[%O`lc[ReT7IDNp5UL[.d\MA$8>*_JO6CNc=0A09=[Tjs3&Q."oTp[6%%Dc1jDNZjY%^sN@K0e\*A-+P_5>?$K6S'he,Q6&u=n(!NM?G$\>-KaUs[KG[Z7T`FkQl9YWfRdM#'PA5F4^/;H89X.s,PO:N/o2/oUBG`li5>Vj%cG74<rJfu>euLrnLas\&7C/_-R3ZZ'o`3f;J#gHI:L?lrrpQCRdAM50o=![VguN.-:^jh)1`_Y;BRce0R@W@.:-_NO5h[f9X^AUS%Kg,Zm08%T^i$^;3a<&Mo<e,692qrQr@hT3K%C?OBkcBWs6a.l(a.Nrr?lY.]#RhDIh!GoBoH]n>=OS\&;3:8QL_mH3YXQ,]q"feO%:^7l7j3kalmMC]B;1+D;E%&7?:_TCqZ<G;76#D-hXf/$md;MN_M_P\E[Z-HUg/oD#h(UC7_aTrmM:(<b5h<'J5%-AM!FsMp(kJ,'%$kt&tNfpq-Sf>Ht)X]._^-YJL\ecQ0B6F8g)m?eZ;/hR]YEX,E#U-[8?nE$-Ff,M(=ssFA?ipL^[;uj\VkaNu9+,Rr/>1TTGV'AL%!Q#\M#=ME5eEU4pU86&L4:0C=*.a4s;[79UV1BJ]8.E?UVjTh6)*Q5$j2fLO(n-mJ/2T9134a<Ub=`oTDU^:hETjcm.,bdmg;=5Q%!G2`K7eI"`dC[X:6ZORT%G;8*aTM:[+ou9u)d+E8V#_FNF(d#hL&-[_ch.rlZ"-:"oW0di.]O!l7?IAAP!u%[M'jFoDe]7]PgTQ"%X<K?O^qcms+qPH5dlO(9=:K-JA+n=`W1\BHd!qhdFeMB$7.SQsjk3*\94g7h\uAut8CV!R9=la+;S.MRA!E=V^LW7]^t-ZV=P#I1%h:BYrDVM`om<X_V+Q@rloE:+r"DT+fVuVM8f33?C,7=h)mb?#(*"=EDdKo')"9p'p$q+S@Fb$D2JRK@8GHLGaJ4Wi^/S>3&9jUE/%j)#K,#?cj`dFN.7m>VR,N&4^YMouZJb6u]7''Z@(NJj!N&X^"m)+W]35VGK<g7eVCA]^[>'4I$L&1kg56m,ea`GZ*hpCRg%QGK/s%##G&fN7)PCoTr%gPXZl72.3DAZunKn56,/=!5Sa]p5LAeP@n)<^k6O["(i__1kPK@"0YTomK$X8O;`qK=k!Gk6m3,LCZf5;'@7TL%+uW-rqqO8D!e;to10qg5&8&:CM\7QBE("h`20^Q#FHT3>!\p?E:u5k11P!oYEDi*a)h?KbDUT/f![%cO/^J3kjG:TP2+%5ffIX..%H'KOrM'*4qV#e(/bHs>cV'^pMaA1;S@N&2[dXGWY#=&js6d[8r^lt+N[g%[@#]+%d`.K*1&^00S)VOd@[u1C),_V-td!3W87MR@H%I$_!-FQ[88^8>T(0)*a>#AmZ+;?JXCKZDHdb<SI1RO#t9aFdf0-fi6^7KFpkB^%d@Ca:,OHbClXd1E#[;CE!!Muq:XT#rs6g=pl-%Kh@*2_nW,NFD8lIe0_DmMQ]CR%#G#$9?/a2Mb$r"[Hj!oU1A=Q]?6%J_#.Lt8Qa9tO[`,ZE$?@"WGUk3#PC%0Wr].R9IA-lSm"hh%-T!\pHNQ8(p3:R]_e!+h>+$9Ar31`AbMlt^"#U(Cdj2)Nqtl>gkVZskb9Jf7<^u(EEZ5!QU-$XY+gm6-=Vqlih/ZZQ$JL[S2$-(p%p;0n#-8c>lZJ7/;>3KgnRSZLOLg[e0JdsnKON-9,QC2`peBb5028g36;4SP;?5nf%;"fl(;AM&K8-?7"?/e%")^,KW:cu=rc57Ok%E`jAL(_G"_l!b83W#Ah0(o^0Q[M3B)>oG-W6o9EqaNWS-N$:qET,NM_">krd>G,C*K2!O$#a09[7L_+L";q3KkQ0TGLo)E$;6=r@%Q6B?`A1GaldQfL+2dj6Kk%Y;=O'E-EN=5h4?S(q:F!MQQD4C\._fTTF)l'a<>FNZe,MO*L8uI)iAj=Isi1l,m!h!+T=V7Y'TF@m>%G^iPl;?P>(c^;cf3)HP7op2F?"=h;8[1`:@Z_0Y&74S`J5q(_n0k,ccY]eFsm9FDABT]ko*^p_W$.W,n/Y</f_&/SC&Pb0C>Y/jV%l2dd?is&W$_cDC&TFh30UO:m<"*$!p7*?G[CRi=.eB96PH*F(P9RICF_F9:C>;#3"j.^Ap7XH0W)jdQ\_o1hkS2q6%]uJhZ74mHr%8.Cns?.d*%Sd]D'e8-?Z,9dr=5)-8i<-og:7ZgQ?C+"GWTY3;RgESUQPL8AZ9t#`E#]'X#Rm]9A=%$W3h8cl1g].`BBMu7(&OWn.%.tV!_EW\@`'k@EoMEH_SZ%7RG8N8ID2S1Mu?m-G'U$#\_JL+$[cn3o"J0l-QLYt$G'a/=**k!E#cQH_=jX^tiVEL,R;1p.$aZBf[%L@0:/e6jj18qnHZe<j:5#!rrBK:'-PM9+lelkkcm/S]JIN6l;*!B]fWCsl'nH#A^t-KJb`!s5#bUD7Bp@+<aP30IMJ3g7stQ3QoO%MjQmA=OE!MH4r"e(fMl^.(Y`'K=8E-77]dQJ<_^(fVE!'#VEt;Ec(qJV'T&3B`LP%l%/!R[UL^9FranG-9EqO@AirfQqBJD6pRZ(%ElE\-"S=u67XH<C#]=E\"N>`3Tc:53h?8cq2J,s'j)HU\TmcRb&J,E>9I(Kgd6oN3NGhL*!;;s?5b-YT0fn=:U-kE#0q'E[$*);m%4W\GjA`M`q-HJ;&(tiDQeJXY;[m;=0'M8/@;_A3%(\\:0F<N"]fn9e!!XZE!b+(1G?J32s8m61;$cZp:VAeM/X\>#i-8c`Jm`Z:L%3RQ=+#jI09-in*:'J5pBNXaX0ia0b;=<P@JaJ<<E'h3p-fsI/I+ulCW"sSN)5rDdVNn$RVmaX]ePqX\GUfu-dU32Z(D&n[<3T=#C%#9ok]5fqd`Q&qS2&_JSE3b_o&%7ag#oEO]BdK<1J,=q:"\(W*ZaE.ZBi#3d(XiOc2SFg8ILhRe6(h4bHGfE9I!,AcMi*`quj9Vo2%g30hd&88HCJ5$VVPHN,CTP\Ed3q)<E81Vt&*0TA#m2?+Lh?`LY><N%?/:#LF/_#:am&6>_>!i\B1+LCd(<o7qK<,/X[([oE\e./]%2$LUTSHlqgdE.j-$6)bKq>uqXh-O5uQa&Q6T-.DAp*jK]41DV2pQl(\]9@EElm[koqp6f)8%b.JZ,n_pSX<_nIq<Y0&f0n$i`Cl"%Ze0o;+\f,#q1lPeX0m'/]d*GY.n1hI7Ap6Ff,_q!p`T$?[7RHZfA'7P/ci(nRg9cN?s*$?*"l<GSn2OGAn#G4>=(g;NNFl..CU4s%9E>M&#UJY"#\[s<eY.blfRQa;+J`m46EIM)cF.guLprC<<u/n^2TnA%VG=Fh%P$"1M2>&r&ciX^NkCM3Udb,r&ku"'4%*9Bp`MDM%H'-AtE9=^dfp3+\GGhY[_h"JS]I\6290e&<gSRs<#fsHj.*na;3nQ_b&4CRE?oA6,`(0sLA+Y`8,*O4\c0-/L%kLir92*:1)'S5j%Q=6I!SQ-060NctC6lBajMjk0l,W/\2b%Rjo=YFBE5Zn9R>eP!-/fQ.F(kX'Aa@I9WkaJ;a,]OC26Far8AV1id6<7u@-rc:oNtt-f%EC*=H]EU+=LROtTSSM))Ph!p>&;$*n@^u^LCh/#oE,,SgR6Gp6W<%]]f.u*3b_%Y>7uRJ"c*hI6IP<<UMaS"^iIPI/`0.6hIE3(X%5aUg>*"!\%Xf`<F,KVm9j:H*4@$arQ+hQ1O[(-`OS":DN.;AsA__#Vm8Uk_(N4,+r9diTWVLUp;LslM]/'M.._U'_`)_pW1>dfdB%3a,U87Geo`C\!'cdDROE.u^U(#`cR,#hXf@N(G;+2'h"UGF^Iq^^T;t!k(#1#3<:Q5Tqg4Nrpp[8RQgIFuP#d'G\Ik5[PmRWea_$%0^3>7b>8:S)3c`AR&@C$+=6#0`e-?e@\[^@)Xpn?269s_1`51"Bd4b^Q9F[F,DRkP(.GQH+a^\7/d,S%:9hmLX]U!?5,/<%7AA6J%A0&@.iIW7p1]g$)>21RV!'3#,/+H>-dR)k/ps/Y'`4KS>)7Adt7Kbaf8aSQYc=$gWBEb!P:Mla,?$SAJ"1f3R;60dMRi,A9+G&+o%FP_bLQ9@lc\IiR_Gm(AQ":(8?JIK2o(8!i[UsLeL8p*gP6t\tC9A4Y,!GIZ(j%*7.JWqtkPs+oF-?D&jGED*0Q2:[)#1kc426JQT%Y2a$;!*8*P/2epe2VEs%9DU7Fm'@E`g[6)#+Tg[<S]U3OjIg"OL@'j7M#GF09e,R&2#Ya%=2uQZ@_<4DQ67^KdJPia@7?4eNI[ga%37L@B=G[/'87&U8Pg8qX:Z[Ssn8,e2VP"mBW(F9@qHTl28K1V8AgiMV$/)QG0ITeER[IXOJ4n$:OaeodMil&d<olp]Ak4+>N;XKg%ip5*EZmi_`G[O>Z+Ss[?<,YSqO]SfKh)42C6@@$.cqnnF#Ss,g+o`0@=sA?'_D'X\%3NoP@!6ldN)'mn4.-rTY^p6j<GiqN_;b.M%h$#j<WtQY=qXF\LFWf^p:-t&:ge\F']:6dQG]g(nh(Dj3*M+#_+fJt!P1/D)_O!je(cd`k;l[;U^93b-&:b,fQ7[WUXtY1lSmaa,%@3h'\)2YYT:rWLrZMYJ]$6mOs@;.$F#G<t68:YM]CY9,OiU'4^NpA$W%9lsM7Ac<QcK6aG,lq"JAW#c;JWF3@MZFJnP\ho&-apUd%_L$f@A#-2Z"uqh-FHns2%`:(n/Q,0*7ppXEG0D(28bcc4Q7W6FQ!,KnA&U/EWO`3;i":Uq0X95d?NN3!rLqI\qns,Fk-ZS[(]`S6%Ds!DCVKPZa`\eQ#EWU1g2W._KL1)O`THj8?]?)VQ-=aa,KBogk6;9opLJGuKhNg7CM-G79,,,(ITl<18)/<1T<%>4:b:p14W5;nm%c*@\,e0YX+/T_Z2b/\_jSt+tI3ZXH1[^;M-22OBpT_GbUD!$`]2(taTlap3;eZ_p-iK6NH7D^4!%NA,3hB4k<Es_*rjIjC[6]cL0%'$K>*C`s/iJjTVHA]-q">Tl@*=D?"WQZ/^6Et8V[]bT_E_cZ,uhP*G+^`6r&eOC2.Y[n4a,HdC1)l'dmQC&KtSrbhh`FcH<_kYN!%m`6Q.!":;1X$CZ[2G0\>/[JqLOt;cS\D/*sGt?+LomO+Q'eAE8a9e)H0*4LL=Y!=G1mWL^+ZKn7'7ul2Wh2n@3t1]mM;jP,NR6m&%Q/n9oZPb]XYW[r@;qsVrPf*b=V;gtXbh;2jH.*htYSWp2$Y_kA0agGGP$?1S?4I1XDOG$]87#RQS&>Fa'OY&iU8D&>nQ!]601T4j%R*DV/&IXd4&gE<#,JA+i:t]A1^_l>^^M,%Gkj<8O6%sE!a0CcN^g*l]<2q%!bSE])L?p&S0dK"0LZGXX5sg*r^7aRnh?XeTd$"`N%KgI&'*]D2*,=Q5?1BuHJ,>65#Q6Vd7@j=DsWFtQd<oeo,Fn2_U<5#r&K6&8Ib&+^n=GZ0AfHsf]7836M)9Jti'Y3I*5jn2^I!lY8%abAX>`Lmn3QDmO!q^[6ofV<!To'@d?7RL'sI)of<ae0c042/ob6OikL]cn7>m=>so%cD0QOXO5U4KGdn&=@W6%T!219,aSpAZq8R%T(tMNdG#k/WfdMp_(,$tnkT"8NlIEu#@KSA4"a+I^7gdo*@gMXiBR]ce\\SgN=kcNap;ep79Hhja(#lMRuF9`Qq1Y/MVu_23]S(j%:"(CS<@hl0$pEPhB[u2?`huXPN\\IXH&5!*FTm<>V`gZDO9Sf$/-<W".`3+U"Gf;f@18P6GssMZ?sUs%EO8ih0e7LM1s&QK0L6Ht%k0kV?l%s's0I^(t6?q"SP&?WgV#VLAU[fUjbi^id,eJl6l"h7m.H+n>c&=\u5mT<Dh;/`&nYY5+fa8&qA8``)<JWo<&sMq"5BS`>%U!=cm0l2A,a:QR5.4gr4[7"Xr?qBFM\s=D)jO$uG6FaKgoS>Mf.p9_6fhO]7@_\*!.P6Yn(4\Xr+g'/J.ikj^F0X]ARj*)6;&FBW%VGfT+1'1D3e2H8/Ys+e&LD5R.D%WNVPmj[RL-5hkp$Cf0/a_)K=9ZL-@#Z*r=Q$J\H:!,%F29llOFW=Q(domU1nFhG1!+6P_"t0L%6IEZT,]+=`AWk;dOs"7>U#?P54AMIV7p[oqMl/=/9JUO(4B7f^d:0`*U*'e=E^]@6K3?BTK90,Tpp.E.&_P79U8:/EblOhF-o@Qs%Vf&b1L*_h4V8n5jdXZ<m0#]FM+&B_2O\;SV6Af]@+lq(%S9NuLd_LH&T1+=!_@:"BG`]FMB#od;8VGBr0VFJ3hM)dl3b_Y'(4&/Q%Ohf,;_3)eZC.bn$K=_Eqo.<<c$"]7/bGd(c!pa=FYFLrY3=Z.X28sC4<^m9s:cb?pLWm!U']gef\T(BnR^3_EX#Z#RN"O:^!7U0L%hT]90S45N"&U/u&F$-]O%HIe_>3KB+^JKmaVWiu898XGWU_QN)&p3BW=;/Ss%A3KSk%+b*.M\2#ITW4<P^%4U0Qu)^#Y#q+WtCFV%mg.-R3DfDpHC55J7tQoqMUD8D(b-2g:ZN\Oaq;Yc17ujOq/dkc2Zk._lLY)&6&?CO+tL<!B?WIYR:)K#7gd^Z-1<71T.a^B4e<[\%?)'BphfGM9%Tonj8X"4IJTP'"[^'g],UX6SnuTfn.eg_8&h9II0C$:9."KEmd`U6/QVP7`qJ2O/Bk_duFE!D3&=Q]&'6^iq4XFL%%R&mOMQu%F)SPAYM"jdg5,[_C4co3;l,,;/d-6+][JJ@c5ZIME>40k"R^c%`rLsA"h_8SO(-4-h#r!S'%@(aR39%H%]Eck3iBGZ5B%3nG"Np*<qu#pPi!K0i;]b#qp"C5toBWiGDTC"G)Jq"!4B92XL7fPAR>DVfZu?$!`I?04Ie=Web*GD2+\1dfc5AlKaiBEfVu%1\?Y%.fbIFiCRcW-6=h07)SFf[]ap@g#L3>5[bpOqJnn63!9=XH5%>IF!r@uQX2#4+_VOjSWQ)'`DC6LQ;*g./k"0eXJ82;!\iJ&6pTTR%1#64fj%?"@B_#`8O3a[RS^*rQ;eOR4VJ$<S<SWo('k"kqOd:hh;"oocAJ13I9TBuO$>iN*5sG5)jViqVdIYI7-V0(r.6nuSQ"@$C%g&R>`C-M9]ln\XL/@f`>iA1\E,)W/R-qeXgH_Y-bfM.9\1mBhdChMs3[PX&.p`fhDBj?hncr46!(3+Hk>s.$b]7a[u`/##HB5F+u%,LJ1%[QIobXN*#HL;?'8HAhk08ikmO(dr%.:?IHUU]EJ[j2c:e`o&gu*\Vm1&a1*J6n?&rq4+ZB]M9;$_*T/H%1/ErN=r^FP7FV'%m,D[n.H"0touOQW1N!nS3KO8Oj;d37:C_rC>/p/k,u6HL`RFoY-QEGkpopMdH$EfZ9Nt-liZtl^68<e_&0Y'^I*VR]i*'a*AX+p(%rq%,-9u8NVF"tg.YWb)Kf!MHbXC@-8UBXsaR-kTp[r#S*)*;;4SG*o_W4il,X`m?#YRQFS4GOPK)`,kQ9K'4O#=Z:hHi4N"*_5L\%`3e*)01OHQ-tnjG>AbS&0k+NG.C,'Qd(VG!]n)*1'Z&dDd/.n2Hq;K7;$)MS'ZKI0&/4\D&?n&RiK2Dh":*U"/\AWRQbYf2Vq)aL%S<I6J:=,e-F@:"i^`+X:g]BDhm%+_Lk+('<G&Ls<7*cqUSWtW8V_A1C&F):[^gXiU,c=-%q2JG#0jtURYXf.k?5S-KK"sIFC7h.=%U#-I`?o1V!O<^Y?BJ4H4;[b`rmHM!8V?7>c>o[=+-Ymb+'!F'jf_-I/Q]]2,Qk1gi.4"W&GtpaPp#Sk0V?J0`MSQ*O&[7dpO$Q4C%hW>"VfiI.K3(1MV`rnEA&-;A@jR]K.>>Zmr:<k6;.G]O##BjiS<li5/g!g#BFa5Y.9g%6s'Es?fefc=hTbL&&\djt$/rL*M$tcD'%jP^fZY'luEM6*nOK[Q4!*`$Q4fc;dYr=tn#%>('HG^C0d6aI$E]Ab@W*^6Kc:^CZ/!%&YX-peX/fn7nT!k7/D%r)*h;o0mB=Ci-V%aN.CuN$LlS"26C!5`9#O-PG$%)@)VVd%nkoY*KZ1a]Sd%).UEpG@JFE+K-S9!<W(AY:GW>`8jJ+m):nV\Q4EOZRnA<*7d6&*%HuZ%KkmA.El7s/D">h;'K4k_0ho:go7T(86$-!s&8Z)fgZ\YKYcD=U;P"@+,Y%XbE7gqki]E7_6hIsEK%p@]-8>_R4?#b)15BGmS<07I%Pn%!I::t&1WZnZAL+/GtZ*bl"--r\IQ!,OKJP36e[6iiAM,Zi>)VqbmO[`^\#kgi5((G[Po?b6L8g6*X(<2!(iD`AgPip404)"&U%F13kA%^d;A_YfumAYQS4M42c<psDe\,+@l^jW8BL,`eWA.5nc2>?qMNe!Uf.;30;c'V<NS6XU64\&laL%HL?%0hNhZD9/DU#](fW%d&%?`T?aN.f4c`ER,B6-4G[.R2Zak#;hV=.-Jf0R?mj6ee-V]*,M:1.5dj!IF1G,qj`\uFKdofN,0T%)K:>=s.N0g$P(pJjN,&aZ%,;HcD"_b6;MrhMem,FkC`:0fAl*fAuH0Q7tAJ1=R4j1kZ>j=_J!d_QO@L!/f>VD_h,I`ms)8q6.,gT*l'bU1;n,;#r$o7<<`^Z:K%10>u^euC#e_&8N46C\$9Nfj79U9KOtZ\Z`mFP)4nZYUdkI_GA(LT;ik&fQFn\:En@n&NAnm!<@lr$6XNZ35`eJJ>+^ZRn2'9q_]a%nE4ll(`ns4rah]=jl4BJnT"'ca<^E/.I]:-puINES\fZIFl7)G&T1m`P1U/W5QZ)Qi9V)B;k051+N9u7PR203%-9cWCpoW*QGlF$%*a'4JhJrjGI<7'=lCnaF1#?S-@npFWJ4X-%kptbkZf+C!@M6IP9_bMM+lT'GfS*L3=(\pM@ab?n:VfG3712Je>b19tqk4pPF1HlT%j"9T#*(@_5HAI]M\-&qH@*_>8Y#q=X;p\AccqPVK377G"obu\-oRYI%`d:#%,R3j]mp$81a'7/(!nl;LVnpb'JRJ]54g7TDb.Nk\%=0>;2EmV:.UM(mf$auPrq446rW4NMehu)>h8g)^J0S\'cB\F)eQX;2WMlP7>Z>:FMg$7"Y0<1Z(>2n>V*$$_Opg?X9%'o`+;RCN_%lTd2OXWi&PRa'O@V`(DB9J/LmUPI2s\I>?64D<E1:'LJuc2u/GH#bZ.*)H.7n((#qfL;ucN-RRM+je=P4J1%-=JL:)9&G/`Ee@U'%DADD<B>a=k>CH\&;*@R\!Bd-2nR]E0Z_<3LN'=*e%(C<q,!gW>%+3WT,@Ya!).!?+o9U8d5;2,5%1HtD"D"`F+7e+Sph3tP*?BW_%<6@Y)k:a`Rd7:-Ul,k;I\3t>U\?UY\G75pKj[QYq)\pjt12E.d%3<-@5WQW9_$tL>'91@.]G5]5]Hno4%\&2l0;8nQ8W6#q;3,h%%"DFL%NKKtgGec/t,)pWI@o=G[c#?3G],i-"_aG`?Zn0D+<>uCW`!1unEP;p$#I%Snc4o3*ZFZS9O85l@>*heYW%>:8\J0+`jXuZt%ORd,mpf4[k-p$X%F0o?[G%at^@jj9O1I\`)7\N,\\mPUWLJ\gu%4;2C[$lQ:*b96;gY?NuY2q[RW+MGlZu)&&5Ti@.XH5DN'@sFN%)<trtmM&S0.p14H$IkFb!;@K6d1r[Ull=J"ERqo0'BWL#7e\7_BJ@o&irr!I*(u^4,#GS%1jh)a"Blq'1B/=EO(Pbf;aD^PgXP55%du>4"d>hjbp9g$Y"IOCh_CDph2uq1ga`h\m)])";@O`Bl&P;Z/,^(k9;Ui+@_rWRR.>Jo+<K+_,r4?@kSL"@fVUBHF-QJ#5&G+OF%mMOG6>6Yj4BM1A@!UNbE/`S+iX#9.G:^3Z##7Y\i<<nJ<OX,:5Q&Ma\J8NB$Kqi)2\ge3<`JdOP9Mm5id+!//:BX;0M`_6C?_ZXR%-8?QKMdTDTE+UOj(rhSj]!i$<ch1OBSJB$j=_f=k*A8uKqMGG5@0)*.2[Kp+_I*d444uE)Thh)Ai/EB8PMM)B0O_'SM<nj0N[eYi%h$+^"hf=r`Z";;49WM93/e0*YG$tf?j?k%*"A#s7i[FjGWl568Z8Och+[\/4BqTV0,`W>PB_?%QYsEsK/_Y,6.`&25A5aA="7tD#%4hCS[D(5H#<Me9CZSMkKlb]C:7X%h+!>*l,="eK(5/.MK-Kak+EaZm6op`K_N4b8$ej6B$(jmqS?3+qdOn>mYZf.kLIKq2c;8!b7%fT:r`%sXlRF3dBk$"kYIf:<ZkH.jU"?X_GDEt=RZ@aCcp_Xi*0Kj"se53mf+99E@?E&e^MK@8Bm4q'%_.DY$q$ZNZE9>.3"Na$Z7%.N(aLa]t"WNb4*up1D$(`c@W-Ni`ALN==-%Mq<-a\qaKA?FRo\dK[-JL7u9885tc%*Z1GMS[umj]aBb6:"tJd"gnU];GkX?!ideI%A8lRN9PRpYqqiE1#'4\NQ(qW93m7!PTe-dbola*7Z54gsZ_&s`+Sl%l[s?Yhm3o)*i1"Y'Dn`uu]Xbeiq>&Pk!_3;sISkOj!P_Jh%IJ*Hord&m9"jL"r:*1j5WW)hiDpH)1ICm:Ua-RV:Qa\p:GJC9WiiC1nrcrp7"(/`nDV\UtoPhS?puURd<.@*C]0#JH\9NLKp%E9C%KASVO5C\*&T>/9NpV2,Yi-0Z3qYJIaeVEn^Dq(,;5QC-5ncHOQ%B\Ocgo^(,o;`+rEVUAB%M_:4K-d00=QY)qohap,`X^t"lO+I1%q<'Pmj7]DN?<l:3DBEcQ6J#hY)g\!/oe%F)'YXN+H@VPI:Hh`XO'f8$0AkX$+$D5/]u*D9gZYp?[c8n0IW>2TqtndYOlHCN7+ZX:%9\r"hrUb':\@G_#SJ8(bE_>CU:Q;I)g5[3":Zif9Vg"(!pAgC2*d)h;SpZ2M\$,6Rmk6TGNBG@EZ1O*D=,ZSoZr?/08(`b@g<IP.%G8L#:s4CdkAX+Vb(iHmhA%PrmI(1(jJY`&X$FHPnC/*<8`M8#\07GIoanj;cRJ/(8OOprPG8H1PhOT.@IsEbP>.b`d.[N*?J7Y5H%QUc)n@<$L?IsX,#4Lr=(n"%Xk%4%aU7*ROURec@DLYIlVpL?,+n'Q\7.W9_/T8sfW-=?/M[V$*(hS;Adg>:-='F/Jn='+MpT^BG)%3sW%blJ((:O"X2a)f=[uW-c.UmYti6#BfL.mN'fjK=Z8'p\rP)hJD_C`RX;KkAP9gI/tt7=3XB8qilA?]$N?NZfBcd(2NLHd"Y#J%S0.4W*\[M4H&`p!6C]YY4o&9FPS9$c01EnVl0;]0e?ZiPoO#od5(:.,^R<IdpI1Ah]nP='Vi5PdK/AT1aE[FUp,Vp:2Oe7/2uN'T%G97XqZPU:A^Pa>lUCBFKXQ&9Xh7N9:`TrHRX7>>iDPa7tO%'ZJ_rB\7lMPOKHh6e,r+8(./Q[<(PPDS]4Se/qgRH/,7[Ybjq'`FC%*5uUBMqb;e]>+:?T%*.iineV.i%1-W&Gf0>$R3f=%iZ)H8Z;Qicrj1+iFhM1r+kq0r9H?WBY25[G2'Uu8o:mc>?V-#8I#"ip@@AF%N4&WIYX^<P1VYnZU:j(fd$Bo3f*UujF<`oj(:(>,@CIt0h__*FS0Y^5$q<%-?T+8jMM8j?];l5914GSfnf4-0r/,;-E]F]=djq05%%n&W$/Uh-bp[c#?qtJ^#qsbob-hb*YN3hiOoBPoGqt&!*#)ti,n(]!jH$_@;f(A$k(@ms6h9QJ!aZU8g[bY1AE@lXS%NIfi*f61Q%?b`#dhHnIp(5m[%[KQ&:]TE*OAJiqr8>el*Mi3PJ,+e!0)7;sIQ(!^sI=6>=p@;Yi(6mhU@0>;%Xn1rAebOHnk!!LLUR12lRb=hR%-qYI(EUN489#J,^+5Ym]h>[?,*iUJ>OK9IYg!18;huE?#Xq'Y\b^NXPqk_6fDK3U1[qXJjUV/L2ZdlNH>."T^IIA@t?g='X/Pp6'%[s^DGX?:#8=>e+]bs!gBXF9!3&,\7jj4P671jVRe_NOUJMo$""r=AMok;P>XX4N91`Pj_bgN(7\a0cA]1^1kQm[20RSSpM,D6/6R%ROqT'a;%K:l#o8Ok,6U2BlEdnkRm1i+$..6pu1N9@WB)k\c:gi_]CP-lZ6`S[-MrY[%hpkcXc:8l?jR5lM,)+e1/F]H!fr"r>ogL%gDcTj?$b$aTQtT@*r:kXO+!^Git!X.@HN_)ODNMT^hC'kh@P4b,PiDd^om%<G?`#t^:V%hg*T/Rl5>o\D@m&eYsUR%qtBU[nfQnG%W*J<G/UJF)T#+41.=Sr%P<D%O6&a4@]N?\0rO9'+@i)4Nlfl;*Y'rP6D=ksO3P7SkgPUAVq;"3Rp$V8AH9B`6KqI<@c->6qoU1Vq%o;ddfDVpJp_-Gq:*$.'!M;cFm_tCq0i0A>,'ifG/eT$(#?:hkZ%Ma7GIJ=-;.ie"pUXIJaP+:E7?CsGdC=msZ6he_FJmigrq71`i%_(an>ZnL!k6SQ`ER!Z;-XW?<mLT;5XD/f@f%5U1:i4ao_>eIRcR.2ET(T)9[LDa?\*=.E</S#s?@4&T!%eF]dM_-@5cA0;B]XVpJ%nKZa(5'.'c)-E#,$&;B-P]3!Ap=6=pmhZcM1O_ah6Lt]G0LNGHZ\HA6JRlAf!+&nibkMe;$N^$-rh'.Gk1O2Q\(tE;["eIF2/nJh%ZGS0iDQE:(AJ<aL7JQgBn4YKb&P3q&@pYN]gK>>!=MX0GA'plY/UEON^n3<5d;r16D=Za-.,'!)f)Cd\g???p.,'6H*@TX%;m_`M%!$"D6"$t[aK!mp44j^M;4W?c7%Kb@8SfR%JJY)6n4Y*'aDmo7?^G)rOHLRQG;nO29]Yh/qZYeJ>H/"9!r*e@X_7,E+-['S?*f]oL%/]."7)G_G-rq2cL0E8SmqYodX[l<%^"WTr@Sp36@H1TVd:qjQ\p$JVE-i91p78;959g)>hIb,8.pD&(1s1a.=-8-rsp&uhP;<.6i%m!`Q9Odt?ken.8dj>3X?q=ju3_2KDd+VW(;A:jX5'<"%`GV3pk0&Bmj>`O#2!de%>h]Hc&*fCpuT-.`IA>lEV*hUESr1`VEr+V(Y%eFt7eJ"&1kd:2cmGq!oaX).(YBC`e'LTbOW%pe(!J%5F_ik]gL)^s9MTPr.E'BV'i4X(0,m=i;kE8M?;JOQ2;,p,:3nQY+AkL_6D%=(K41bCQU_?BGZt>ie6CT$XWGB:e:1QhTsP(\cs8bl0?E/JWnd@\LPdI`Hm!U&3m0Ggr0'%KLCqJV-&[i(i\NXlE15/rAK%SU>B(%mts1emSJ!R2t^6VmFHmtH#djI+'clk.nq\HKm^C(A9)W4+'ckl(\6Lq**gQJ2.4I!HNtAX_1hf6.NP;+_8G(j&Dgc4Q]JdXl,iJ^%\&HnJmB:"iG]iiRqg8,;eHMi<*'M;j[GCN"d!jki"ZpjMGA(nJhn=C3\<u11JCK!'Scg[rgML-(j1L7^o;/^m/Vj"Nn*>CI7Q4cg%?i>A]=PS9-HZAQj-n^iNhgY6ZbM0):rE"3$[pRtJS_s?-HIN18guR.jEA-RVibcVsK1YK=Ouo&l%OS`=8T(.oElsGdopu-Ko(q<o%_hEs/rfQbINbn+H0eKQdO0,LB7?(rdpDdO0NU[Ffo5d@=*0XiP`Y--PU&9hW4,q#JoAbVF"gGJJXUQ)i'q[e7hKG,2s82lV_BVO<%.mATSZpC8?Ifn\'1-l5dm)Hl+>p6[1cYgX$)RA,%&LX#c%X+>5`-AN@*:,Qg]?S00F0OCMO6g8`3S80YG+6dMT$2*D*:3Hs"Wcu^%&aD5h>^L.<HA&T6lh^'C:8@?r:&saKWT&,q%>PoAPNU,_0n(6,SjR"8lA6P-TeV!bG!(Q"MnB,PALGmX2McA9g#poIrV,KAS"*%T%hRT*YDT@%c+og&pn]hr7Iqi3!F^U]baYk5P,1m^_H,r)?Blh$>Cj54<4QN$dV?>0:o)6lpFnG?rfC.&ChYqi2jQCH2N3#^JZYpki%$g`Q9p*A;pSr%aZl&#>c(Mgb`D0uK9DpNr<is2l@QBhXKkDjJD?/P.\n(rItguF^1>J/dLPjR6!s"9?(O.cP9IT9aL-Eo#$nha[9%4]meuC:;$[g&<ACIAQ9H@g=_pe9DHpj#NCKVmbcXHM!s1HMM`BfL[^/dqC^IFFOeB?0Ulpo7!r)Yd,++']1:57XHh(I%#ks_tr*$%Bf16PeF5-1W%i`D#G]9[W5&5<r=;AW5H54,/$!\EC)i0N]56!,5MmXtBkL-Y#B044Mb<E_0CI/i^:h3"+4s8P8'[(+l&!H'nbWL\%4E^G`FEE\=T?]YR:@AtumpU3W0jY1MeU$cehV>iZ^V%>6@%AcA"BbN@bH!3mNHFGJ]eO2B#k?0WolmV^s09Piasp3%bsn2:pE`c2%p^nO0<:<\iUDKHkk9X^;fn+hs')l^?T?ibkB+'"Hh;.JkGet%#5=;+D+b.l\jtE0`^81)oG.]GKq[>hPUb6rpUX>,5G<\5q!Ro^L%45q$MlAk2?LQj<M5PXqGG2@)]LE0'j6g/O^op\WuhJ>/l]*APlnGt:u#dR`m+KJjQ"PNS?m!/H\(+\t]L`a5^jg,c`Uo:3a_7"j*%hmWL2d7jFLg;bf>;Ib7N;Vg)>5n47Z6/h^bHfh!jI9qVG2!7(OHj>AoT^Ws9^-@k!pJU&"lKRN&%L7u32`8=s$[C%n%N=4jj#^q%%rIm:GI"*8un)&&%hu8"I4s'ZH<o&,!%LV+m.=Cic.=BmCiJssd>HH'k5iiq:=7:'fL_k6ja-1%jf\nRPb8keRRdoC!`cKs$%N-o`%;$_RGN#0eq_O!a95!=D9;k((r5R!r6bl@7_ebR0;?VLfJqr.J4o)?,5Cge"VGlQOKGT/T.IekjbgK`@E0=tr!61)j-3^lHlUV4%j%,4%8oHC6,-:WYW(laQl+I$rr'b\0(fM6q.BDZ^t",kUWcmbR]Xiq::d2Y'/3dZ`_FYOAq[e9JrVUV@_`!fA/pX$+.YD`\<2h#_cb%m-`6qimdekc,]_Q:"T*(3c;^h6/hcqZ#"]6mCmP@D/\Na\QN.$*mH=_s)iVcY_BD2Q%/AdD+Eba>$Slc>PSDZ)G`Q"aI&PTf?it1%@i\oG8q"_)Woo0VJ3HAQE5nFJ+RSQNZo;/lOS`Lr()N8e5!p%Q[\Gt\kD.f]`?Rj?.inifKBW'_Y@.>M"$Cd]g`GOQI?U!-imR#Y%_eZ+YHRLO1l=TkJVUR9J-h&s$d^tQgqfZ^`+&1mmq;3hE]^Ea*@*tl:.Q2Sqj*/X!c`p>:COX$7-s7$JmIZ9PaQ?J46pDVRIUUX&%kBE9en#mO3gg.0\/9G)PpWg+kX3:D/cS%3p4q>5H2[S9"o?QkWB?,;\p_DJ%hDp$RG+<bo9=GCIo/YLdUJ(dqf(fALkPj,-&%=C`%U+GrKe+l./Mr1]?H\;YX2&4LH]XIa":U`:*rQDA9Epq0JEU+Uqq^/f>AWinUF(f<1#*=6UltTGi1\<+^`XY"X)Sa=gp`Ae*?"[f"%KrQ4Ra8#$T_2.95^6&l70,3FWOJq5/8VKrd?LO;*d[m?2GVrZ2ht7s2Y?jncO!cYM4n4oRHhrB,cU8'4/j75*6I)aog<0o`Hi+B-%I=DV#)fT=P^>K.8q\Y?d`a:%*O.u>Xcu.Hl?TG"2V]5AI0C>aCrSfdg,2;#4/ac@emrlN8Z7G6gJ,[pl2;SRjAht=l'Sp9!\*Y`4%SN>)`MX06`ieK[k-8,kPVJ]:-rYTnRf)qU-,G(l!$9=S==,9FIG49JKO*BbG+5`'f7:LK1r@pX`Xp\ttdj4M*;`+AZ%ABK_Lg5A4%L[`I)aLS(HWuY<+?($kr+mU:PF.3Y%e'#53roo?9Y>tP`jQ:<j"q!X3+`G*.^%i_<LtQ<F&U:bZq=:E\UAFQc[h6B$rS.!@[o_+P%B'4AF<qYMZrr)fIl2gn]Y0+R;J,]uWpcn9,^B*um`([n5r9&R[PIFZjL[(.G9f)I%DC45M0ND<Pa`S-\VQFXN"G(k;l;f.6SXNA6%&SS)%;,%(]6Nc2VWO(Fti3N\!dlJ>tBu7@P<4US(?<.-<A$Ohm[^D_'eoSG,fM6SLe>.J[XkThWK:eAK9>GgA_e?G.bFV/,RHduO%:(qnnCi-%8f<,A.;ra,&G*h@cXIB(jB_SF>h&qTfSc!kZrq6s-_23*FS@kl"[=Y+^/D7'(lSu#97L*6qqE=_d_IE9B_pn@d%Igf-%b,D;Jg.qFT2YO.G]kXI])E%?fFf..i[FOZag)=#8_CEkab1\O2XbBp8q!M`4][rA#A);'mT5(JB^AAr/m;0cM;]D)@DgX^u52g>[%_fXL*Bgts"[t^?OCJTio,?!A65f-`-AoC<2)5FMKd+>Q0D`pdnZ^mEt5j9,n.q"m+<jf4T1)MoNj5$MY=i@Mj`(cCUQ@OWq15l?"%X3)S%:#sDF?<.-<A+S[T?&?&17_I9KEEX[$eNPt!$?)V"g;3b!Ygo"n3D_EbcK[@:.qO7F5_T8XZ$)K9E\n_N>8U9@DZSXENp3NX%CUL^=dSh/o<<-BG37HTu?oHW:TheF)/bhstH=NdT!TAWqk\^j+@'PiMXfi0:F:)NBN]'hjpj1tb,.9D3Dp*?bT2Hri%MpC/7pn@X%C)$#l)E)nYg(<R2%pK*"BODdC?P)*(&Ad:dK`hk'RCB;RAI?GCi3OK7SU)O=U6-2KeB#8sKq0+qOHfM?BWCm)\\*Go2UcAN"ZSI3%Y1L7Ug7Xd%.cB/S=7g&=3&U90qHF[]J,43VpO@ro?b?EEn%L%&Ids;,r-<I4HStU48.k]FO:i@R2^^OtMtu\Vj]dl`^N^t9;,QN^%&3)l1haK3ZO";9!nYTGAL`-6\mW/u%HJYH(AH@TTQXO<7o$-R>a2R-7p=GdF\RoThd1.%JDKXtSIaE'9ODij]Z%-Ekl"?ojT6Hoi%I>:,^Xg_]qIY`FL@J9)Dfs`'J^@_j,*M/IClS!8L^j]bD%4'^g$`n-ObR*+3/T>oG'kSb5K3kLrojl>PB"PKd@r7;<CHu[ph=]uu%7:*K8nQ,q5gLc?U8ZfQiiG1e4OE7;ML,RR[XYk!;/XU*O\h$XmQ[X!-&A;=Ue/gX3Lb(H;[c$O<=^$GgY=:Wb(>f022V:EUh]4]R%n'B\]Q(L:rhqrVQp]D)$UCYSoRg/LTUbp07):>m%i""lG"poVV,R.8+pdbVdW/3o!a,`L_Okr#qVs;@RZ!,tL^^FD&)ZOJEVlU-&%>f.WHZs!I+#I/g_7_7sV[:QBS^'7VK4$?,"C`rJ\/=XXZZoTlG[!V'5--h:;>%>Iu1aOigc%f\OR_5XF>LXc1B]#:+#0Jb[[8rj(%:`8p%./`.,$Xe1I"H3HZs6RE*G[slq0^9N/1U]g6ASf#>h-*us/_tjL7=25l8,GJR>2:d08$22[04'f+]E%Cr8-jlWE>Ck\rZj]2%#UU]Z8Xr&;JJT!p8AKm@Z]jm@(i2+jf\cqJZeW7_]mX,5=>NE0QJ=O1cD`jIWp3R6=Y;"`/o@@;U1.8c1N5o8PduI(e\Wfl;B%LP%!+Z_AQ*`nB=mu_W%^Inp2be]+P%:&I@seKqJJ8+K,icb*ZLioG.CR5/-89(H,"dG$=dVtb'aX0bb<E\\7$,j4$(qBjSEEcT%Mb0i%G*uGDUS<>"^^tHI%_cMX(/12AN>"$3h#p'm6BMNP4[hr]E&rN.#@CV2o(lHJRnAC=B.=(0jC'bo'S(,J?rX@)6n=,RAkJ++(<Ue+%dn33LaU'4NA85aCX!CEO9K<XcgbbQ\r$/J`Q@9#UaP<!'(R#/Ak*=q&3gImbi/P@[ic(mtB,M#%Xpb.WU$'4q_uFG8b.WD4g!Nb[%fe3;UVML(2!N!S5^gmL9Yn)4d<!F'm%[foB[H%An'8b&jVDSc5_Jo:ZTTMPFr$*>%2aSLE'k?V`RMK]$#-PLQ=.ad^fKV2T4ObGe%lIAd6kLoe!Ie3J!hXS$5]tU`';(EC5%AhtWi.q@3PE.p(WK2K&_-c(<E1u:G6E/l?h]M`^YC5TGhu1jProIX>qSm((2H\fqIdcb)%eRuYre2,E8s3+DKs3+h6:`OPonqODrIciBal"f1'k%?o*k/jejqTq;2B,Y1RXhi7hJ'[#$k0)Y2ie_T'q(j+@pD_\0DSp_rP/$S5%p]'V*s7hY9r:Q\qrVj4/9[I'=?h0Q@psuphr@Pd-cYA]Y9@GUk7s&]pGT\OomZ'#g5qW8#!:gt!7__(HTM-6m1ZhS,Wnr]uMO&_U%QgT&`3Rp)1mM4pk.IP7!>V#RQi:BCVe%mUEV_VJ^FEX;]<t%f3pVXOuZ11-l7&#E7E\B,"&icuu6YHKm.%(*$eCM#W@T3nA4`l9O%6B_J"/\)_G`=c95/0J=4L;L\/(JN#8JlXh;RNW"@]mJ9`s*X`sn,JE3TDc^=+!7D&?]9Ee&)%Po0,K66=/mpW"RR#20*afCIeMeE%l/.PN*&R&0mDhNA][qTP1p),la$J1af7"\rD>V_AK;NFfI5ko/p7i]7:![/CE6tuY7m@KPNl+%cg@W-`qJc4NpiH4OpiH4OpiH4O%piE-Y/p3fNe`(otp>OqZ0(kV.eX"gs'`2<.s/Vt,QV'L/ke@i.iIq2g\KBAKIkgY,2tUHNrR_MV(ILF\KDpMia*uJ:9)%F6dJcc1%jcuS=6M0B4BXdhC,W$T?50fg^?@M\bk]?R]7k7UAcrXOrr0hCsJBtXT>^bt].ur=`J`+REgi2k%GMIK?oUU3]p6lpr??>I*JB&T+%lB=0_l1Ql!HUgT<_"a@'\(t/-gnMrRUK8M?\bWBD5!!\,/\/-k^:#jUfM+5o^'RanWH%"iX0+U.\j[TBb.dR.cbK(&#N#9b2nf3^%NS/cSjn,NfYI`Lkj2g?&:>X^G&$?Urit"?Cf,oM'';'O1j+$[I+2?hF4%k3Rj/j\i)/:/%r:or/H@lV$hg"WD5Pb+.J)ac5nK7f1%NN[a"1EV,1h/D):%sm]Wrj]*8KKi0@,[^;K^\H<nId;jZs7kiNr8d)as7"/!I/U<Grl)KUQQ.,DlY6EGY!5ViDnYDKs3G34qVI;5%qkqcT!'\a/m($bXpt]jPp(-V?e(-3qqKeF,,=epuGpbVbrS&E?oW(dckh2TApsRL9kG8u%pt;u<HK(udId"8MLWMVR?7#4.k`scV%l5eORm14^?Rnl0L_-`KlYg1RdH0UlkrU=`D%<ug)p51)8#>R,\PAg<EB>=+lB4"KOELiG&GkMC"qWs!oPRKIAP.GZ*b*pfW_X$(U%kVn"\S.QgmGjYgoI.Y+e3lg*&ilWJ__+cM647E$$Y<MXG$V#)7jb7?>qT?j.0,&36nJLW3OXj5_aY3VhLVN=ccb/b1$2ht"^\#B!%s7J$prq]d_[VK8(NZPgK*R2=a'Ar`8ccYI6WVYii^\4pVCim9a!h'*X2gZoYqgm'Xn_^2H@A9@hc=d.OSj<m[#unFs2Wj@EIe<1!%s4!P]=Q.6^^A#U%?9dh,c./.&3HE*HG6ma1+8a'=T=7,eHL\<`IcYM)[)CaC%BOO.cM$pT54YhR/L^`LT)\=>55r"#E!I4A:uQNZ%`WMk.O.Y')Gi@n:J)m0d*I"*:.W#+0-S&0kaa\]tJW7t(ePu>)mqhEc6KLDp8@l,0E9Z7s\YSOJ*/D"OgiaZZCkX+IoVTD!aq&r5%3RV<nI\72+j]B4:2ta`mIIV[1^1\rg00]9H07N,-;a)TJ5[&)B)D&Sbe)1.],u$URr[6V&oQs2_:a)JqS@lHaH2cbUJ,_M:'L;B+%s5f$^-bJf$iXNm"<atW$hYW^Z5Q/6o6N$bXkF_bIBAWM9PJjTT5c$XG1oMS%EW3/Vo\KO*<OnH&q![[#l*&EO"<)/C.XDt?lts\n%]am<t[AV0+"u[DrII3.%mi<WjPO&^^A(S?HQeq5G:Oi!5VInufhu*-DhQYMt\mDgU8$9Au-;Smb9cs5U2m=HhlUZcs)kZrQS(>KK%S$&%c)4X;ogu]R2HHVpj;u)#U.hu"YkAT#lo\F[WSQ:hl-(m!lLW@.)h&eiPgs;QN)Il*D>-[n;mPKL=r?i]aqKJP/+gC]%F&/=?%m[/!G\.21\o/gl<pHp&&bSS%bNIUtPrIf4InZjSL:K^=PDg9;E5P-mBcEa(JPY"a9TA@$?ol#024"F$_d^4AMkpEEWE,')=\XolV%m7Mgmc&K3CRXB'dY;id[<K:@+o#B8]hr2l'Xok\EjQI=[*kN>9-OuX[>Xe14S@CdU-#3`Y4e_rfB]tLiSC&>&4?OUm:P[sIl!c#b%N0NhZ/3LKSj@c9SG`%q'fs3DT5)s$u@;itP^nYM10Cg@;*JP,Nl.QAG'Jq3$/<1-Gi1jYk4R7^(QiOme>V,8Oc-L^80X(i#iSPBr%H;Oaame;R(=6R!dQ?PLe*q4IE?#MpiYf>GSs.uWbIK"p:?[Ui.B:o%P&&*1]@[2"anAV;3eBV,K55FsYhen?jj'D]]j76pV`?0Kd%&$41?+8pc$47MeO5$>1i;u#/>(3Nr4q1[.af.)1)g9gr[rFbRTX7OY\FhjOFKlUGlGVH:IX2KX*ID2B;gV6^j"1[l^>0_'aisQ@^%]_q>!n'Y236`]`3If:q"eCjbO_`BG8o5:DQgV3-`d`Yugb*>0[@V'6;o=_WSe:#GYSX5uGF/dSlSoS0%jo8-9qR`?$U=,6D`g-PE%>.Da?ci-,2oH%WiMa,NPLb&EWkKF%&oU]>fH?!#OrmrZ$krlZ:T$2uqWu3:Qj]+m*4Lf=47eWF:`;JE*<`/*9fh?e/3@B:PB<i/a%om;]L4`Of2P]0CT^SDPgn_hk+lTFieWX7F'WplY8eel-YHdYc^-a^naZG`Z3R,srh18V*pftB9WRf%I$1\qCX:,S=%]_&a]/i.tE%s(?[`07D,^!\N,0oTqaSSC/ZfT7,"jc3p8PRbi60rK0O>n,L-kM`R21[e6dVI'4OEF5QrZGMDsTagZ`_nK2F]`XC]$r1BNUfi:>1%e2ok``@%7+p8:.Rl*EU'iX6iQMaL#$ZK,s&rZD-e+8sS/rr-h9`c2T>/tJd8d.+"RSC8kXkO`JTm[><:+oS]#Qoke0pD=+pS*")m%9Rs!ReqG`6V&757IUeQ8;(TL*s'NIg%,I>g+m&jK.<qne)ZF'SpR[JRI&@9<_>d2=@9S$H$&6@t<K)W'T&X1_=P2R^hiT/+qHelP%\gsqrlM0o0='pCRpp$l-lHC17psn!IS@n:$lV=$6EUD;s/RXWEIc^*8:0`"\NMgZCc-82>](,W\-a#XVV+E`<kS70)IH%gWDnb>A%gMajeNn\Kaop2(c\F.;c=']gQ%.Mn,2)j<<lg8nf^ADf7lgDA[hg%;6Xh!S]!VFGJ.!'Y1SThX0l5RO:^<UlQSN)=JKg*7t'`bo.%Nk8Qh%?4('n7cWRW,nNDr>#C5977kpo'.,!=PM3dBl3Hf]kqU<T#QN=]C*04VD4-HE$%;a_eX/)X3TPNg?.uoIId9h>+,HTmB=(Z%KEhJ(/$HMOk1`Y_\im/Z5=s8\6]lh9.f__\gWe>UXY^BS]^_:L>n'N15(]N&ojAZ+,('C?Flt?L;45iW='g=2blDrtMjL(R%[\8f%k?3N`]If+cGMRH-Ult11HI]D^^a;3]IL$4\T-t%/a,p9Yd-)LR\c/%uN_1i`G2gMG:P1!B,gGmh4'\.i(O;;NNOioo]N%6.a?4b5%[_(go>%*V6!OoDAUI,_\UV9c^^?52*$KTI@hd,+BOM`CG+92S)16fP]W?)\P5f+"F+hP>u,YJ/)lgMDj"6mHm5j.MEl)_Gc2Trh,%^@aslmsn'.qugPV&3m@`LD(0pCB1%D@s%=aX07aX';.R4X+&i,FkgmtEElY[\GY!ef-?skZ:$+HjD4FuOXt3W)<U@<+Q!Vo]s<"e%Tl\fd;8*&fWJE</Np?]E]B^B(>*-sTgKHa7%<ZjsR0Q]+eDoa-a0,Z>5X"Dg9qE-inMIfBJTBOllFLbR.L4Q8:0\;p:Z#G^hr"^2%LAKW9J\hH'j*ERPT\#`\c#!I3<=;!n]2-=e!!Ht?osjSf[3omC-3UIegj-s-\))/j#,pp#V?sVU%%*M'J5s2Bem!('j^nJt%$R(g%6`0:?'.9uqre;A1]]&_QC/.kL4$^Us<ut9u7N=X9jV9,.:'*S!'EDK_%,4p3X"<_c\@_m1%.&)ja50%INX%XLm;5dJGDk1M]7jK:%r<64aj2a/[Dg<-&!FNo"EWWnIgZ4M]?3G_Z5[fFBj#JX/4HFFYL!D+4,C+BJ.e#>j0'f;jQfO!T:S7k\#:g@EO6/H'f;b]EV?"6b%C,&+,\`l_eJq.bBe57>)@b4bV<WfDeY1dVN&)rrL217TuEu;E]1^Lr(o5"1:(g)IMnF)8&.^u$oOkk8k)]4$bgN@#ZU[)4Bm_R#u%q>&_6_="bc)mmpd]"#JB7..e@rp$]$p:ad@VN8F&7]k;YR+].HJ"H[G&F.%-GMi7Hhn(o)gF?8hi<_)H?[)J[hu=LBrU@]HrJNme%p\A1@b_J;.nC'JQB=;1IN^*>tO+$;c552U;qUFDPpeTcG](E@S#C:Vh94.&"2a@)rO+7!6s7Z6J?i'\q++*4fhmtJlf7J6e,<<F,%g:.+Ns7=?^rjT([j6L(NdcWga=+C)?f5;"\W+S%%_oZ82gRnJq-U.:$YC-:a?hr="54Xh#H/#MJV5Mpi,0Qh?r.>MDr2J"*p8'E*%p:3utm0DM@)l;YP#BT]aIVe%o]]BYgnBla\e>&(Rl6$#Oqu>T`IX,F^]3X]!6i6YuI;aMk4n&F?7m?M&p]&W&J,PtW=F9uQ\\iWt%K1jt6r+g4ri:h]hJ[bX4rEG3YbZu^)0"[fC*1W"$9D@7Lb/S)jq$%k7!Tg_+h1K39;e,bHD7/K#FP16'mVZ]SCq/e1KopQT\YNgC%kI.gfgBpB?fb^bh,*62C3%T(mL'P?4K"r`,Qj5oOlmWU"qQZr'LjLFX@F=1<YlSna(iTXN`N0Hj=mD>1mkBse+H]r&Y!?\<>q72l%pEUD&6co4,0T^Ce\)3"XppX=8BorJ1&>\'onbYe^q<`@p-'@#,'p9KgUF;%DX)*P<c.g(*E[d8202Id/gORAIg458i7?GY',gi\8%KRlgj(sBj]/'q1q%"s1\k4XR-1;/$OB:kVAlT#ZoaF20T$+?ksK>p*;!'HIi^ftsK?9kj/lf5,)#btpDJWB;)_c>[<GQMb.6.c'6%'N"16IBc'5cq@uD)$#]$aGZ35&uCMeiQIWk7T1_uDeYeTFg1?RG`ib4?)sD\R0*3,G[-3b1-tLaD6#3Zq05rNX;Y$1'Oi^pVH+)*%oLmZ5#nNP:E%(kW@tM15U]5BfL'Q:lK!1@LH($8<`^E0:GTek.6;Yi)^%)9\(P*qn9FA[OEk$m7[?n-b_&ks/07eZNbW$*H0S"do%'SJ+j15lnX@NG5i*`DK)4NAuPpW=#BSe*`2V`KPF$l?A@oh&`42\tPh3V]5gQ,X.6b'J-oJ!I/n(7>%rH=%pfBe"Qa[:;msg(CV`%nbCrk61]QSr^tVO?aLmXc$Q;c+DK[am0?ASDJ27J3d3sg6.<:^g(0XTh9pc!2!p%cK;N:jZl_+V]:o+pl1d]@>Gh@lBfMpcnE9<(%nE9<(nE49\\Q%tj+l.oq4/MgPU]")OG:k2Q?S1gGV*MX-c'L3A(G"m<BYG<tG=qJG7!l<u?OX=1QKEgqIBPKBd^8HZ]rr^[(Q.>_%7K4l(ms`Z6!D#4kj='pc3luC6o&D)nh/q+?VbS;:F@>3\@jb(.g=.u:3]9%KeTC++P=rVhf]/mb?,O":oC%%iTnhKK4u5:UjZ[7g%6qmFs4a*h[S3$\aO*osWs*XCZ-i`f.:OM5Ok>U?Z;oahEo>'P['6U"u"+U(?Im*Jbk?`Q#V3bM9m`/-%fAhAT5Uo`Wipq+tcbfL5%^\lT&b0=blVR>TYqXVPe(Hb1Vb>0rJ5PWlp`r#(Nro.up55*oTZQ:(f^ZXLG2S&/Ak:]$tDsu)+A)Nt]g_9Js4o!D<*c#-igiGgA%b`QCX$P-DC,ObpSlAf;e?[aJHrirA<0@kFFZ1FYfLmB:+)cI83Bn&:dMbcO,EhgW-58AJ%bKj>K?O/k\J*ujuh:KKd!fslj%mO(Y%k)U=Npu(3bJ<V9+]?WWITkQdfNultl3e$.qUSik'pR`0R'nN0&SHR:uNBQoEjXVH[r6P*HSN;)MjgWM6ePctGrd"'%@lGDkEkEjm%M'#eC)aZalTcJ8RL3D->"o>+D%t2d?4Vt_E]/mO(isFf@7i_+>N;Tmn_POMZ7^susJFMqrIT2/g(S?l?iUU2"5PSS#Y%IM*F'jA=%JlM.$F^8qbJrL8`9fF+`[osiR?2Tnis4!'L[:s;L]U?O@<F_uG\7qn^2hc*CKZ68V1dB>"Wl@O`D.Z6N2#L9cAJN*p@ut-:5Pb05%QW\:XfPBE=\UX1T5KT/9%amas-3rf,ic@>1iphfM07%OdT6]oO"XY9M7A8%W55rWqT1@@jafL57/;BAB6dk.GkI2hNh54,>%.ApL%/,I'Wop4pFVcRRf^.J1Z\_@`4_./hI_Cr..9[_uC%I#oFPF],9(W"DNKATs>H#Km.SKoMen73n3chg+bFMWSa/FE";2M;$l*%-V-%QJk7$Q(g8\_pTgA?3?iH7(E8c-@>m8#jN5f$0WB1kbL4dgk?tD:3XCIH>^fGX1u\JqacHP79Xc8+rCa,j/)."CbZ-&FU+E:1@$0_%pf*<2^uum,8n@F:T03Ji55MW6Z&t)2m6P\BNu^5&$f1=bQiBaf30B/4o*HOfn8Tc%nkUN@l&cguE$%.+(((KB8O>KBO.>,u-7;Ie%c'--De&`=>^I6G_T9qC(=5fu#bpB`NI8j(W/Yg#=JX3PL`T#WQ"eN_(&N$<m<YnjdqIl$XKj]!^l)YcX5#5o$n_n%5dK4'7A`6Jl%?(4Fu7ZQfWAN[aU*Dfe+'7:3AYQiTT+h!UbR4>;86Y`Z5I><TD0;U12JJ.h?dsS;E(H_\+H</]!LPcZpra#>G*NHu%jc@7dc[PlR%O2C?M`.#]:iHNDeH4bUmDT@,;_4tdH^]1dQp;9])i*j6sqU.CM]$!1I?=A]FLD04pNT?XB!e(#5p,)\Bc0'QOJ*\`7n9b&p)pZ4c%J"GtVhs'7S^A6%Rf.$m;hqboUZa8*?_R3T/4'R0-,u5ls2FjN:V?pc./g^qT`3-!F>^I!F"n'35VMeOF9XJ5_(\[GgC4CCgWB5d5%4bi5(IMi<;E^C<@kfj14LkfWgbM7p]-WEMV]X7l(G9e0$D<[2qJ`kGV3rtr;@pR!`@d'[&!q=9M0c2-u,]/Ftq*76]`G!UIW=bSn%.9%hu3?q[aekgsV8KZ3u5-S0EE-jUl&#jF"-di]A;p>&.(qC&J:'nt)U.qo$&V1'Yk=FoJ/V,7-*<ptO'VWZu+!cj9nVi"dKAh4e%714>?!8Ddb&N.PFqI76/M?&dkYeC^-@^V>@H":TO1EmPNr.b<P>-)LFD8`/NMmQq)=06WSA>#9MisED^Zs3l"!N`("Gj-@R6<00\%)/5I'0hY1"!UhV(X;Znm86dPSP3iBn/M3(Z6n?H5VI[H/V9jW*:eXuBEa]^j1aNmZ2aW$]?kH6Z".B8l=^2:@5UgH7`D,;X$8_qp%3?Q:^[%WTU$'[c-=q'J`TNDL<]&aRg-j`k>(8Vm:!5EIr"+,hK"4/h.7DAs62CZc%;hQQaJVN8(JAT;.7$NoYhl+Kg8=C-pQ/FV&%_b)]n,"gc^V3!r$++Zb9Af7EG\QD[HgL,P[^bQ;m`Y"G7#b2qGF+C$2?3tI^Js7*>!p<+CfL1jp0FL=3`I8KY-7NU9E<A=NYm,&q%'u5JmCQ[ihi>AodX\uYGRRE=%XrIWD!`f\)_)*Ao!+ee;221T<O=X,l@Gr=A]JPBW,`)mh?kZ'<O+KoDRTlVako$?1E)H`c5#($>%5fC!Z^5rS'-.c3k!B3Fr,Jj3^OcsT(:QhG?!&FC?70)p=Yj,>)(d\j<^a'LtQ3B;T0*[Y^72.N'Yh-P)![s6H1=)\UQe`%(+W+HP%EkJ(S#R88JQ).A$!W]nB.U<1p!?I<`K(AFG[]*/u,(qYJV2&'0#&'96=k6CTN&_>0QB8Y.8Rks6eJaGg\rK6jJ_"ZWMLg`e@je5m%Z>uTL2TM!o`CTpV6Fk8r<X'!a<,melE2sBnacTa4.%k6>0jSfSiM-RBfCKF-5/p2d.%'2W[=pB^#R4"8>$/1>^oib5mkWu*9FA.#%j-t]AKPf8b/sFCZ5/(`u=HpJCIQCiO?,F(Z&KE5]?U-;ZJX</R)J[qW5qlD.j@P'&86VI6Bi<6QMQ@pL%<@ZonRgaN5tDl,6'-k[%jqq:Q#"?9D>1*SIU_FS@!E^\3PGE_a$";Nc+[qE78XIY`o$)6]^BG0F'J1%t+t)C2,3Y;fpcPd/X=/oF5_-%!!f@LF*t'H:,#$Z)%ZF\ABOD^_B,O:5"[r^5#-K-Fj`c=Z&FuGK4GjcA1'@M/1A[,E1NRsia^u)HdLD.3F&qD'k1;K,SAS_f)D&XN).hBcma)i<Ea'<Ak%>XkNt9a/[=o#db-D;+Je=F!^qlm>>%Y!+!ZB#Bod,fg(+4C`qK=3>#S+WeYYJoWq^!<!+6`\\QDDF@<\M$d^&AkM+aHe68**pDFL%'24"76'3fggOi([eRoC^`A3!@Kip-j[:_$kgg!Wd'$7e%ZBQgcS#&EB)qtV(ZX8oZFCcPn>ec05.FJs6Of*1=I"K2m'L+ts=]TQK%nb#$Hn0'5Y%NeN;0!.*iK]N#.JCVerW%>unfQ/;t'S!o/!#R=,M]L-jPgh0QA!$kR5#9UapC7%<'"_I,F;M20KW[V[%\5jV%\4lc%C@D<nJeFm;*BA(@2h2lEfYcgE;eFJR3*Mo<q*Mq;VNBf1oZ+D)F:_RM;HG.s!KJ9i89B]QFOr(&ER7l/8j0ED>8e?1Q5#LU(d[-i%61Z?3"%>PlS0>-BLF?aO`PDVl,u>>5AmWX4EQUlui2:rYQK1Em\:g\]-*.X]Ukpc\K$1H_SR?.\3orn0FtsLhO?BoKS":?l,[;"k%i]^=oJd#P2mWENPO[IMJ'A^O!kh:r4@=L^i\jj!5jrRt>Fq_cnQfo)r8ZH3nKL!$&JI%dD5oFhd9ghUBo62ccZH'1bZ''2.HdF7t%[6<ahG3K:N:/_Ia[W:_/7ch)Q+Jjt-]6cQ'f4t#PXdEBpidQu,YYHdMoSC["rl$(O#HXU:SSjg^s*YKY=,hN;Cin\=70?;tq2,ZD%RD5rsMR6\SWV?8`IB@+%1Q/_/)"VJ&riacNKqa]QK#!FV.G:DG`E5_MT^7j*6AZ8LCoI]lNkHhU:N2h/.*>[BPQ5@(`KKS?8Qfqr%'pM%>QRUhrV#dq;KL/\-+CnT+-DX2!"YIe0n;J%t,H6uW7?V1p9sNJ,,le\ud:LH&bP+2Fd+u8YLqXmHSb/XE5K+13ABb436s2R8%Mh+lmVupBU7[.rTLj`Tos2W;$8thdTk@p&:^^@lE,0QWr<@sF`OSrUuQi^lPOOq/+<`Q#2.*s_O6`gPnm?a^#1*/[b/'Es<PS<(D%Mc.W21/KFIL1F]>"BK%i`P_6n?Wn#G&JJQ(7:)=W#_KpZOJH:K,Z(I+TGm!hejNhNWXo;EPo&AUdAi.1%-s<F:kf`tKCCW[A:Y08%_"Af6!QjhOqAS4P/P+(aU-LF=?;b!A[7_cj()q$GZcPks'M4.mc;2Su/#4<(M_r8N5mgq=1;K[<QB9Z(3S5Q:X\MOT'jrp3BL[T/%o+/kqdW?VKbD,,-UX^Zu(r@6K@US!$F!2;DVIF<Fb=QHP,A/"M7c70pWL?4n45fY/n@$&5KY)+i/7!!F=t#'jJqXV^kmc>K6pdce%6HVg6h778D=tnlBlB!>M`CO`H0[,,>lC-X6%^-.ROf=$A@AmJ>=RO25H1-LHrcZcB6],D1@MsPdOnJSo6&WPWTj9e97KG'SoRKDZ%(6$o.[^B+(-WM%o1bH4hEA0d;oFQSME/#pR%B?X_^JK:DX2#NP;F&u5't@dEZ=Kd]dP<e^6@gUK;lL+/$O3I6eH!M0EBkQpe:=n+%3=&[12n5A06N9%_=3h0)n!UMDI_u7frq-eFV#e[91t)Kt?uK5!RkW4lMk1D':KH;L`_$Opm!8^$"`Eu<:,,9!GJ*t^&X\(C8hUrL%3*S8-rtO>R"I_d*[ro[:gs`VY8F!,hds,'4PS(8Nm2)!&q#q+C0GLmJ=Ns8gFlR1+.NXn_?fVJ^f)uA"^nB&K%[jb%+q1q2(G";Y%2X_[C.s5M_AZL[FnOA?(*F"3?/#%7_L^Zi_egAm>+ibPK<Na\f,\6J^<"@-4hM-?-0q]r%p!^?)%>LAU305"(S>&?9W]FfHM#7Dd%H1"[4+p"WETb?)-,RS948jn#lm-=Y,9plI',^RQO;m?rtIDo'0]BbR1E2*W`'<K%@*ZEdR@r&dZH(SH;,Zam+,LQ&9L3EN!*mW(*%-.ED!,Wunn(6ePf,Qgh1oT`=2A>(QB-j*0DO18$1UPO$Wrg]3XTumB\pZ8^VU'af+\"-,=c//C$UH1*M@#/)jc;8o/TF;ro[O733%<T]!eM*f&..AoK$_-sleI2is+mIF_<B<\pIMP7D.TL^mgVP-!/8H\Bq6R`+IYnTs%(Ft^YRhIc?erQKe5S5uSp!Eoron@UuJET@h%BIQMuJI`'.WS:FIZ/u.UX^M4.Bm\JP-(Mp4.2NPX9=.;1YE:n<ifk"1?=D%3\mesg('pr\-J/UG$Q>8Ik*08R;$m>E(HZ'@+u<oA%_j:*@g2PZ.0iG9`:"Q`h&k%fiB.Z(.W`DAW.1W<X!OE_qC5GnZg07b#BesX+/`NY5>_Z/4I1Os3=93IuZ9$0UnZ<*L)]q^E;&cbg%ekrft$irETZuRL_)$<pQ#Rn>sX*OB#p-Hrk*./sg-Y)BRpcZ33/f?=n8@(]<?Rfm'7Uhe<7PaENbpS\MB)?3nr%JgXVc1Amb\a6:%'''`\m=#l5aq]?-d<f?\HT>cGb6scc_R$]?3`$`GU*cW!=Ks&4DV>4-2.>&7"AIlXC`>7JQWF1)3LYNpI3!EC1R=)7eLi$oe3k2<%=>COcV-REZe7L1?heFj"R`K$Tn;ro#&JX>FG58@5!#a2k`'+Qp"lk+5W<*/#!'rjIa+9W87C)DIBaV8CF'!$h72QS>)Z18b58bni%!KeQ,;6Z2dJUTHUp)Pfemk!d6jc#ONTogf,$^$SXTbgfp)NQFp!V#Xa-M-/&Pt^%1aZ!-`5aS9t,gl\-9+J0\$ikLVI[BsCq3F.\%U.LUd)!#7J'Fe,br7HZH/WkO+5FV;a;O58LH=A=h&-_\]G8Rh&0ZV$4V3]?dKr%eXXd6=l.]nd8^C/.,l(]jF762*"+H$rXWGtC#%eT*/!-h=Y]Kc9tf-@9Y8r;iDt9hNc^#1*Ta-@Z"T,PNHp#_,BKg5`&Y+M`SO!5h_Q(C%[O31oW*5haF39bq7//c//V=<SF2f#VL5%P."@=oK>@+QXE*(G5$mh0ppHJQh,(!.)k-U-eDWEXr<WsdgV0j4'W&lX/!\r+,f6=-@H231Po#0B[I9+`Efb'J.;(f^4IAlPTYCc%OGqtYb`!lFaoQKcA_j;1XD>MM34K0IX3/s0P[dVeY#+&<lbRZuPLr#Cr2@?`AZ(H'.`#j%()36f]tjSc2JcCdU;jCtLsQ6'f>?*X%LUQ?lef9LJEP@0IE>b>UTWjcY&3*joXAW#@5KIDMG#Hq'20nYKV/jB6@:'LNlQ]OsO#BEkPq&X])ARs)7Cf:[p-tHkjXFLe5e!1q%99\[Ui'u!bL%#:(:^FOU-!)FDL;\$]n?q*Cdm?0_:A1kZA+="dDq<P\W_lf*/=DP$Ku4F(h8:,t6Uj]+kC@oM:#Ri=kf=LIZhH`[%U.goY,op9+Q%$9$]L=VTg(%\8WMH+YW0-%<7Oco.,b3Z2-h3tLH!A"umVq$s.-BniA."VY0>UB3g"?:EdCi8q(!Un]T?Xnn2e.^2%]k)p;5/WF4/[qmoA(utPb[rd59?<dJN6fI@H*+V\94nmk^Z1#q**Y\I!5^h\/ETKpiUH[Ja.nW]n6-PJ/fYHe\/Q/VQ@"uD$h6&#%eL/G6A95#ce/_euQ7h:(j]B$`Lul)U/7uKo6!H3Y;`HV'^Y!-3s1<fABglO0^$<sPld2EJqE"--/<*pl)(TSkp,FjMn7$%%P#WTM%Q6e%?l=(m&K)967?'5$Lo'aLa6ZnM.W_4cd-OAX@cnLS+#WO(G3<@.`LS=L76ZM>-<>UOZ_/"[?U:NVF99Q0'3)"s3/91I(0S+2'%k)N)6^\9hR,>"DYL"k!?e0iZq>5/-g+!^2p')#=?'Zb$QF+dh>Y"G0KR&B'Vm=Ei^,VB:6&gd\Rhk*$<@E=0pW@N(R*8W"BmluFP%_^PX5?:=L=R'Hh8=fE::h.NiBig^ak5<5d^RHAIc3KTZki$TH>6=_Z#a]SgA#O)('#`jKj6Yk-@.eP;6$A7VUL+&4q-^i9BOtL,X%>dL\_c;G;66`4CLVF"E"1$4m+\qDIiH.JV4Vg_4<p:+5hUb]i\.nEJK,,a63J@@;7VqJqd67s:j+9/=h@#5/'_YM0Yi*cP]W\`XG%n/=)W<On8g18ZrLmM7uCiu1Ks%c3/^GX:6t/boR-(YE=+ihG;g8m^/\r7/CVFt&8+I"Ne/V,$$6V&['5j"O?F%t!HkC4dgBKg"gk%45;Q'0r^!7[AY!;!a",6R9_He/up&OZDoM(Qaed-QTajiM:Q1P]Dr1rAprms(XbhD/:TskR'6!k'PGP_rK[H=e^='_6F$mC+E!M<%'gI>3/A%p_mPlGEm.\%a1"WK9/[j--D-3I4%qjK%:4qS"8t6bmS<lO)9^UNnre9(j*A"=p_);cNX94rrISo7%$8F=e^9ZJr0$5L"%6Wq5#'Dc+f>@2eelJ[>$[@,r?)>HX`JO>'J$nb%T,5GtuZ2Xa7b*Sn4ph5PXd7.qUAFMXeoZ!h^=FP_<G:Im/CfMZ0CfMZ3V?;!6%ke>@Jls?gcRZF,BS_B#;FAj-l02n@&Wf(D2HhF9lqXUog?"g912H'`0lB<PR9la`![@Kr@ac1%I;OdPP>khb?o8-CHpG"@Y'Wl)A%!0+_0Um([D\mi&X1J!9=Ul0)`raPCt-m-Q2mAuBRB1:R2NOM6j<r`m&m1qOio,)h/_VUUW<A0&=NG])ND3!"B@@]A-^JND.+t/G9%d`&$i7U9#O#tM.r`>/"lI3L6O3k@.'P"DTR7TR0GEX_^g^n4!TNigjiq^b=*B2O"mrt6<L\O):\Zt:kll)/0;'>=th'ftom_2*W@%5]0"SKo.hFH7&K?/hi\cc/HkBd0Wgc6!"8Y:SuT+I5)E?dPT;U>cNbTOHhG.8$D&d<LD/30c<C;dC%k^H;93[Tn75^/;BlYBsTLB%;k+1N'&*EXED-EYjo1-"g:%0u:aA).Mr%B'E2ZqVHrWUB(G34M>mr7XQCorQ-3nTX'oM->'hSI+BMMtX02`EHNY/)>&HXa6!!^/g%%[]\EUUP4kE3N1Pr!%\)!_CKf:(TCV'EeT.KrpM##G>3s-C^-rKO#<Q/MmV;V@geSbT@!hif=48U<ZVp(01L$\03Se+Wq(8Cm:\0%Z(j"<n9-c`6SOFE#AOLUGX``l<lA(&O]Y)8H%hcdE?3Om"1uXr?'Jk9?=$+[(FY+1]k6bnOefE4!P?.iA'3iPBVZp0^p#Yj:^2+_%9$fILeWehOTZiKK0+1"/8gn9sK5$R$)*Ck0!C_!cW(U4VZP9No7SSMY5gt<-!GfVMg)a&::n:jKW+&.7W66<`(lS^k<-bqQKfb=8%)%AA99+VIM7SaUjon^0p%nT$+@T\:Sjqo<mFX:K'r+6I.>^0Dt84F@2>($DQ/MdP-%h:"j`!W.M,Z7U[Q:-%L&m-n]M+U?g.Cir_%W^a9hqOl>7##1s,(FW1i09g!#?k*GMRj<-^`=UFI$>B4"Y/ldJ:m/Y[7ojPG=D2SCRR,p[b76$A**13Dq)EuF,6/Z[fKlgiQ9ZJu%8l[ia,-!q<ZJg]\;$fV\poP@*WW:Ej)<=n05A<)b\>Jme)EOk0E"&DH5uEaZO[^94+VK(1H!285A5K)E*0a#-=VH@LlcOO7F:.hE%nl:>U9c=+dm#.TKOA/8#PtoJf%^_*Q-8>jf/$b2@d08;j4#SsRWX+=.#?4]V"QReMI:_IGKVp-(&7k)/k86M#2,RFhUq'TlE4cH4%%^EYZM9=eO<Np-<0=@Y&4JVgKg3L$dn1'8KBJuNce=&r<[69a>W3/G8.]+4./*2>_k;)\-6LttX+9E,*-0&4&5>ksm=k=/_\#="_%ad"B[,Pqr$(O@3>_\rE-h+TYPZI05#!JPZ1;42dibL%Wbkh<!*$u+i3&f8W4ejn]6"o3'Ts38`:1\bl`rgUlVZguunrgQdI,Q,%;%%f$8*2^SJUaooh9b712\a+B3G/UQ1$h"Nu@*,TPsTks8(:,:LucBRs]DL6/%`.3s;k-B=3bICq9QU-4]`GDDSro+j<Q3naL#JjBG%oQ"240UBbo%1gju]KH/GD>:ks$qreDG?Sch9(&)Ml5JPr2SNl1UUTZG`9D5!?J5V-JM0DY04U4FG+$)'D/NnZ9K&"iIG!NLgp`j"%JB(uhOSRC0W@5Lnbob$E0mP(6fSB/X;";e03g!31D\8=[-d#6DYG1Tf2G[h[Y]<Mj?g,k,n^E*H,9JB<YctcJ!=)Pm(eg["T_n$f%j\@.l8NL6Q3X]f9'@+[\D$Sh![8\IR#ULM`%1(!bZ?QRrU2p:@d/,ZtHfP<Db6^];:ViAD3YD:IUO'_5*\S7cg$K0DlBdYKCVRo0%k9-^E;8.!ifNsBM<$e(+J;Q?%`s]$dJ<l+LPZNL'(=qrfLhG`M<eE_"'u/780u]>?5p/R@IE$;\*KBJQ)deKaI3@%7/+r&]<2-ne%Udl'U!V]3:Y;t\pNm[f#H?B0QpP.gX]YJNP3jY5JD/;6fk6g:dG"YuQ[Hc+B(5/mG_o_T2BKcS$7jhRmYB(<"rlFG#AkVrE1'mUi%*;K.:-E2VE@67VN-."0ipI9qJ7looK;Yn4dFD68J&f_`28_7'.=\.]D8\1d^pD$tr7&h).9;PQUaaV=Ce.A^Eo)N)m.H_V0AN!/c%NML>@Rk%)!P;hbNXVcRn/<Nc__usnO@lV&o67uJ!'ZJKL8a:S(2&!Nb%i;MADM]q$WIWl>5Mum5MHSP!XADUQV2^4[CPsFZ7&mW]%RRe4"l&rDUXmjZ<Mt"uk`?]h"-K7tOV1tCkNf>fP?!A0XDJ)U2f1%qS1PJg&70Ef_f1<3OWR-A4<>p`?j%8HLN0]>]d%l(1%7-^=%(WuiR$`WMk3i7LJ/5*=lLl/?;^:9JgjV'8^^22Xp\i.nR\6],4!,8O%FKN@g'%22%Wm-3VU<T=@(m+FcrLgu+!g)qF8\P+g,F=.K%@OT']5RO0LFeBqWVCrZmo5]GY,)9,!.Y9.0C0=-<eeOSS@ZjJtP--!*4UfGGg66%Xb3!pt#$')/%(!5#>&;c%!UVe/'h>*!#Fn9c%jh3#J\#R$j@d-uADOfku<T<7B%eL<eL%g->D?/?>R&drMNg`Y=qdW'f?GkH@/.L..J=`7TB*p2_3LLrpCE^*HVdKW3Z.bD3P>,<U%Sn("iPIh"3E=:m7\Ni=r_g<6D..X=;.jR5n$pH;8(J,]!I2CE%!fOcO_eQ]3;')aG7d>e]=7)Tbc)NFf"lh>"ba$T[7=RDW;e;#R%J`Xm':ca>eY"Vm`^FPR8A!ejDMFfraG%Km\;9K0[YBhi#ppL^k:8Ti]OVuA$R(jo!4mea2\Rq%@Y##ndS:p40B6&0;ltj#o*XXTB%3g5F'=P8-BR`XZtl`#!S(6pEgna64_oPC`3bi7*D<fjkOm4BDXs0Ys8'f%nGAUm$jPDSZ&\hBUZ000:iAoiu@o;]jt!#g3XP&[f2%hi?g-$@8]m!%V#1JCRK`!*W%'feBUBMS;J^'e6P0__AY!HFD$U(r6QU[6i9lT<JpNqf9E0eq#6eOAFpF52a,*0hG>p=taIH&fp[:%&TfRfaf9)Wc;WMoA24OHAkOGq'u7U8Z]M.!'RX[FBGYJN1<GNCC2GPQTT'#A=4$e'k&?_4=uNX:8X$Bd=L$)d1;FV_@u4_[Bd3fn%-s;5I;H[SRe/W)"$Dkta#,0Dg]SJC#W-mI[nKGZq%!'5kB`SJ6#.G;IreHmCWGpLfY_PoMEjdC&\TkOa5f%%T&O<($N0DCP))"(m%H7H%T_l:R=P=d+,rfJafEfq0e'j,L$M?n/uFo0G[>puRu$&ep[YOWB)5que*$!t"H:?pmQd%$pgNetn)*&ilqVpmDcs'/mN?Sh$[%7`$c<2Blq:+okB%HkR@>$;-fe+U'Bpe2Hep1fI=!87c+:H/9T?1Ficb\[j;qg,TIG;@=K8KPTt(=#^^A?J^,B?n8f[U)[%c^bomM%/^nO)b+]i2.Q1l=.sI4#'FOlA@ErH9J7''h)];@TC,XI)5boE9;Y%r470KRZpMAetKsam"4(`!#+=Mt!)U\s2"=r3PnF:VWBCCdE%#he.uZ?H3QKN*?q27,RhZ]d>%c6n"m4P\j.Z_&'Wi&\+&nrXYEb@6,k!JIm5'?NOB2gi'..`"ZVStu2;%&)%Q8@bj[E;/#ZYn56X%j7h:2#RDcK.G0J>J17AD8g;3bIpeepZ!:j(88pJo,QG6IPDGk=nd1V>P)D[DACX[;E`*-uHkDs)Osn^_qHO43-3T^*cs&,D_GO--%.F?4MD0-VGjFB*_A_(]\%Kr*LS5dmH&Q*igL<BT8hPFg'.VBDD=(&frK;d$r+P77LXb<M*b(M[^65W!YV)6M_ijq.lDFVVmSJ$U,%SPb&Kb=S^q,;=?!OI6<j#,[Ll)tsPg't."#@.l?6Yr`*3K6S\L84(6QYrdVl%UZ<)1_YGVll+Y^kV>pml,I8^.eSOhE"^beK6(or%?-Z06-cXNU(2.rV5>E3QV2B7=\2DqSaQ#l@YA^L1)Mf:hAB)b<Tjm1=R,d%3n7oRjCK8nLM0qYqrP=^LQ@[0)^js4TPL.OiLJ6$-%j'lfeCfaP*Cp%W:DB/<RHh2[?S*_/_g;.H>S#7^"MYRSggiS%!X)IHtmctp&HJ4/#2N@@k96!-6Tgf/DaY<Aj;$`d%DmU)c]cG;1%QJToq>bSV\7/:WR]cG"uGo:;"(u4<s+7AN,P*;S==*Hdno/1BLTc-\M"+5JUl>Gc$qMO6Q90m1+gD8Ge%Mo0KPJtetDQ^\f%5SI"%_/nk<fc#'ZSJYTfD6/:)fD1j)`Nt,pODi,WW>;XbWOHq!]%#J@n85XhgYAX(V_>;]j$q7MY-*_L_Wsk$HnaBGSnh[DDAGU/quWj-%a(f*D:(HabG4mc;icY=DL!]D1EYa%<g^+K:#&8csiES`XdT`?[1sEoOV&HgfcI3\m`7]-+BTlT`kR=uc`n'(9[aisc:t'MCPUs4a%cOABCG/WFG/bgpJ)He0=`0a-5+62slL=Q"InmEZ/G5!h=o;uXuJ`4_j*Ct[$Do^c_?/t'.AsR`FR<[2(CY)+4TAMieQ/[(=@@[nh%ir`iX<]d:f(_7,mAcUT\VBeB!'8cE^a<(NE99++>]PYbuRNL;(4d[=7pP&l5lXqGZ,$P'-19ejMGOqNpEbji3@^2J-X'\3<G%]U'%6eu!?4WKVRDO)6f5X';q\!f=\,apNG@=haa*sqgSSW2%NeqH6)_SHK#W"fG5j!N@B"rR!G[6*(kII!D_$t8X%>@\I-7a4j65]l1F%f'_rs)\qeok`XYfmHX%/S3+'97T(BHZo8n6,qK$E32dCmU_5q=\gAOrP!NYqD(rVS=<1-PH5LON3u8E$L!R/]fDS&uO]\]a+ipc[%O*C;Q=1SK4S+0rqX<Bb?R%e7Jq>l%Z^)kcq/4AW$HV+X'YghsVFEpMr9M#'OrUPK`B>a&!OTaYkBK"Gsg0NSjMan&]>iUjGOKC<)%Ao9<VS'Q"J1[QEn4_TKO2O3I@i3fr"#.*<pOd5d'C\]US#nJS'WlElBg/[]3_eCks%'o9Y=!*RAm<!Dbg"qag@U3AVYZNAfV-tW,%I$Y(e/mf"0VLT]AnYH:V5*[J5ACT(qCCY3%'+9p[U9c/9bid`:jB,K=63q1Y_MmHf^rddVUoi+X)MOV@j9lKgj'u3cnULt1453,R%dH0:W1pfFPK&iW56o:.\Sk$fLA.8<dBs)5PD4<$cG:`spVs:l&1t9#9(!4jBhj->1:lTZc$UYTnmBbJdC5m1Pn?&hFQ`F=(`RYO]%N.E2o",6)f-rifXcrt`3a/J.sJUY".*Qe#pD4nuabtu&B>.XtT#%aSLB7V(u_,L)I94)ZbYoT3:*=VgD9O.c[YhmmU"f=bp)ne%+%"0lN-(n[jK[u[moRO6r0Yk$:!&WNqMf5=3gM,b`$,+0-#Pau[_4ad?[\[E%l\kB[C(Kp>_2?_%RH585hcnO(]O_NB1pSLGAgZh^Y%JZ5Wg2U1SU&o4=7;eBiC)40aAaNRo(4JB,=L=ZNL;IfNfVdT.nkE4$Y@(p3[]QW$B2sVFB_s:6H/j.cK2qdB^)e=cgfj5R\c%<KA%UD+0U(Y=4i-[#L2kWBEK*mIX1QhJ3_*@ckk7'8Q0D-LYi_3%3J@\d2^rV8u95I$FaJIqSLJmY2Wqur?9)N_`(n7eg?QM'OcU-W0=%[<41!;DAk`.\^ikW/ab[JVu"m6;dMn!r`PM+M<N76mF`l#Y<DS_@eJ>67#s?d1qtH_'F_2.i:oUl"7Cke>-?()[e)s`_9JKYX7'#%G_8!\>7C2gCA5U.?*LD'D'GVQpF9Dff<G>Io8M*i5jaJQT^7Eaq*5dO!Fnt3U/,2u81Ek*pnVO-mZmW];!DlI5Qf$#N2<4$%Yb,:%`S[D9UmaL[(3@<j//H.7?E'Ys-F3u9-*o;?K0"0hqE/K2<4u=eU8fK*F]5Gq^F;koW/2F'\m(40[F^>W7:eurHrMih64/\a_H^(p%hdNoF74GH?7b,o,brTIE6[:sKn&AJLPWHt&C[+U9'mCgU8>ZKXd17\98!S"V8iI=OB<Wo7ZWS^8H*91i0\W!L\gIQC-$Po/_T2dS%^>Rrc[NjPBlN;%OTRSc`k(pjp:'d<bQ>er#g'1;rE!o@P.97*gO<Or`L4WYDE7C>s2,;9C@&[-fj_<\NJ_(]rZ0"oHem7QEd*-K%%oRg`t'EZ'HYRO:[$_=j=&bWgn9cd\N_MRpS;DcTM:^/Iua22dP_"RW&_u60#I:-`;18B1743Qa+q^6_P]mO+1YdL(Q7=65fKFX=)%K*>\WQ8-4`NGu0L19Bf@`n>#/!Qihd?u2M3Cj6BlTdC6,n/$Ao2/Z)*N2P;pAg3%Zb@8aUhV'b!gQ?ne+gr1o(Aa>[2[^Ro"Q%14%W#/Z.\2UA:cCQ_5,+qH^\_7o1n'X4O=;:L7O\jObae:$Xc\>qt^00[MDFGcqL]f(cOWqk_,Je<L-NR"&Y!qlAN0+9YWl?VJ2Tu?"%SWU6B`H1S&LK@6'/(bPCj6!8+P!e4$n\V(d27=?dPQpiMVWnraj$cJcip8Z:,>0dHmG="h&Gcs32:o)OorJ]"!^u5$!nH)1gaP=4%>!@X!]ZiTA5fW&ZCg^q"XoYIs.h\H[k_j$]m"5WS+i*u9#/Wr#]-jE%5l@/>nu<$>DC(')d)(_e>,/,Kh-r?'4MPGo-k'$4(8K,a%kmjN&C6[U>89m@QB%;,mN@&V/jHn3tLrDnOLbBEo>HrWl[A.:A4senrgM$^k96(R]/j$b8id3bAk3G9+ZWX>fIQN@KddE^S^gpg3%*0@G.4OlN!.q/ZrC[a!#GtM$KKNF0!pjjXU-q5Q<4<[QDp).Au%\fk2'k5;/KSXb*1a"(T9(VJdBJ.pZA4f.>Cn!%*3kOGTG&qX`%+Ee0=Pm:6.@+r<:o2@54@^*VM"*!#Hg9K5CaWo"eDDU)FN>^#N(q1cR`Ztr"YZ2e!4BpRsg>06DU2/LB'\jU@D.r;X>?<\d*KIpU%E/X"]<?K`#Q-9IJ:=bGt$)WnP16eeEC]Yq@3$'Cb2?T*:ekRG.%Im\0N(0/c,>HS$p]*#;IH*<4+Xeti-s>`D_'"PcejTPZ`7Y-,%RF^NsasAB"b)ke"PK"SWDnd)rOlsLeqCAG<fl\[rX!L/kh#S9;as['Q6YU%gA,YX0XePWDWR0d:#j=9-Z<H+$ED4p>f'`@1(27"Z%WdA@t(k@V"hOU6_;BEiT;F"@-D>;3OR5QGu;_Ut=&$PkF=j53p_0geN=R>?Q-E'K4?u4)C/SI(eL&e0L>5PqW16aE?9D+oo$;?.C%-c<ZTKX\GhbZ7?,YuJ9Oq:*F`M)cCe01O[$,GfqS:Ud8s8P)/a]6d"';_USEi*?NXeCl`m4&2br[fdSm!We^b=2RBmfoFGE<fd@M%"?.5?LprCsZ7/]B"XN_WToI<q(V"+L3ao<=[h)^6'-"a!=S"2Ag<XSWU`sSQNB;GVL;TFbWQ'\7kXp9`7!)uk:kZCE207b9gfn1a%`&a:alj)oHfO1-iDZr%%F`6bk`-$BPo3S[9(iK_a#JKNHS,m=c.FarG2U@F!JbMPZPR#+.>si6;iP`1WVIBc.o6>eE70AOU5`%Q?%h4piAs(6:s<Gj"[Gm_QpY81e_@_$\189OuS7+XrA[6Dmg2$FJK5(N!;?OmPS=TUmN!H,s86'["s-f*18/YJ#3Mh>XenX`3.4>]kr%.?:sb7=,Dp_rmg8XCPb^V'qS.CZ$HqCl\Q7K"3e7Ce0Hurls;fp$!S=igeR]PaV[6d^R.RqZC[7dX^1EPm1Pc"_3\V-oE"^n!J65%S7$%B78J040U;aNc2%4kI:lU_RD.of['PhcW(g]MCf(g+?_UWW4<$fn,n>t=-Dl*5[%=`pR3+Dl_^togCe(G5I<I!WcdHnj0GVZp%M&aKPm0)*S%f".s9Rk5\ZniURBS<4oMkd+\+h6lHU-HuhUnhY=>X5gq3^?&QUR0.^bQ4gcG@rpSVJSqFVn2*-e4e1hDeF:^9OQR=%e/;D)@P'lX^dQOSJ9,-a0h7=jrUnQ7?tf`@nugKPUZ&HiWk=0T>Ar(SeIRnAA(.@lQ9A4`"gkB_L<foPSItQ(@!24@3p+4)%o%a9%g#?,d^RApESh"]VZu+-40joa'-q%6C\94op%Xr\E/&C?(R>,0JV$i62f?e8(*#i-bdW?<E@G2aZk#>A3q=J*+E!)<C`Dh)qYs0hE%q2SUb*7L$T*nrN6(Ed4,!ZM+dVkl*d$ApF^<BC<\\j/Fl>@$l7#;k:A$?+FdSHlud-Q\+cc(+m0HZ7^^q]3dm.NTWNR@XMh[,27%%HEe!"9W(/C-kVACXSCS=F[1.X&bqZ5X5UlIRYiYWXt>@ZV_UHD=h#0oK7Z`M&[W'@MdIT+:bAIW^OX=)`P?.FSeKGS.t_5#1)%IR%N(aD"EFM;=Ms%;`"MS_&%MilRIOdZ">JbrJbXa_![_C1$L'7Q3*cVn<-,b$R52.S)Fc7`U/T;(2/MZ2)1sMH5&6rL_U_/VP-p1VD%:0:n4(J:IR9ls/eOT=.B4rj5(onf-Ya[T2TZ'V`J$,2RM?V#oL>s/6mn^+F@H#'l'i"k6;'YNCU!U0RYKB[?\F1Dc_R'H181VbLJ%NbBe'0sD+WK@pGXP`QY*(BTe9\TPP17!0f.R\"7l&8]r"fA/X5WWBb0`\c.&BY/++0K%s`eI44%/+J8VF"llq.D][0Le@-HiTNn=%IU2W2Zn%!ur.;-Q0g3,UCA6nA\F0RDS;jMi/\ia2!LTIb>LDR!))8GZ%9RrW>^%e$X<m)^5eX9q1"fnud4G?*0@=G@2[.`nKF*9)%+)iQT.V<De<SZTt/3O4a3NDl4L;k!/]ef?r:+2el&TK[ih&L9Gm4KrGZ5nS['=_/Yjt=u)o6bM)XS7Z<<SuZ4`oICN\ruc.^h)QS%^&6YT,Tu^oMK&OK)taVcB0t\OG!TDcdUEE`.uI[+cE$$D(d-GZac.=%on/s_&fp;7A6rI9<m5Ql-1'75;"Oe_L#[>IE=rDsPL4(4%7W03dfMk1H$o^5BMGh'1]eckG=qj7I52atjDJkaAj4lX-Qu)'l0#U4P7Z.GQL,DEZV7MqBi:YWS#<g>%@9bkjd[=X-fh*O"RH^Oc%JaWp<6]%b*CuB8^5EOqPD_s.FRn#")\i"K=3C<nCQrnm0cc2ub:!bJBSC72N*#PpE2Je$TZN6#bEIOu3q>=`^X^/Ws9``ns[_BHZ%@HoD2GQP51%CS!F`C?73'ltXi0ZA@s3E:no&rAU;q9f$^+MMnE)Aqeb[>u"o=aalpNS6c[*f=fg>>kG[hap>$ObNIZLm%V`%4kA8%@D7@#Yn%-C>2pQ+i29WQrR#R5!#I65N<@eAaW$7P![BCBBF\p&FF#5<`*QE1Pn#?T;PW8p^`SL26"H*k%r[,LURRgck>V'$hPT@u%_Ro'J7!<g?leZ@4d\J6&O+U/t_i_C(+:,Y@8f\PgXNn9&fbE@HpJ/n>G\o&n&Nk9?]>&95-+BnH5qG"!%$$PV"+o@nNRl"[Ceo;h%WM`TNKQ;O#)YXr@Sq0uk2a*Jr,Dh8g8^@STTJeXuBmYA]F!N]NZQ;AP(Ng8[m=r%a@(7]?\?M)%Y@j2*;$+cpdnPgoXU"e4$A$T$%E2p,&b:NsR(7GDLoG*'a(.S2c.?SKem"hgOc*SGdU9l]kaTBZLSMphCd`s>4JstVt\"FsKBctIh"gU2n5MY'L)I?%\".QA0/Nc+K%$S<KsSf(E&YKM3P"4)'7g=5;Gp4E?/*$^)M!Vd(%ZOK*_+P1't(E4Rg[C-3sO_:X7WH>bT&J"_2H,>#en*O6NQ9^tcY5ic*d0M(A%D_-tZ,bli/\/!^2kihD9RL\nVJLN@e['9bnrP2sTf.T&e9ZgH=k[1>'FBG0fO#H\@kLAli^=l%rL>rJ:)r-[%IY!C+H@u4A9Hr%1%DTq5DXo0:uE<Pp1[3`O#-5sN7'_/H9Tb\8cle?PJAq#'.%q\5c,lQG7ALA]+pFs0JF)[IN_%fGK(naTN]LZ_F")=MVe\h"R/IH"H%W3gIWDZ%ag0]TTCD%#XsdL*TPc1Y\F10a!0d21,pj>3S%VTaV8Q4)R)W8EZ8S=MPX@*QYGnqja]<-T/`dchCu$_5JR1mdt*__E=U%)o04Ra^P[;C>NQL1[H<=*/eYZ#Agk&bE1+RTfANHRn4pp[Fnq?6O2T<lA5j<6Zg,]lA6Du.PPPYDF:Q83gEKXO2*QAPsIe,5]'=X%:hrROZHZ</#XOlL>`aNqrMT,l;1-L=!'Ie*=NfQ25Ct4>LJjO.jZ9=VAsFd1X&KPbE2oq4"g@92(9eN0HjC/ka-:TNM<S/3kP#3\%(9&a.pO7fp#-urRYEQJ'Es7?<@0<9`c"^!>3CJU?gjh'95mLX!'#9m1el2,DEq;)U1>\.0-6(jdB=F)iGT1iT4/=*k//2%XW)Q4G%,0:3V1)n<h*MHO+"eFk7!`B's^"N=L`[KIh!$(u?0fcXEg0Vt@;JA]]kmEZ+NbE?t+`5ml=^$HrAM_:3a8fF)7a.;R,`sKNkmuiW%)bhm);jn(e.TZ[\W3KQMG$ZtJA(brrDVS"ATj\8,LRqKj;-BHAg2lb\#D4TZO\mn$m1H-jDiX2F7(uqt1TA5AL;<#+@QAh`:b(^[%Puo'cFWd+3(r"W'We6V>]2S(=63X/0QV0@sn=%1W/o@kq=RkMh-d3%<o@^NREB&,kZGISQC$:3T$k)0k=bWtS%(PG1LVBLX]8l63%<Bo"PlW-OFYl0OrQM#hEY*b;2.nSkg-4Zj-^fgsE@"#FX-""S_l53$TPc;Kuk`_CbZFErOnJtYhXXl`#XW=jM$p^40YrtKfhlLuR%!RGb1Upb"+KGoeh2.!5LS"U=GB5/+,i<%JsX14R>8VchAJ2Cqg$a+h8P8RFFFq<q:/E>054ch%o=902<;4i4<R*Pr5=kG"pX`*S*%CrqqE/t`R\C_BrtKGleY!T-D7dNN@H!G"gQ%%+t<`@PgLSoggU,t0Oi3d*a#9b#`_TM&C#$DmME,]<[c,c3ITC,6]2#)F@K4[=0r%7@u'>8sq:+C,V\oa"*`Wj`Dk:5rg"AO:q**ccQ;\o`].-2[@.7_f$6>#M8$L2/#go-)N'=>.`JW('sY9]88r9A2!ec>O68fV`pc+%!\J@!h"Ce1WI`X:1tDG(P+d9;4-o,(c^\2IY)\GG!c?V(CLf>&2s9W?/.;Olqmi:pFK1+alh)&U$_[4O2UT9#(2E6i/CJ?OW-OWl%*,h`YHY1k,"OZ!I^geD\d!FU&g;)qCe9&&R_OSM>rN3tkI%Dh+C0MK:K=.h045I<9"Q?D$f6SfkAno#2Q`+cU4?$:+%F-b_^MD]$%?l<Sa9\T^J(*m)cB*2c%73*l-/iA?^VXD%"!Mma&o,!'DWi*R\)&2_>!ScbS>08l51\n@k@>OD/P8LX'=eX/)8,&$j4J3U\d<*$:%K%nL&Kj&eNoWV/Dj3h#`a:tSi#XXH21>.N+N"se&r6iaMU]o2L<Hb8d7i7?)Pu3?\R9LLqBMFT^f;I6u$g'uACDRBO1\5,=8B8?2%]%]T1K/IPQ^:&4'R8+-clt/mX%l7[TPaS-gU.!1\!@bg9d+1W!>Q[4<I)ZRD&Y5@">9N%mh.)Y"J/-L4U9B#S)IP;cCL*RA[qT6p%2eP1OB@"OV$0bPjP@7/LNab&#O90u<M]ef,M_qI*q'BeF$q/fS5,u=cVJ@I,$BR$r1/V6CN*7E:e"_%SV#+?&$IW%*\^<QMJM\;.%1//a*MR3psU('X>$\Lj(aY(kOc&m2#Gm[8nA)7W.^9gMDRlrom94g_!4$2AhV+"b%qYHc2!cO*`R9q566_._a4fsW[Mf.ZNG[*[@%j49)c2Do0)ZuKV5fk6!q8bA"o0:9*?bUcWOG&R1h-37:6BBX-)WGb4;n@[@_5g&M29ho)lOgA7h*R]XZ@X(/6+jq-Z'V.frqV&]l%__]+M`XF:N]Y0oD6n4-`QIi4"/d"Zd9oi&LBXLBdRMLX*^22X?l/W,p>9Y*U@tkg8.?H89g-pa`)OP?L5[#X4%ehRGVFY?U@`f<t%NI*.#`kQ68f>Rc"B"=nq*9j][1ukPudpn8WeiV?Z+pI#$7lq[ZFOXM<9b@bM?-DA$cO;)Fe](fUAk9bJ/?RH^=S?m<4l%r.Jb3ah%Z+M&ab`Rpof&^(cECWRY)Sa"iX7Vq&&o$2"Ef8fpBkM:"4s(g"Jk0)T88Hua@?g%oXV3bU!,_Und41F&b`%3s95H=*h-&^Go*?e4%m61EZSi2Y;[V(L1L_P/-A\'qaGE8Uj-32KNK!D591H@cg>3or\bc,KS@0J.j[8^ra<0>bATn+%.,*D+<7-c?^L$mZlUkbQI8>@K+%.I?VPB/.gUEl`#]=uS;uL!;uES*l[c*nIl#`Cqiu.`NW0U9(7Ko\";,iQ`3hFKj?;hL%N8.aP)(gL]51/L:n.Rm"efl1fe\nnDl`%=#OpeFK@4#=T7mS7&2Wd-9n%Po*'kqq\S@l1WERO(nR*u;4j.Ino/%qDI%Ub2SEPjP\KWT4d@urN0^ot=kB78&Oi1eRusB:e#A2j%W62BNkP8R+,u89(oB#+SRbs7"Si*Mc0s_HAWDC\t2VTq:?sS,F46s.sg:nL`HRa)QJR**"Y._4()7=q)ls]$mSo-),<K<>-#Le$D%\+N[3`Z)75g>uP2[c&&@'H+p%p6feZC]/?sVnL!&A*o8dm##BAg;_\T.mI=])kT$IFDo8sf8Q$!Q6O3#.`_&MS07rdAnFB<59l0O%Bm6_j1C*9q84G?tZ&,.GD0<'QM%0<nVSZPJ.-Mb+GELB&#:IDPXcl\8\$iOE^@dJ:#dYroSN@cbW::g?U:s482m.P/pSYURR_^,t%7=[PiRF#*NHl^be2<L/`L*@X4?b>Xg-5=KEisI$%H.CjL7taPL#X.?CE#O;e[GGVP'\N##dbp0XBI,;F6ol)S\U#+U/6O*d5AQ"\%`f9k!(X:?>IDn`cUgo5q`]4tnd_<((BkM9=6E9fjb[c?l_.,$m6(2J'XB1N.mpA@Ql]AEAd/-TXOMWD;@doPhYBm!ed?r5m.J!Hi%OFh]gGlOhE5Gmm"1V[CO[',%e7LHhY"&]gZ8YQ?9MO5.,$#??RR@tL6UsPm`=Vu[t!BtF#^3M#KWMRf,#`]B,AoOt-3_3_fV*3b0%7HA9aecKH$(en%%VmoH!oVs6M]#DCo&Co8t$p_hZR($hLm^>ZUk#]XY&lO=(@$Bf/EEG,mC(ju)$hU8QQn=iE<.JmqQoBgDbQcN!%cqf^R59"#PU=:A3^n/#g5XWdu@nm5rm+#\+T\1Oo=gqW6eXc:WVBh3?[A,3(!!\,MmU-SD!Mp>IoPZ(oDYOUX0+)o,[,tKY0^->^%R#EmZod^I#Ek].Iig,&$NFXV4JpA2,<4$%+<'Anm9t%lFMqX\Z4roG]hW'G$)-AM29ZqPM.lJ2Ej(bq"d1%*`_j1''J&/reR4HGm%CoUE(cuT&WIa2\<Re$HO>i42BK+W2ZIRNa3ElLd:CYVt7Z>6PG2-Z?M@gccnmTD<N<9W(pABAlBiN$te&*K'rA'+H`GBKE_&,@!A%[g[5)0ekkSZe[3Zdh=I)*_j5[U?PN2,`ppTD0[-('pA6e-TU=)`(jGqmijHO*\^Ecf?0@V'<pjKD$o_o(;*k3:eRYCOLa&Qcq9gj%.i5R<Dr'9^f$cfH,0_c!XBoa]6onjE86\j:0^E$gh&gBr7c-Vh,A4pN4a.0?REoRn>u<t[KkZ4T-7jq/==<Fs/_O%^G01Z6=ZYc/%KViP'06\D6FNc$k7g0^I_-Js2e@Jaf?RsPc3R\AM8,&a%>&)WeP$oUNT3iX4GaP68rK=6)>,3haMcee-?01$5^F&Sur\E_oQ<?Lj%A%b:93:/AoCQ35?R.k*5,F#%?qDYa_?0,C[c&c<t;)*aV+7#ugKfM%SM*A3kGV3`uQI,Jd1S7N#^0<qOITeLG;-Dp0+(%;2EbSmn%V`oo*DlLpJeY8UZX[u.9=cih<^I!tpU<Hk'RAA4:7;%V?Vg'#h&Zk'A3?CC^1VYmf5s&]'GjU3YVQ.X`<CrM1PWik72<Ne-@jXn^%qoLR55<24#-cbGaE(l^d,sc=1/AEfVh<64!9sMd2]jiNOQdF@oCr`VE$$/6Xp=)-HYH>0PUL-7+mp7N&4UmZeX=R1;l`m>B.D"oa%X;V?!Brm1RB"S.m8]Ff.*<lnKNZmW08d.A\EC*8T+eC,+2/YrW"k@`^Lr$RM';G8fQ$?1m;iQoJXKL3R:/Dk4Y90UDX,4r&9f<m2%S!lIu4AbOdOOd@)Q3nSMC(OJn29lYuL";+l@qIp+'P+2I@l_T!OsF1'1SXTb!!#g2m3ph8@K;^OT#U'TI;>_/4Yp"]c7QIu;Yg6r%<7n:Fa[W8;nDji$P+M#EmT$3Aoqn9?Hco6\%t#p;EZk>".as9dn^Bs!OBKfA0h\S*Q0-4EAf4R<*%\$<Ni8Wj`*CCq=(s3Z20ln&%6+r.[A4YcTJt,cf$Q@jJmV/m7)P%'IK?/OdO<JV*P2.2/qsVP-eJLA\d5AqMQh1L)Nc#@GVrd485!TTMqN+V(Tc1DnBUO'8gn?=;%B`#H'7`GY[ipIlZ5(G6Nm@FL9>b<_UU5S7.gp+uQPa_`17@.f:44F3"25&`dhNb6o5hU3i1'TnjXn@&%?#E3(#4]3fe)PNoC`dS9%+;$J+-:6(ep:]cbDFcts<j513KXaUs?IcRQ-!_[>8=fRVmuT$@5^!R"hC]4%qfo5l[\Ku&YtBu6*"9<mQdtk@HLC!F=`a!jnn$cX%(#B*WTcJ#I>.rd\FW?k.<^Xg7Mk"ts$km,hq=&3U1KX;A*Ghh5!<[>Ue]dF-fOWW:=)j:EASr,4;H1*Hp:5E-C/n&TMR>:JUCSVo%Z"*o?;=mZXqKCVRh+ECT8r^G\4688*p%+c^_J<C"XK""'=r]0dH49d"bUT,UqWs2rdhE^:MD/g<MI*?@]3o,#2N'a7CO?mm"Ph2b%Lm;0<e't,6=pZR;Ef1.Ep;NcBE@G_kGnhu3[\Z<'2l+Z_6Ot4r2J`ds**>&Hq#rZ7<kDFk2Q^/i^$%Ws22;sl?M@kiHad[-kO@>V%$:N-fXM(?OoG101oJ3SPigBNCg9V*1aR#(#\tqdcN*B&X.]^grB"@HBRJg<>m@2G$@C2:Y?I:Q]_eEj'c&?Iu]7QFSNEIp$3]44K%9a6UE2JCSgF6)[je$'(\]fK0VRBfO]cA[?P`b+r(g?VqiDLfMDm-`SI*`-'Q7o;?+>E:8EjLV4MGHl(sC=p;l\Ie1(h^AFFfJ3E_%,JF^C,]iYmR.X^_gBT5dk'TCID-@N0[8sKW_<se>B$L8Nl=Vh*Q?uA@8Ya$2ZQZ!]FtRktMnsS,q=eL'.$6K(BD8a+EPUr4ajn^l%hX]aYgmhe*e?4[03ub?`D3E&qX]')*S\pclT7`!3IZ#AsZ;O[nld`HU5eCXs;*+Dm5uX9G:+X-nm08Peg#p`*p0-3ib__53"dc57%YN-_g\_ZO"<!Amsl<<!Q<H1*k?G,WhZqS%"\CaPMCPD>9Brt4^ZioPabD@\/ZVEqMft!u@pX]aaBg=KIW[oXkqmbAr1hPBgAK*bl%ENr]\JW5dZ_u#W@=XuJS-`\jhq(>'H,lM>EDlqU//R/^oT>910f1CX],kKOh7$L&qYhQ3..0]F/LO&L46?car?XI($_[Fk[a^0HO%3#p$nGHIfVkj2*l5s)LsBB\\Xd,@&dp3qbA%&nQ):<E4rnI1ue#s.lMl<_f`.J&J^#s'q2ZF;W3p*](Rdt2p.6YCn#cJl3=eS")L%D,8NXVZlg<L/'t1`cGteNB2DL6YCn#:349i:M8lb*6aN3HKD<Td+P%a6U&9PL1KV65[CqC6*G_J]_+jhH#K<D*8m>4Ub<ngYeFFV%i2r%F(+a[?./Wi\SeWqkHL:K,+k%AgcM"jk]#hMjqimWA.BB*):%k!7A8</+#+Nh9a!Z:6ReS16QF,@orsYCoo]KTB*]iWE=o2^'%)NsG_4uR"'DXMR6P*=+T%A+U]RBt_IjA95/B*TuKaCoc-=#`HFBaq0'<Y36&SbL_'3Gg<kD;LZV1>Sd-Tki1s"Y&14#nOYUm_ck/%Sa,StdgH\u<O$@MFmaCd/SF,84'QZSCb_NfE"n+12-(mCX`<)SVVd!U;XQrkU6T2.LGh/-(A:cDoVsWd/6^RI;k##/CXeA1O7bEA%]%A&Xb@W>1RjQPN<3](91?J?//Ko&s:/nc5"aW%=^#\AK'UWp$YEIZ%r#D?N%V'q"n,+/-L%?roE'5[BQE*-)55eeXh)&9jd6b+p%Ae2O8Gg=T(kqe\RHf,nd/i7/o*KHcf3PJ*u@]BtDF:3\<hVV7AG"6*4*dHk-<S1;Y*QN!BbZ%/8]4YR03+dLP6=l/p'#2ER*Q(o*%.QFnB_/4jn.gHQ-Z+K'rfrah2(!k(V2ZXkrE0CQt/'$dCoW*Re#Np93[G-/0_mh2Mml]5YGK'F'b_%Wc?)`[<=/2\pK#W/cSJeDS%<3G3dFVel?M<eXmF1$Ngga_R&.5MC1dMrL3eX_iOmd&=tE)rP<m#_12-\gR%O;lgKOX@-"k6<E,MUdKMQBF@,AU;DMnMnu26i(cP%njHHQIc((.V4tT=TiMDVS(Jf%W%u%rIE\k%ac%Li%O-[U$5X_YG75['R^j?82Bu^UQjmY<FE+-E\L],-Otmtg0cQjebK*fR:,a5P%X,^!PN""MbDY]99G77O+c0$W&6T;C(RI8_,C7!ZJi%?f@ja5p:jtuL%7L!soCteIjU?t7E)&XDs=<9i1Yh-.#7V5KN#J1MecmiX<%C)iejgM99U`XNg'<e!6PJii+MF,Z:Km&54,=OD@'[:e31]pD4!nY!1o%(s.I>mc5(_@5flW?VN.L(#LOPME[cU^lUWa(a.u,[29V%F1>r1rqMjmho/pIeN):i>Z:H'h4F'Eb729Nn@RS]V_Z9K==^:b.jdP*GPGHY0D6t,>P1**/#e_ZRHS`OK./2-pA6tB1!f<5:L-u`%i@<VI[SQ)FT^M8Kq'r"lF1O_]Ds-*/I=9f_EI6u9M>lo-Zs_GIiN-'Lp@gZh55SqS&\$Z\i=%a!?$ghikMc'B"DHr#s1c6#D6%DQ%f)5dD5CeWC^go:DB^?I&>u$_=He,Jm[^lT@e8t'REe!s\[Af,<_SkWJ+3r`hG/MK?)+c-R<)oqYd<N1NC>F$?4C1/*n?)03Gd2&U%AgMuc,EX4j`J`"/'DZ_ST?(>oKO]EST?cL23HadTq`8qG4YWS[)*K.@[PKhD`U#OreBUohR>gTo$Lu/tjFVPebsg?U^'u6qDS/8O%H8n4CKP?27+F=Q9_gibQ)ih<!CsLth0N1Bh(i`k<:=$W`T,l$2))pNM(oo[*@AGf!_YL!I35a?;D8T+!e$9!a4%J1_6eX&u1\WfG%<lXCPZfep9G%QUA*u=3u3=If(rn;Lp)gQ1`5)1S<]2\hRaD3IU\\q1N:Ua\[5EUcOr7#t`N[%&ik,2eu,+U;02*^3b<a>d7G=Mkn%*%`B-q$BKc5!P0ceE81nOo#!/,#Y&ZSd'M08SbZA1n4b2EEJUrZ..H]SM\^kQ%2&hI"9JO%4?hGTf:KKU32J.$AT<7:!=7ZKgU`G%RN\TZ>bQ*mg+DIrKc@'oSnKP-\9%[\6fDkTm+GjTNtVlPS(009Z]dk'!\5,5#X@<:hX&RT&O%52M&&4V(ThCfU/,/@_bBS-K]oh#%M%#Fh_ef%-CRuN;aZ'0dZ>!$R?%D^f#tLRi&\V=/2<0Q2I5m#d542dV)E2[so,LTGn;iLn#CjEi>^Q2@f&HQ!o(D#=+762LTYPB\%:YSi*4T'8;EHS2Z7rN*]mH10<p]l[k[V'\KcZZnD5:(;^LHk>U><"9q:i`Ik$a'(u9gZWjSXgJ]emGoP-2HciV;gNBUHXPIG1Gj+%:VZ;q1G7>Imn(?5s%\HUqp1mqP?XV8"RKt(a.&W>+8mlB(@/tMo21LddX$;5FsBrPL4ES*IV)qWg'r5[*rF>MhTM*,m'<`OqfBtO%X4(]&m2)tH"hRKcYl!BKNKo.Pf%rS0qba9rqe9:d@=Ma>h:CN>fT.*QG^<q@lphkq]iooKbis#gG(0?L:;k<;h]MPR:QBhjorn=H%WR!jFk3oKl]m)7(8cOY!*?Ug`FS,-M7h?Ccc16>H3/+VRr>K#hBa0pY<.Z-16hJ^LDGHJW`mK;@[Pc(kAFD'].f)$):=kjcFa^E1%G(njaLPfqCbL/LS-+Qn(V;=dCP+0i+GB:>+oo+"(G^bmo2;YP*(e*N*=lIYeeLRO6OdgcHldPF?cTJq@[0C73eBFM\SM#&d$Ie=]%c/'aV$Q<;REhp>5N6u`G/A3DF9fI\FjohFC7`EfP54Bp39fHg#]qppQVAnsEc.1M8.ut<;GO3Dk\Z`7mF3BD0du>OZN9+TFl)&"t%3LOQl=\e&RUZl6SU>A#[C430s\l!Vdnq0*IBY%'GFJF51k)6)U,o@u6#q$?[2_(,2A6su#U?P.Pf#V8p.[k6SQgfA_d:g)tP0sY+%du=u8d115ld<)/GDgI,:UIN^lC?k"A][NV>7Q!%H^@IZ=FCQ_B_U3HQ7^8qEiFIh:6o<_uCQoEVi9-&r)\l")U.4F<d<)-mksjk&%RO=OVh:iW:2^Q3/(t!H#)Aqq8I,&DHKHb=m3qhWuMP_==dZ!#Za,[#iLqsn*ZXfaiDT0.WN"Hp;kDZ8WmG.f6o#KC;W<-27qXM:l%.Y)`<!iWa%\:J`,M_cp%hGgu_j]bYB]9P!<>'#cQT4kpLBm,l-WE2#.(2M-rB^!sV\`lKoR35PSaN(//JPS)OH_%E?1UD\l/p45<%c+KUFFX`FQVIqoY5c:#/oAj/Id&DSCH"<5/l9gnf%Ti[]TW2`*8$c=[CmhnFHUAgQbT3nJE?b3#8,#Lnb@.7_\sp=USZ,sV/Wak1%SD`Be4L*8hgh#o.\`L1(_rHullW=ik(V1P0bYcR=9jGdr\Ne>:k3fa)iU1huj,]De.S-F89T?A.eE,5Yosn477;!1CmnIs*Sh66U%$uKPs.k9BGgcMD%@4..SCf$8ZPqs2S4.boE4Y%\1DO(R\WUY[0:5;b_UlH+]Tm5H,ie`C?9Vq;5nAoZ<nO2j&9N_dpK5S?:jl7TQ%]<O(i-g2!S)ETrtW/(8j4RK_BO&I$fB8_.Bkm$kl=VYObkPUHg1HP@]_b*EH0rhXL4M.K"1J;SjR68*SYpf]t'0Xs]V7pne=&t&O%^)'R?0IpOElpN*]mT79LAudaCQBWK:(?=`AN2u\60pH*+))F\??'p#Qf@@g[qG9ER3d3su<LK71lIdC?Is`-U4H<LZnAgl`l?#bR%q_@^4*2*I1UG+E(NM38V"u8ldXi>PHc4]UJXU=Z$X2a"T0<K@+f%:R$)8Mjg)lnH1j+d<`#gWj6`7peU^f`8Y8WC>B!kZ[D7sdYJ%]FAMTE&U_OlFAG#`Q6*I2=?JAq)Cj@5C00=j2;UjWg#IB2XFJSS#90@lkSq8gW$M''<#jdlb/=]EAr)LD2`pi1dcSJWI\?=`1/(6%*JJNS`tEG_jW0&pjq"PAq*"R6bn^&a5!r`FZohFBcJ6u%CaI=)r;7@W1XXUL2fh%oXu3'\0r6cS/=/;.I(R(JL9N)YKUo:LoL-,r%(tCi8a7HPb@8'%a]WaMVUR1%:T,nS&O7V?B`D.njH"\\-mDlJ9VA-(+9!8YEq.pfmF_hU&g;gFDi_3cS1Nob0,-4f'(br0P?>Qfh%"N)D7N)<`IArCYWs'sW#O0b@tgN/^.[.7<9k*O2)dHos9]071o/;c7&\DDK#Es>k@9JXicguTU-%i.JpkDsV:H?A2-]Pc6joGH3,%V5'9%6rK$:;i2b\\CV4>N;+HPILrB`GlHR=*(0?@XRG]=g7&UK(=,4U?GTDJ0t+9p[((SRNR'LhI&Zr*\bu,Ym@IFHdb(P\naUSC%_i;mgo?H5CoMF(!ChLJ2ZU\;!LMckcR7CW(Q+<AdEUNLGC*2bpiSCFRN;7.0qTM6Nn]eQd][r^8&l7(>Cl<c?7rR9Kgt%O0KCDWc%YC=/)(Rk&t[ko9%n#pN8NaNco[X)r^l*qius69HhkNBV!O+snb@iZZg(C9pn)uJ$!ld_PGiJ%o/[e+.kg&#coJ+"_3oQGCdlphS9%I/N#Hr$^*DZXJ)3:KL?4&U80@8FN/;bUIAQFo4?jUT[<%k-#;*T<up-35%DsF/L'a?;0baA"Gg\p#aG\3@81Y6UI\eh!jacEp)XS%okA70V[&8PA9=2<K](hBrQ]7V[%5KL`U)>i(QT.DP4A',f4M2V26'<<)=6>8WF##!79bc"5`Sp6jl+lAm\LqF0$O=)5b7Mu+3rkt%2Ke<1SN=$S[##jY7uKuD4VF;p;o:K'6=XdY1d:T\RaHJ$_YEs`FNN%jT%'b0"lO%Y'&P$0[M'aF:;^CAn]'k1e'XF-3p^U.m@_Y*%VV@JNXI6B-2Eig@AfL*='8o>+I;>)D4!MT$$juLtqPb\KD<*:pXV8cD]=mnig9lrX++s?q=nLi*H*)"UKOl$1!/#kWYo;Y=KUFi,%CoZ%fN?pkZ7n`EJ(.F4OKktb.*3qGG]`[4ImnUP5S!<),3qCiMA+6F5^babl6bqN&T=H+4JE2;'@o_2#RgadIPF_,6T#T;h#D*Jq%Ve05%8KNGfHtgUPkric(ffq\kaWn6+b3YgPdo%h=+i`e<Kgd>1l0$S]`qkZjQc@K,-2bIr#hV4j7/<ZBF3IJ++\=,)ra9aiSg2J:%d/ErKND6BfI+mX'S)2f).QV(/lGb(+*]d<`)W^NmSg-'MjlZ,I'Ur-!k=?<A*Q]TsL's'/%[._p5$s<f"ZU9+i939KA"#B#76Qq4%NYM^WCCK-@mE%l!W&IV_S2gpqeel1O<Qq=.!R<_n,@a/TNWL2A&.HMX:5lKH)?i*KfoO6iI\\C-=^qGEe<.f,^.jUgjPHhBhkQ50%Um*j4U3tuNZCPf/^0.RWo+gBQ/^5Kac!-DcWQ=efMXjKU8N`uHI$ir3C^%J8.a$B9]D+NXq*nB-3r,Lt,O/@U;3\95V,$0=<-kG@%9F20reFf"2X:r\b27B[F&L4h]-oY+/eSi1W:pI1\4PmNQfCbUMFZ3e^S*>(ok0=Dn;dI/;\Y2coY2A<?IQ]L9o@3H&m'<Q2GB;@.%Rk1ck*^k)!p!`AhXQnE>omGQ+IZs_u0`L/:lM=5Xl8PWs;X=0R*n@V)+LBYlRlhhkapHSjRp=K^k4m(JFo<Y6S98<Sk=M1,^8df^%(n.M.T8b6:Y3L5TW3i80IZs.,j"jLPXfgPL3GK4?rrhW`9tj7\8j0oaA)?CNlXsB=ETA.D*oBi\C6"/h3DNkp$!dlflu[,*>@#"c%<W+7450b2qp@%F6$HKh)7#=X<lSlAShl(f\:0kV+%bFO2GrY6N3-G0hmJ,mk12g.GC_t"OIXeN3IZlFr%-O7`Y$\!u./Eg$p%W-Y%H^J3O3bD[4Ofb-=*NS"lY2A;@-:N"B%b:56>22Kcg\(d8qBam8W2^r_@jeVma(8=9E`Cbtr%gf3$lu+GhtVX0A^WZc2WVGuo1@uK%f(GLNom@s+r?bV=4(:@eA*VL!"?Tl?mqAQm\kR<&lHEVeY8`1b<qRCLq07k0I`LV]8#bf5=j3T+VXrF4dsd:Xl?BV::#kR9*A-^P%\97`s=7r&\*oH=ap#LFHo*<03<PRDC]836$4AE!D2cK/:)=%&mY3Isg!e6`OIZpi/NBG1?;:f`,<PKu.Y%E`?RTS+djFs)(Y2>1]%b;nnbNLe2Mb`g)'H'5af-fR9K[BACt_%?Co8_!F&//Xg;^:EP*%?WEFl8Nf@Em2+DPAb7udC%#tlSmK=\.`.pm(.Wj-rs-:fJ2^g%9g6gKj$R:Z*2Tgqj=\D"cM?c%FUs6a"gNI:eW5c$c&1+dj%`6V\rmLa2SAei%D1XFL*f"=VdYKf*L#'O[:-aSg?[76#GFk?Ll!iB%&QT<KY5!cZ,<\,W.)`jUC"=*Hrjqe#`q.0"4oQ4,XEHN5%ke_XXuq-?]tCjs:qO\f(UC0^o3WU>[9-[YI"1hKhLuoL="YS$>CChd%e%+hrTARe-X1`X-gNrPX:3M!Of;!.YhtSQ<r:BYXG5qK$IeNQr3M/H`Etr6/VuOL2O?G[Ln0r]BaM2B6^AW$uH[bYdc0Wu50DDbR%5Pm+>2g<jaZFB!=/S/iR]j<]]r,_hliK*<.Wl#occe^h_FlDLJ5>H^?nXk7jBRXr3kJsb:Y>j[#mm"Lj<7JUXj`fm2+.drTpQI+?%%LtG+c5,imTBG&p^<iBro#K&PlBA?*kH=`*Bt%9r:r%-rG$j*0Y6S_?%9'RD"^u?8Mhdp3D(IjFI/ae9q]d]+2SO:po3T&=]''&b%8jG^+8[l"=HKilSKos;?@YE^3c/.;ari7j'hGS!fWu#tbGWWN`-/3b:Hn2gWqWl&:+3jBf(eLaDThe]BDldG#b#9"<GjEqq)i$Xa%I_?$>l(Q>@ZqI-8Fli0Q,<M)K_=lGGC[Ye33K[q6e^cCPNVS1KB<L'?raKkmrS=I0&d6ne!WQDXU7)T/f/M!h#-qNcC7?lMP\(<Z%Md5p+8MdtCY;J:@fD!#iIU'Y^r;#[/Rqk[3[[-C;]c6UirKg`,<rTWGG4`3j)<M?HR%SE54hXV5k8"$f#Q20L9\A5_V`ub#"i!4)%"[Q"V46J'X2k8K8nEV"m]%QPiYC4sqrLJqu>L-X2Jc<;5Y<Mi,A+T<(NBGt*ig.!IYHe\^b894M(XC&cjL8H&\0QR6[MJlSNjlh>%qua%*.pIGnVcUW>?^#[<=o<pNr9XkB0[^^5jkJBf,OOiaDf;cPQK"N5U(6BpK2./\gCH'\#.Id-C%m+3?_8+\pA)L*I^\%M_p)2+%A1d^X+,""iXpZoY7A3?T)t_Oea0/nhRfGRnJ7n'(T+CGW$Ym,_qW+;Fo=&b;^Of'd[]t5sB/4jG1V_!Qh1!_kYEUu7ZFRLBHK@A\%T;o"9_q`m[:,ccVC,dOtQ>3TDXYVg2BOb#JSOP>;n4:efc!n$0e&rOcY<P0sna5J:qVJ^I:Tbd%a*gtCpuhQj>0/9V00],rY$E"u%*eoCBUst+lf$<pb6!Q>:_C"[=#OG;0Lp[Ef4Y-0R]2R&,nY\YMa62]b)h42u@+0$!$22oQ96\!\@!_$jGJYm="1W;l"q^M-b+F/:%LE1js0S!LH0])fSinDQ*-R0Hn[sfs5`QR#Z\2M4NXtSg]OY-M+S(tbp]_`2ALtb3%Gj(I"NM"CuCZ#'F\lIO(Gh[jHoBsB*&Fa[P%KkBm?kJ#u[iLfM@8ALm;?<_f2ZN5E&%J<LB'hCqMIeH@0rk*D_'q&\GrGMQgauC"\m*C$c9(X5#_pe+?3pa7)onm/b["keh?8]@c%<LCV7J[]">`+`HdPP=^LE.PV?R=B\s:A0$#<2lMGfmN\YqM,PFJAl^SVQLE0UreIN\">93.._q9d#h4(c/Pgi\8XG=g#utM!?3oU%$OIIcs0AGRJk*7rb&>4n"gKBJkKUcI%nd-d_rHNQ<WL#a/mWmA)S#ZbXe.N@l,qI6kAR%7k0ZsQhu#<&;a;Y":E+lDm,,c(7]`<t%o$W.pg;%(5%K)q)\>JcTffNj86tm-E6IGMJH@u.iB*%8o_HL3VZO/qi(#)P99\A(Zn$#=nDs_rJhIbG]s)0,fSCLJd3kocNnZ=6&%$tZLt8&WTT5htbrLV05bY?7kA#38f-EC5g_W:]]++-3afXZ)0O-)kl(7"XBF$,SgB]EEfL_oD!*o#4K.;H$5%14t))R_ht0NX#.%%@JO46F<OHVNKr!_oXe&-)IjFgdJS<;%5T&=@Y[4MYMB7+g4Tf)YG-CY`2X(:Z],4%VhV38YMS`g?MBbKIU=Vc7'%qHrTD^uM7E7p%njISs+cN6Z&TG-'9t[i->hjh)9tZiIPB<-Z%H,#<GpT@_9Nhjh$h&n"kia[ea_RJVT\X+6P[Q-'LcO8/V_PLiqN.fWQesjM.E+=U%n_orl$b"gLY'(k%W:P)`f"F]e'-6nk_lnu.>F]Dh%hDJ#VtSB5mbH^V8ZY'V[U8=Bg4!`tA[@a<BK8k;I=..S])+;ZF`0#5b/7l6%it&W6-GR8Z9Rcr)2"pF^0Dk)/Rj;LhpA==C)Va+C)Vb8`,Ph"*de<B#g@jK7o'<JXl+HqBqR$4uqtEZ`hX>n0km<T3T3#+QbcQo$%c9P.G7%sE.l3uJ=,RVe7;.kIhP:AE(7@aI/r^<IU/aA:*ePLt^\#;*rV9,1Haf%":CIp=]1JhF0;.tE:3eMm0<hV85%%PSiP(k_1%M8&/V2s4:>UUC-k.kcu#?WLaU]acjoj]$`io;RLX_n=ob#m/fk'%JmfTCVKF9fW(9<\SB:kiao!otkGb[&5F]j`Fj`2kFTflbE]2%DWH6<5fdlYmf+k>L!_N;G;?O?l;c\Dq89mWP_J\9m,5"mp`=;LHu3rh]je;AiM$AHrk6$#UTAmV]Q*P(94'L1MlKb;k)nCW^/q*`%>k*<8=&fP2rpmYJ+hms5/%rN3o=eRF*<+j8UL/A[LCXkZJ,F\uYh$G=gUM\kc^u8+pptUX]DH.5s89P*Fm%BUm_R5'$O[p*+)g#L%g\@8M4't5=0!$@qa[[Ud1McOLCB*`qlYj8Hf$DP+K=uFr7H2J%KA1b!rdB:VmJXf&?XGn9?X:=55AP/.rpVG:%lZH9]Hdr&`,,Nm%P`&s?s1E@C5OIhkG>:B6r9i]sZL'/Jp%R7N-f75g]`\,t&nI@+B5t'+HG$b8k=6?s!8DV@P*IW,BnJ0&flVS;>2&msoC&g;(YJ3$%=199bW;bTME9c/scV&amg\C<t@W,t]4oOL$Xln<Yf,+H.*/*qYfo)3Kmo5566T`W.Vjh-U?i<ki2R)T#Z;g66kY?L=2eue7HaFg4%+b;Lf?u)KNo0s)A6[m1E1$]T2<*uC,iZ'JVrpgu,gG`I:'3M["m)s0K)lU-mVTA*r4nn3#Y3?\uL\BmmrPPZ6_dIUWs0-D@n@IJq%5N#W2D:h($g\e#=FEYKGg&M>(\uaZQcSbTTO7%Z"TatK:B62u>f.u>RGLj5gL\N['m<[s\,P^pbg\1N*X$G@QB_UXNBBflK[+F_q%V/(aTouf?XZ@RrsD"+!rG<s1BMjrPulR=_"alk@J`mY1@WNiFEA_hp^jG>$RZ#]Nk7:#GEDX@$\T"k8Dk<FTgp[0Xt[Y]_qU"X,$%Yr\RM2i<k^>F-\G33'[N.r!Jl?\?OA=8JO"cg9M;olp#tqVtpq52Z56_aE@h:\)#EXh:q;\eLX\',SY$LOSi0Xc)<:3YJ[,q:?sl%^X"i,r-BF<IfBb4N]bYL&:'9P94-YUP($$J.UACpZcTZ-?$V*?J)Sq1YKODHhmi^,NKq2pLOfJ*GJ`<f/*fD;hY,)njua%A,Re2Y%]k8L[KO%*d'0clp,c&-RS'F@6f)li]jCYT:(HCJ(1UJD+1l';C>HduRCD@bJaPaID%:2-@]oKpEEUi5_%rL=bOMT,2^YO*XY4%9S%md'[^dQh4X/T^7PULgT1DR[g-10:#Q>e4q;VDPQ!G0%%7A&C-bDnWZOlTOJAFP6sCnFH9.Sk0lnY<9LP.hq?Q=)^kAp?]D!gP6`?%*ukCqs3daQ."%`m2Hfq.!&;n11<BZM7SY[")5@i`L>_celp&ik2%8kT=#;D11X96;/p*L8e`em_UQn&6VB3GB2E+YD9U%T`>kY#i%2R;3\@i=Ep2Wh!tFL,MJ>bBJ)H26Wn`^pMZ4R,>eLlicd<a^na',U5i,W"dKBqi@+^5;l[qgO!K54k-f1m+D6SZ`P?QIi?l5dB?-%Z.WKVQ'>^:NGRV=KoM3hfHe(;m0=MG1r[mS#YN8%dcsLX@S5;;7d;,CAY&O>/.%joXI+D6bh\dRFo0IDpaMlbGOo'!**/k.s5q]c%?(H_NNjjDX&d77S`ccfTeRkmG[R`#'keC1E&"84-V#<cF4C3I8:6?OZjj3pE(<QBXpc",l2PJCa'?Rl7q!Sg:EF,6Hh^=T)q;Tp]%9e"pXcJmZ[]QjI,fDL9Wo/%b>GE1tmWbk-"BqJf9jjiP'hU,p)m^kDk=']ED%#u44]LG9T7WEMJT2jZ[\sq8jmGMja(U=i>Wn[8K%fJ,C&^<n)Xrbb1o/,nO1(("Y?dk.*QrJoDD8(o]Md`q?nbE'@J)/4T5s)MW<eA2pijM4,O0Rf*R6Rs`(U@%?kk=+2+Etnk5-jfq2%/%pkS-*[?\\TRDXg3n9?9*'=Nqt&DuGeh))Z2=(__;O/LllPlk"o<-QrX8bWm6Y,9$\e?6(D#`fI;^!q?-$(_"p_i<2]L?ZJ):+9%oCMS*K6N+NZZ#r<(\\/1n(q<ZYX$OK$-up_=:W$dhLqfET2rb[oHs5"9eT_\*rbon^O*`b^ZU(Inh'e2+T*nY\"OoB\d8<Mjhd?j%`k;aur(m+LO7:'%!W)6g[r?iUT3'^_#AEI$YH5lqebX<[BO#3q.i.h1QM8QX$uXEBlFc"2=ZZiJG6]AH)ta-Y49)\^[+?o]Y:R>2%54U'@%8l^iY@u[>P?$."R5Oq$$ffnN=@:tDCk,XTS\Y<*I/'DZg4#?#Fc,7_W"sQ&&^0KhQ-i\b<gRBUDq<9[!1M=L5[=q3a)k=c%!FfnK)Q_/gITH;s)fP$V_(P*H+spUO9<g#Y+/7=jD[5)Ef1mH6^2UD[k#pSS7E[8@/PN=dZD%U6"f0<,,/+RYD8*4lhTG`0c'sOV%+]dc+A)@Y%U8SFR[R%,&e.uK'l[.MiY\`kcN7/Y\&$[*Gb7FYBeIYWh[S;mqXrK@'R.$AaSo[hf\[JBDW,Wm``f5$M(eK%rfYCrr%^C4=s.A9l0M]BbX5!s*.liNhJdJ'eY,=5\\1[cR.>n*%(DjL>WF#>,TW`,^,*NgHA26N'M/(XPHVd[%l9N;bW;aG839gO<Q4>p43%Rl7;QCTu,Rf[[N",VL,HVeiT,N9hZ)MDFes.9UJkn/Z[;&LQD4=d"N`Z3M)u6S-F7`_7;R]S7d^9OE\8m"b9d<WnG6D&FmKA\O85%SiO\C?u^n(Fh/J,AJ:LNN7_^WnjYD4jjJkMT''ZE/CsD>ltu[Hb/20YT80$L4t\DD\8cpES3N'!mCkYUQp9s"VXJ8,iSq_n^2L9\%M(8f6DQk@&PrU+:<ksY"!jbipQGQE$imk^1X/^"gP/i!I=:t7T?t+Hu.g)iI%?P!O!dRCFR2uX>K:U:ChqFuM(o?RE7JLX[,7#u"%7b@A"[V8Xf-t`=VR-VAaU]hd)0s.d^.?bf/Z@h2]gX=cQ>eb6[D+F[+)Gj*MmaRhZJ?S#,PEs+<D">Ht3Fd_3:;)T^kt&1X/e-_U%-s]s!Gte[bf4>DU;%+4V#5^J)hC%^&.^YKhSHs!i/"><X</3VAdE0eGYc%Tm@:'Vp\<>aM?(K0qXRW8:0DU9812i;Z$X6^(H\tg_%6]Pc`-3JE#XVW[?5^_Uj%i$aD7)DoVi<50A7ViSikM!ee)0h=FW3+Vc((p+7>E$Pm$bfcpH#eAM?E]gK*+7.F)S*&(5G^X$#3N8F%1K`RC^3/4q@]msif\F"+_UsQeJAnZ\c5Nsfhpat!L2,k%!@^X]*2J/!)N[("87DnR##R8I;r[(n]L@D,0OT0n6#+,f+6!p7G_K=s%C@[8:@a&r%$nJ50kO0I$'t(4I0*D6V)fl9e6k06UaWY%H3Ws9bGR25?`'YYj2,%KlRNIL@B.&07PXQps0FrRR1"s01Nds)MlXd2#%V">pc,u<VVFGg8N^KgQ;oVifV0)2#Z/JDg6oEj_KkBRZXTsc,G$7m4]UKBW('+BTLZ7,KY:m!LU81?'J#)p'H&Oq[$f]4IDl^L2%%.^Ib6UD=GM<3ag%XDsid$Cd%O+/F%(1U-8X.=!G!f`e1NF`WnjY_k]/U.q3dA1L&UFij*rU*CB7_0]GH#4cWa/=;1RpkbW(LK)(3%MFAG4W[&o$%=.^LWT<<+Y_e&8/;-KAK321-2&'`\]%jHp+=1'"RIH]>'fp%FPV>tn57:!6!a-(&?!\fqNQ#QK"iT[Zn9\)8aVr;'%Bo92gekj.#?TJ!mk[W]mZ\C"TCIk]aXWkbt5qZhDiYs1_mL8eZA(F,(':pR%-ju!Dp@b2q+H)\S=[C2r+sdQYS%XVLVtO#IW=mj%%=kPA>O9SdF,tp:5nrt\u:fuNaO>_p-[V^Y)%sE72"-o`s4L`:3(a5'RmYAjMdLLA5.T[ri4(,G-j&9AVAIYiM!XK1?=4:$5_5aDi%Br\a8Q8W3K4\B-3pc;8&_C8=VA7]D!?j0ha,j7<ReOT2'U%&AuEJ"Pc9qF].CD#O=(*hZDhfI#$JbR/J7Gb)7_=6<T9ln1`'"&C>%"hNil7"iZO6W1]l3XA,E/V@G2Zn/>qQ4/9o/$D4*m'>m-9q@bdK%s.[-8\YP!+D#$ogi)@2(b4l,*qsR%r37*Y>AI6)L;cU39XS;%7qC'YL9\E("'"[*KenT%AIFPU3-<!RiX]c]c9oMi$-/kM1K`7`N<;>\#ZL+8oXUs6AaBFH>\4,6Z4,L=M[g1?*5!(5_M6[?X2/BN%8=n9WE>^HFM\O*(+r$>>*R::j'Vc`OK!Go$5]AVJ(J7KDV?>i`[>"4)=G)bLoGuTr2MI&5n.j^_JCMAK+r(sJ62JVSi)=Vb!ftU3%"C\;XEuC"B/0c<<kF=7F@U!A[_uRnnL]n.m&IFF$f"sdRXDYQp6Ge$s^r?C"bY)QAUcOdF'm$-i_0cCqY,W*d/BD1pa=n>[P^nFX%:5I(rZjg-$Mekg4+0isj6=I!-/MK_,j%equLAa3<PSJ=]!!KB>SNTeHE%YAL\j=uoRQaa3r"u6NMB)D]`Bq&5ohsj;=2QeS]kYG/%?o>$tlc+"R0\]$h?9QNT*e""_%NZp6G"eU*W+C.I:gu/FD/209NJ&5"B4%P.0>d-*Hn(HcXRroc9+'Tm0"8-g5ub9-%-3T,e_F3k%H*<oH;RF<9_mXTi_u`gu3MRVJVG#k.=_40S_.qbG6TL[p&IJ&1ib0#]Jr.I&1'+B%jJh/I8E7!Tl7^!/>dOfK!Z#<i];>ZC`)L@t%@hGDn@bfMI'I$0g+?<RqgDY9c/u!t#m?h',_WW"[.Yi3CJCH0?L6tq+RP&t[:J`dYV0_Ao$kJ=V5bEjc:)5i%5qkr.K/#YX==gQm%'p(0o'XSV9MPa/!W.5$phTCWTECF0fedWh/SmoK[_&g$tYop2[?qi)dlqunmOL7Ip<A5$<6'BfQ*eF)cf]lW((S^^h9SGhA$4'.E%+d8AHr&p[!?<@qHfsml[T3"JX]qV@`.R"$*,\QKLDfT4jMBF@bV=$sV2`87CUYZ,$Fe._j:"7!YDt7=n\Q$-K=Q@*(Du)F5DVZG8%g"WDqZT!\Tp',$O5((\A@fKagI578)E&F]LGIcU&l[1l,b##nY.p/>=(5"]W$uLV4CF`M*!HF.%]Q=,W,fk'k,%4;3*3r#i7ViSi%g4]"@Y]=L9f[^L`IA""cj1arX(eV!:nL=fXiC23!7Q,UjX,PF;GsM5'+V$BdV&#GL;*p%eZu$C&&&cu%dTpS22Zq"8=W'prn9``T%Q!s_u:-1THd@)ik0$N_T)7!\&R$68>*kT>2%ZVFA@L[rTLHMh2^p&aPmQ?EcrhQt.1[NS"`8J"FAV/WkGf>P]Q<_?<&.@K$A`"2r%a4:\DkL%Z+9\Ml0dJ"3P.6a78hNnUN9X,FY0:X%_Boc4(<j4%g;gau/Z72!D_h53O9?7<`8!B%c+?Fb`Js`+:7>$8pC%9Ud"^U*l%N3;O:ec95bhfR+s*X(jW4m.3SE6qWtqq?YM@RZ<-pqjA!KmXCC=W"B>G'\i3h*T[XUOZkiZTgG2TkTe3]d":k"`E)C&9.d_YUMbl%_N[Zj$Ki:B9'TAQM8!#85r(o]G/g(&e:?L?Fc*AJFanoI?DXP0&@AR`/eT@@cFsTd/eoTGW0=rUApIIE<Hf)/Vnuh!=]kAqN%UN@%f`5N!iD7%p"G-88.2-M.Z+?qcqe#VJPr'N_liFMicQJj9^K4.&m!g=BKF)JaRG+!LO6tm*D0JULVJIQg+=T,+#Mgs:qtbe$ir<o7%s4rM2+)F?,MU5-.O)Y`(_"hD'?j/'VJdi,8#*'0_hH9kfj]9%#!ofXu&KSZBNc1kk1L%Xcf8+?sVk$?gi6,^4EFfg)FL6d^>.YK$%XlQO=!Q(`(YTmCTfa.`S_E0m__2W$ZE)VXf0:QZ\4QU#gU8M7lF7b]45b#nho4A*i>Y-\n*AkYJ_*75X$mo'.#ul[/0l>*qLLqGM%iuj-_Gu6/73;[-hq.PKj031B=o;(j[I6%9J[THip20MPGFQdd*4G/bl@6e);QfpQi+NV/WV,URNWCJ-(#VY/sCGiY*``]MOG(<b*%N&s))(g(&^=D&(YfAQ<u(XSJpKE6%6A>=HuW!uBQb8Y=ID_2Ud'!XtDMm9Hs=T!F"*h=n#(+H;K0PquQ!on*""O^D([c"1*%"Tg:%&YVn:\>sr\j(X6CM1ACf+C-JVAm*WK(ir<^Yh6FH#B-ZINbc.cj)_*k6%9#*2el3s*d8Tm+F&n.($mP+<hP=P?W"FSF;6DPn6Sqm%l/kg7.`8OM8.Vf>EK!FcBDbF?1r%(5:aU4<>RfQ.',@CU"g4`)"4B0`#=5<WHr[@GH+n8,Xlh"s8f0A/<sC2e'O@LCq:Xjqhe_O+%VHt;^W"T;OSVr6[9?=gp/A84(JY(<jC9YJ%K_S`\.@@r6e2ci:35'<*1;??eitiH%$-Ooe2$$c<JE2tDM[hnA^bIk]^ka]0.]oT;%"=]e@iV1j>(p%k4'WT$-=GVsS!Y9r?>l^\^"X+n?N=f]`KfBi-Uk<2l(D7rLM<kbR:BemdiG9"MN`s*Si.*D9;RP/BJa$_l*XfOA%456J]>Dp:CU&urU@:FdjmTD+-5i6nc@S=EmY/4c"S`(U[106\\=Bu;Ad$BL>k$`Va_V7RB+V%&J!Fd[;3tVQ?YU4\&W-jjSBJSK0%.7Vq3Y2m#*_gR';(N;?FNWa.bK-EC^YDNe1]NjGJ^:ma+S5@Z%9G$Om[=t"AFYC_TRfuu>D.Q5nV&)0)_IXILp_#&7@0E`#`J2T=%VS.`.j+`Eq;(=%21^(%.%O)*0n3Pd)qo(H\)(oFf]Wqki^fttOTWLiI/Ube5`El#Om9ns$YD3O^k+(hjLhX$s.E;#NFQ%/X#Hg+q%,o7E/4h+'1KF'^l:Yp^C9;Xi#`?7bh`o*`OZanUq<E7J:NdMe^nWOmcjJYWMN@us\/V%MZ@HVn,RaOW/2@+ch:^XlHZD,@9.eZYi%2pp,X!kZ\_Bft3I#I,raI*YT[S+7!OLN#Yue=fheLb9+I-"Y:OD1aQ'>LK)Pah*Iur*tAF9edn>WH%gr@Ybg,JrqQ-qj0#ApQ&jc%$qTShJcnZ>XN?<!0dSr0193K-TLKlu_SKfHWsh9GJt->KQXErp3Gs_Z5f3q07;Nt3XE/-73l"#/9u[ALZ[9PuZmPplJsR&&YuYBo%"^KUo<O+!fNX6b<k!_8qQn`[B#*DV'=OL36AK.?HM)"3IJADVD'qdM'D0h\V;bip,OFfHCKojZ6']\F3NRNiS*q5bZ*K:`7&?h/u%$Oj]KD:68RS^HC]HQDOqOTu4[\*Hc3Y#,%\@pe%#g_J3K(>R0N5QF>H7LE6..*KFVaEb&@r4-e72CXeLMD'fgfH#tl*@sZ=DU<W,%RB89X_._R\k["Yg)FRtR(95G/=#'3DKg$;i`SN3SJ@VYVKc?^$Nh1egYWbUDQBmf`nCJ+&Ec$p,1*7V.&5C4BLftBY5=KbrMIDS>%/>h7c`m)Rc_q0^Hn7YgiDsStW*=9@#@<6\TM-IX:$8W_-G0&X56k4Vn*/nIS%96f"&]B^N@Q:*5`Ic$ff-&FdNr6=@K+U`<6*B?7%a`,2bB#]V.D[m;':[b>(47:0]:1dD<@$/poLM`+f`")"b.Nl+&iI!#f8qANDZP[\OJ7RSV)`\O5Q`@,]=BWGdVqgjKJ/,dh?UPQ%%4HM*<X@t<p^0?Ok@;*;ic1rtT0Y@TN9"S8P%?./V?A"=uD]=^eSF-Rg1hjH?p.>\ZA?_5)&diuqa-k?bja@gLkS\?u/@dhOC]]Mo%ALjr5(APCP9;Q+=geHh?$G(!V\P-"$'V:Ro.s<PNdoV*IOaR]Nr#s@X7:cBA(=o];-U5G/EE&U@<s<XVm;5+ob'DarZ2u5SPfce`%j9Dap]*^-a7qfmSS+%>8)fE:ki>;R]0SGHQ5bB7QbF1bs+r3+j`FqWS#FdiL91FZgA4*`@%*XH>dIZ.0L]Ctnh%(+Em2uu7F.a)m%T]"F(f[Zs>Qmin^#-;ohD4^kS1G9V`WK%=?Vu_JrI)9:8-Yfs=R*jH#<3Tm>>Vk=Z"2n/mj>Xt"iE:P;_AGZi_cXc(%*&0)[-mP.%m!-m2>SKA9KIe?97KLYRh3cfY1>9$"PZ8Po'EP_*5i3r6'5`V8-HP0QI%]JaOJutkkn6m68tTQWa.+1C_pVJ3"]ueI@Z%OIc_2j&%lltD[e54e5'`)T/#<]e7a]%J2T2Sjl,.b8B4VtM9;*?JMS-&Vn/;G,*6cbh`CtLXC[H)_$E2T"8DVAmJSm]9H&EQXk6anRZX!*6Y%Hk&O<WeTrQU2X#\i*VsE-Y6;sIEt]oq$[h,"+_Zu&WA`pOMTk,A72*cX?"XPkU^FnGn,F"kS-'4.mh-&+eDB46&PKh(D]@jM3cTt%Xpq_Wk`o-m7g^KfITXp-DRIfJD5i=6e#=f4X?lUMjN7^pCEnKtaXencH-peB$S$tA:O0YX"9\o?JK+kj1-lXrF^?aj'r,%N)UHbn%8/2p-,p2-r"1gYF'=m+AE]pcSSb-;#`2&1MR2TPQN9V^>cH/g76?1m"LmDu[3l\+l%AI<PS9Jq^UNk\+Af)KFS7Z<-@LNH8[m;-f%_QGXb:&]c5)T=B\^qaDfk($Gsj#%d%k[LNkaWdk.%X+m(g>o6;#E+3+)S,p)_[-_j9N@Q,L8]-4bu'fuQCusLi+l+)n@1^1bI_rr%W\(>6"m4[a29ES896+Ju:Bc/QqAYf7Bb>;=,9r.T<XGtgZmbK5$*W=#?tN2,Gcg_1i/\@q_]l18>=autM\3;)NT7idHbefMm&6M"%&Lo1G.D\V?SH;,D#oSQ;5gY[9@0G;cAb&^64P50&Eh<H8.B81Id^h2&6uPPFRUSG"4Of0>*Q7=TOu9)K7Sk'Hq"8sjJ]bWFL/R6T%d$Q'7,'(V+/2)m<Rpmp&75Tn?`l5_-HOqc&Z(kpM0W$A$K4P5Ug9>HNZ.HGgYALol<.t*O(k`,'mO%'ZE7H?BU$tX3e=ONh/;D1=%]bI6/#s]p;MR';N^8+[KDG<sY.*,&'+0dNMA]17N&2&t*!FpZ09uZG*"L!]=n1*8Y)9bs:eKDh-SVrJcALM_QOWE1V`Wh6Q"k.a\%0<V*j"(2Y<.E8lqHPY*#B]D/90"$pu\^dmOL1QiH8i9-7RlTGhF*#PB6mO(pXE\S:hBA=T5W03u_6P$JWSMnY3[E@e36G2>2Mc66%`f_Rq?p#9@gPiU7.AU;QhZ%.:Bf7:5s&f+$XE=/J%$7\*=c#EcelYjC:5N>HYbe[\CcDSlkeLY)Q*M59+<W(mQnQ=!:[RKS_B't'%PKYm3D(oJ_CO7@friYkJ;I"04M,+<fOkVa-2-NN3gPX@&Z&adifZ6+JDoua'lObR'*K-b"lPlE"()M7M0\4=^K&m,VAaU:P5(/hM%`\?d0cLG@[i$-<WL^f.)+b2MO((mU+`@)00+J)A4mm,qj/c1JXbmf%'m@I&)e\p;`%[2HX$,U=*=B-9!=$MKHC2+&!bKaM6PQ<5u%A-$n@5&Q07l_leI+bEg^nVn-;64I0Zjs67T,r[$q!c9YH5mnI1a3qPVc-cb?>.6r5#,5a&0IsT/)*t@Gem`*ANgOoo)NVcT,(b^(%iRo37\/@*0@*oJ?JgqqQY@qC*@u?"SE13JC.8L+F[+5X[^Y9>h6qksZL]JDtFYkt!+@O5>LdcgBTnj$/%Sgie6N^@t)q(i''oP.m%T=0fJ_d!I:PR1H_Zh^cpTJF?Q'J5sMd9%gt=qhs1p0'!q.ZU"HCj$!=6*r3]D*T,8i.g_g;5/0Y#ddT_^/`pc.Z3]sK^:33pjbm;%80.C9^)%LS'":Ck4MXSp&54C&mpTr]Mj+AK5ZitC_q:8'NsphN3HFPF%+OcQpiJul#CQi&4CHC'>7Yj#Yl-R9?UD7Ub%e/5%H8cK%E2T%1BG)=fX<aJKk_Ibti8R1&dQkPSf*ETX*]?CL;iX1CYpFKALknFE<-ZYQ2+pXU$XD!-oHO-Dd%^0n9amf9^h*@g?DFe62F;M'%K9tkhM!$Qa*J2W_UaE5r"lO^_3UVqpXHFEV>b7VI-6oi*G:3^]_3.1;)epb-Qm:`Z2M4:q-*_MH]1%BS09\aW>igToU%&j"'B+S/%nNE!,CecWSCP\"JH@"i"$KR9bM,*9P^.f/&LCu-D0u+nF%'s,Gj.7,%SbPR!5;GciU=H*MD_]Ufi$\`F<@jm&jU>tLL?6n,e+jL^%*^*&M;F(`m)`'[/&OCE'al+'K??""mUie]%:s!$!BS!sgaca=ni\k1T#KMB>\9U\:(0\S>-$K3rm5@J]A.MJi#-;#]/r0C]iLNC@%5)MV)Z:Kug>nHNS!DXae,X:BN>naT01P8%?@Bp)9->P;-g]XbVN/epihMP!m&Y]d/e3'QPCcHX0*A`._Es*NEKQ2:o1%4N8N3=gl%^^HOd+sR:_XZ)Uing4VM]o%A5KpbgC*=NS*Ue'Sf,(+7H#dqXC1%qSTKTknMLK7f<Y*!b;2OGj#0VfKG=j:A26[YOSL/WXJ.3OYR%Q5P7^5RHEXC;^=4Gqe`V2eu$U?s8?O$5Q+9&($W/Cj"Ob!F[iiLM/rJOfEF.B`J66A,;E68E9n&g;^j>oV;VbM1oJ+c>'e<kd;*4%[XhK=H4ZE;^cX"ek"S@T6DemXaKcBde)S5(0M&GaZF0b--3Mb;!5XJZkh$/HAYiKL)Zdj0OmtRhdYQ3U2%.tXoH]1uCoNV[-3H'*%_#h_l2tA7(,/eP,MPLA#02V.LKGGg@7cp\%87u*m>un^1lbDph'Dk4F.4i$bF<'(8a[@J.K0;NS;5?h@FUB-3Q;Yk61<8/hP$8&:%L>"u<=:5b#\O55a>T2`fE5K/u(1GF+Umac@E26[5Ao4`KS5eX?##UCk0YWop&C?r(F"Qm8YT5189[seA0I`\m=<-JB.U)^K)?#B\%@`fg>0pQ-g0kDKAR"E?*^KIb1TUY.l@kOWt3#+(\^6hMH^6hel0;]^Mi]D39"[g5HE9:WP@;**mm8N(@WqTCDkJ^j^Qk7HoRh@GD%0NQ=?%=?Qkf-ls.5#bN"*R8UWAH9E18hduG8hdoE_T&-&pJRlTH81,k,=c+TQpMG\W#-I/M=M)),tV=5Bd=&s?UlMRDPdhSG)jC`%'m$hEA>Q2N6tAY@om/Q.QAs`q_3cn`6SUhK)2VZo76kdg/Ar?'&YaV$Cm_RM^2\1\a+B:'HnU3.X%f4d6osFV.5M[OQPpp:$8R\e%0Gc5[h+Id'BhJ&)$4ujjN>iX24;N(/D!N:CSSF_t+&))UhFe_Sn"g^SWk$;Wa\o26;Lic@?+uX,K[V19]i9U1]i5(']i9UB]i<E>%W[Y@]UtqDuWcf%!]pCJkgX-&l(dH1;;?53LE\.IE/&a<4<'Z,,2qL]YO;)REMAt,^.DR@ZMLEXrD)u#s,m[dL)(5uu#^UmXJrV@9%,'95L"Z4REUO.TsD*5Z0>0:6S]pZlc.@;1?[?Toh>VLbtCT.HSCFMNqj&`FNT`%39fmGB*hlP!,EE?FSh^d5;)K2H'^m@q7i]ARs%U%K'<Y.W.#L:8G"mff=^W9qLJK8o08`5L<D@V@&YO9u+m=H9&rZ6@L.'a=>p+jLf[A[nPNJP2<hHTgj?#,ED<]S\iCi>&f9.>A*s%X]WM#l"dEVoBSaTo:8b=i/D/r5k_3oq)-,fi#\[2*XIR4"UeBSEaoW5XQU9d4YKe.#1#^T5$L@<LFIW[V^'rHH-"CX*6pad7i2Bl%!FA["`O.OY&DC7%\-,@\9@9XT5$t_*2*!`l&]V9aoF*!R.qh-I09b;T911Xl)Tk:TQX]1V!_AE(S%,,GQ^o1cKb:^K[)OVLhK`8T%+usH-NSCcWO4jkY4]^.hXD8Sg"HZU,XPu2dZi"gR%;`4;@J$Q@ILm!Sq,CtGN.PmZ,3:L%@V),5"EPSQBu;,=1Ik,E9bgT.;a?5Q%21CSr!c_E6""3P.^sGO)4QSRdVYHUkQlJeJ9q?r%M6A?0/c.`*YGi_cf@42*_mL?L+@PcO+UmPfZ5P@63g&7UOOR-R2"N%a3uF,!%6qODGqO8t3DPF9jU,<Ub,YLHjdXiJHi_ph$B3NG<_,bY;<@ji'_3d,@SHEJW3FqkY8WsThOoj4MM/HYDa>Lbp`ZRmB9H4?169N*J%CkgN1+s-=%.rkZKE_`$H0>qie/q&ZBU(&&0%Xj8?].)1<n5d@R`O.rn4(5QS2_Y&X_CXkq?.c'j@*cM;8m3q8N[*DXYTE>'1(&?3%O_X:t[q!&ToP<adTMIFC&V7Vi'f"RB#)fL<`H_6pjOIA_A;CuZU$l66;]&KLn5A-r)$hFd$>X7,UhsSnVJfX+QAidNWJ<m5[;e*I%&/pkQp]-Iils_S;,%N0?ZJ7X/;7=uQdmk\KoG1r-5!l!m6TWl.0lEf69D0Wf3^&FV=Ei9Z/LENl?r<hW:p%aKOhq[_-TUJa&G2gh%$M5%.(itC.lCk*gfco-1KULAmnL[0tie&H7b+ebS?1$=CI)2*QeES7i[<daf<c9_HFO59X$)pLsO55au4Ub0I9i7qr,09IHi?M5m%"V_4j'/+EQ-:g!gA"l7'Z"e^*ingpWY@GYJhqBl!BU>ZV&naG/ol9(][6>#A2b#sMEKaEGC4/LE?>hPqlm'N=^!#Nc6?ModYqff*%#gqu^,1EGcJX7bMnYFjYd6u6.BS7kj\<b>j<jR#.Q-PsjUtIiNG$NO?gGUe);`AnpQ;dBS:&4UZAfm/6faDC,25j*p(,"#$"-uq,%a[_f5@t?jZp(h)]hEmsi>DsE5D&gkSgB0Y0@Rp+0Mbqpi,:8kmX#[_cB_G9MV=m?Pg'<d]E*LiZ!@*(;dF"M0%O;<?V+9?*?tEK<%&%UITS6CFXHUZrP_"5B$*N3tc\Yfm%bE9#N_Ab`MGQWe#YE7u?Z!l&Ej4C&$YC/5XKcmGD)i,4)!;OPQIo0l!9AN^(hJm^LX3j:!%`DisXWca;CHAdSWD_]Z)/OjJ<+JfO=*o;s&_F*B,3?tT&WP`PFQ1:al+QbB'=>5N07eo4U`@$;:Vl@M^dkno!6JjWFrh?7tl=k"E%Wh-)<Q#tgGRmi\fG,_7V%D\R4##e;rKB[WfE?0+e>"V.YhQ<"F"/qYfkC@!,p,Sq%>`d=s@M+`c"LE]f`FsHdlahSA$\lns:X->#%5gd.lc"i#$@r'6lOc:`U4Y&,(UZ'5;LqC#<$<A0u%OgNiE&$p2mp^YeS7hm:R:L90UdflG:1E8#(@pF7Eih2">6J6;i%9RI(?^7&%A?X%N!s1RhOIS\'&YSUUXk8`rTgE"N,!sB]P4r^OQf,(CBEcEi-)$K(UB24LPK#ddUZ\#9s5s&&YA$9/`1dA7QsUE<^eg&EYeW.A%Z+.p?[MiUiCJWM!oF`$L\".#Q#J;3=F9@R_1BZji"rEtfhWf(_%5gj#I3!=7WE9CN(gAoWdN`^>0*0:9fAeQ_A<D\0OAsY$L(Y1W%I3U$HfJ>BN0R45CV\gmB",fJ8>^DMkP_dE-"3O"L"_kdCZL0i?'c*aeA(\Fpb6DQm3tadm!$tOm&g0]>qG,I+SpV<YSN?'Z3[K_n%Bim('66aIinND.$P)NI45doHF-eYL:>q:R4.)!3T``maq:;4O><lD(4`Rr34B3=jR1P%0Z5R(+P)65OcLT*neqjuY.6P*mA?/6+7%j]DZ!((`%PTr-SkZRSe3fWmQ=)_@Fd/4M1pb+ckI^W:+SX<"1\aS.DL/teA%D&!KcCp$rWos9Gq(Q95uFb>O3J@)J^kLp1$['"g7%:?ss8jNU0-)6idiW7-&Z6ZQ@#;O<(DCZ$YYqQoOqNdre,_$1QW(K")cU%oLaNt8\A;0K,;)H>>ZHts..lNtFGlNp&)U!eT?m'`KB%/cL>:.&a5uZ/7T+a%$`RXWu=0p81)=L^:*]'TiQ40Tto*EO@r6LGf0NN>dJl4LO.tS:o]N2i,4hXh>!lpcrKDZ2nL@0kC7$/;,'<%(-j7F>#R.D="(k[%U4<q(dXKhj!IfJN.Z6dX!o2\o]))g]]eZ](XZ)[]Ykp=*Za(!PsHn52QQ26\SO9C*TG+DEsBL/C!E[A,mIK.%R.6+<-sA#3VJ9V"QTc,rUi:piO-j;]HSQGE-]#u@).H7QkQuTN.JH6I9&YB>k':n_U["prTg`M2#\JM'/4L+BPn\M'/-Rf]j<goJ%;je!F7!GRjMeW=,#pI,".hgu["_#:_1_F$4C9S)Phi>4(eXEp8*4u@4ZC2:m1s>qt8^'Cla,ihhY1iNIki"'EECbFu'n[@BQ7q%4%<NP>gYHd\ZSi6an*FdEF_Ag1A1nIumj-rl<2(oEt/L$cqJluO>@a#iBOD3F5JY]@P),cZ@9Kp7R)S,O+F2"fV,_ZGt(e!Ct&rbja%'[m%!D-[<8l%0L"Rp6(MGm9F"4-L:L&JK;M?lV[H0^6/**eu[B"LT+*\R\pk3#]amNWp%Y']mImN[\:N@SZ%54r$W)#u!@B7M.^3%MfCS5_)S"j>0komDXPc"KUd:*8q5;5EBHrN8<0Sc*k7XO+co2Hn5,b47kFKKJiU_W$KTugoedI!"gY!n9^#a7]CQ5)DcG"WQQduq%dX-l14oQR5nHK\2YKar40%cFiP6;hsWV_i/$.J%sfLi^AJi(,%4bK$lM1NWV5<#7.j<hqZ&/5JQ<!W&s`O`oa?)&H4qPJQa@BCpc%P`k$/0bi;(Q4$>>P&UI6?(S\PL8Hf1IiVKXlX:l,<`?g9f"6HeRYufa^CiR[rrt7DMnVST8I,XP:''aL!M*5:9-Bc&JUnpq1+;=F%`^s-QRHaX8'TA%mXU?iqJE^:YLIdCn%Yi$*9>BSM%dS9?Z"fG^6JQH&->kaS&\"7<+EK/YXG*n7>hs:$-as`X2\ur%jE:V<Cf@-I%2_a8pAUJ6_>dU=5F$fI:h`[E`YQgo7h*`A(3\2Uq2\r0B#)tRLFh851O'--M4q/qf\!qp/0(GlsoSL4*OL4\H_6e0<<EQ`"Lkse[%7+CTnT]gP$REMYJgfQinAlBD0DnoGtg72WSHG>ZuNVm[!<$E%4DCe7p2m!nZ!HG^h>'@J?JT_Zi_JV:67CSc;8N()3G]>icHbt)N%a[<UL`Xo>C\;91,bj#uTS(O];=NB_385U^Z!?=QFVEQpOr>;@KN0)8bG\[m'D[!Ip3b#t(Tll<l<GoucY\]aiC:SGeY#kI+_c8=B%91L+FBu-kNB//roOm?m@j:8.s'mR7gWmV#q*b6O_,s`f,H#^kn$kTf;.g6T>.B&W-TY["IfQq/3&D@@V6LChI+^f-3ei.[0DF-\m%-k-nI1e]U!+Z>p&$61B/&[<Ju[c-Nn`^VQhb1@*BI,,phf0..&GWL>%L6Vh-XU"hVp+uJB/W&PUXTO.Y)@V*"XN_3-!:^GTOP>M8%%8P*DYtopfe9PWk##Mb"@*I18%#Kh#\!8\i@2C1..^O95$8o3l>DM0a?Q3K`,`ctg+<QC.l9ck_!EHRG&8(54&[nj(Z?7hD7p%Zs%Snd(3>DHN40aKI8:>_(J?%7ntcp5b)'+EPT+F#E2lY1Uo$!TpR<HVm*\jFQjJXj-1YfpdFWT.HPI$=JmPItAKe]e_e,;O&,3On>&%-nOKF*bmLQM*lPq4k/G62YT9U>b-KNFq4V:P3AA*^+*Y%-OE6]*F^*`)d*K'n)SNm/BaL#Y3VeRE+>HB!9)"6jbj=?^;u\P##$^-%TOR6L(0u7uNMY:Tg0+/2*)0Jqa_U1a7L`RTDZLN1;njN9,uHGS_;IG#ZO(`RF:UXiWN&R^W/]8eq45d;#2tNE#!oGQfVVDmB8%HM%L8sMQ0Wt0-J/+<c:[c%!j1leW!9$Qk^+VC#hL?J<n%TMEe-aYahdW'-kl&!TWnr5P%.e6$Mk8D8C"ijMlYhF?os_c]E*@V?4\RB&%TX1nt9L6c-/'At<=k`&#%YZhrV$S?h?80"X/]Oj?8KA[O^t]+*m^]6=h)d5*VltA.X%^DCcrEl''a+r@,G?;6G-i]hOEs>j^*T(k%!Q1n@e13;SQPJ7*17F3t9oB;M,,S?q'SDs,)<([:^9r:kK$[e=2[a#`\OrJ$!b9LNcJbS9nh3!Z;fYo>/E*H1@r;X_b[nXc\Y*0D%9kuICR:TAqTl'C572<;VA/I_$'k>@k1)S>dV(mY14LbW><Rm<idB9K1qC'L%9GhX!+M+]a`nnj'@c*Os)))GD&HrI8]dXVGU&\M9%iZ%u42>\G^b7u`X1(4qb[DdBMj`F^BemWb+e%0G,m\$AlfLN#ZMBm!F0_Vm9'KCW!ZRSSVr4C(q?m/:i&0Z4+o0k5MO;$CD!q+4S%#XCabf'psKjJ+(*l@6Nupit)>_qAr.o*&dT5o3Zh3/J>^^I]!^IZn0,r?c4bDdW$]/PG>ur<Bk$g!VA'Dd\*C&&m4?J-Hjj>DPI]%&C#Zf@%@28@%@0"OM&f91`GMa61Rn0Em9%8IH>\oIB"QD<3tI!7'b\q&8/a4(h^SaKW:2dmS^P3R`3ru!+Sedc$faJEV=BIIfkMQ%92]+Ns,B<$!D\N7Me%F5ko3hc<]9;1-38(WkI@=G6:l_1J0Sof`E7b+$Ch7Z'KCta$68u:G=K7*7;_f3li`q+ldk<[Dm^:SNbeks%i$8S8BdXaq^e$4RJV/r?HOjG'%.AVp1;]JsaJbsbE"'`8E-ss*b`EFQYnG&)d;GHS#Ic./?JtnKNiWeuQ.]iF6:O?Vi$9-c^bHBJ%^]B,W0KHP#fa4)I#Q!f/Vb3T0EH)&MAFuAlB:'lia?:\8@q?FnI`+&D%amq/>>hkN2+2j$fLbJ$IE8*hQDVD/+Q9O:;@XWhb^G*q%]?FfnM&]Pphe4+V6TR,#k)t[h;r8!^+;X5mCbT+PeMlIL^/W9U$]?&[<!3oQ,'^X<Ap'@=Qo:A5nE!5U2@EA7&SN$qS;Asm^Mb`4%[@cR_[_VgVQ$oor.YF$]<.kXc.Ae-A9/.u\KoHnK=12)g0-q>K0<I8#>XH6W$Kk*uei)'7V+?GU&>bt-.W$ZTdUn,ME^gnf=9M^6%Phocd9u,2'(KaX5A50!_fK'MR__T52LTkn>Yh*@?:l@'!e;I$+k=PP.FMbnZH!R3[!KF&'m@,`nnk9gO-s7Bs@B\h%'Vbd]G`-JI%05).GF2sm+MGZ4G7d:W-CTSG<\7L<NpC45qfIX#$MJA]^[#%d%?)+\N9bf$;ARl$I&"^o*.<*Lm1li]9=YaGS:4nsWD(qi#CCUWE%H?TNk;;O(^S(XtF0G`ggK@7msA/+L=S",A;iYObC-&'4YPmG*3)he+T8i*!(AVrIgUsG<k"X>s8"+ar8Y`IF[`<AMq>_34uTr'ec%a#q?>Zj<L'2"0](oQql!4"%?bQ8pjf6A.r_UX!;>E`/VJ4c.o-C%B:6H]6K#L&uu!+D5.cOl:YWKoE'p;a3;4UcK1,GabWd.DH;a%_U/pE-,8!AZnuF;V84V#pnkP@@DFMH.$0H*ZBb26(K2fY4#,6;G+t,(5;?Q[(=.?_,RqpCl8"_Llqa-Zlq_FO][ulP-9?F7+#'&r%TFYMN7"j:R[.a2BOTcql[70q``kc6Q#SsB^)`?'$&Xodj@clpKK#ApW.8CGFRR2ZVF=HqY<)"uu/P0c?U=cg(1$78f?F"3R6gL3i%jWkcb\ahUaoH/6*2MbM-5!$dUgc,Y>2(YHE309]<OJ9oi)@Ql@COh80#D9md]!LPBil509n^b.A<jkZL2&)GC[um<dj<fatoU96b%06>*V;h%/L0/o.A1rST8/eFV@-8/)F;"RomEV*Fd<M8!t[deIE*T0:6p/;Ku#\ids_+H=m%#?1/_7J1T#>pTG1<6Nu`9Fa6/OQ=s%LblgXWGV&A6lKtfhP_a#1glqj2,=\"XsF>WY8Kl$f7HA`Yo46S[O/9a!(t#+Vm&VN'Xh+=1E7RfVs4H72Qm53!Ci6$Rao9B$"6I\%4s8Q-4d-!d&BtKA#^*OgjD6?F/ps.fVT,?CL6_#N!^W6W,/=4q(;fCY]`^[r-#C*=PRT4l1Yn(u8ILZ9e9hcD'gIcAHRR(_(NGB7%dT#(VHPqLg-WQmR9[3;<7UAC73*Y?9(Y!hN\uOn>^fYb9DmmA;D9(PeH64<uk+7-G/D@=g[nA0D?PS4h8Jcp&G9u-)QTU-d+$&16%75<$e,53j'`EiZ:Y/i\&YC,1\)!RmQDbteWcBHj`XaWnp)asF)+k^\,`+^qI$9)ilgSGQ\Y;*M5E^YF\NdZhAon"%A.s&Ia2Q!3D%%NH1g,_$du,q#!"&eTtUKOAuX[k<tSO[GjcI4;9hB*>_,8R`e0W'U3;Y`P@e(;hrF1egnW4te^j]o4bG:copG-:\2@FKcOG*"fth%U`=uV&RZ?=@ch]'!(LF]E-jitdfDKEFjOr,<A&]WAMcCm/Ad01K];dl(ucl==>*Bd(G2EsD7s5^#15kT0KCBmdR-@UejH0lL,h7>%@R&+P@E]c*(8F5`A1GL_+c<K]a2SSu\h;3`^jQsT+FXu_oR*(Ga+QbNS1p<O'F*T]U1$Nj>ID'lZ$6@)fU2R@)''J=Y&^kn#DfW*%O"i1O>[#<@JhX5uY_mgP?t%)dWh/6OMD?XG$e*mn4Y\[Se-KPb!*/hS.23R%<2?D@IR#U,&q4UM?=>GM>B(7`icV/5e3Sh5`Z8H;%:g)Onj'[(F.V!']&72u+Bg2h<K,T3LW$=E_R]*!Db4^YX+?_T/0gAZ//rkh<VoO(]:c'n*A&sg@BE6)0GI\S4e8m:,g>&ug/6/3F%But.Nb:#cY(dt@?QoTm6N7V3G]QN)6`U54Q[G=_A%W`$Z7bY?l6RCg=QJ5hSHR9,^Y.ZM`ipt,c_8VWQ>+s\J7:L*m_$jg&1H)V.%@gFd4f<+3I+AmKZSf38t]3.[>]324%ai:\^P@6KpF/]%rF/Vndm1qE?L_+:c<Y$AS0MKu^Fp!6*,[i#WeKcS"&ZOKsK1P)SWU0m2%DREJm8k`1.8XucgRmjiq>D1u9K5+[<LD)9XRn4<E8qI\#h&8]5Xhf%LA;0e(12ZV\0HJN(aRmq4(rjckP[J_K!MW7%cP&Rn*lo]@%I^?:O%J?!]L%J)qcP!L7B##Negs';U&g\BM>_L[D.l@fT9\ce]WH95*.V-mX$<-7SF>W`3bod2r-e=(4>&AiofsIQ$FqN2k7Lt59%.5$@SZqV:6S1Sr"d7Ou*DEGN7_bAhfMt'MKCg6$cIQu,+lt2c7_2RbF_9d?9#U[]O1kmj+<GDmo_:>FN*:/dF\4dD+J5g+2g=?]W%#J4A8?V<"<CD^8^p@V`+q&3cJ0DRHKF'p.,@D6=siG04hl%j3*KUM9b?]3a!e#X*6O9C3K9o^XE'qrGD$sY7*(roN1Z@f1`O,E!I%ai.%%ra;Jb:kj(JQr=":8)>/.F[3HK10j#Z9o>TTO5=@tSAL;d.9asYi7S:9Q`Me./hpQ<pDQ"L8T?tofp-cB4_UeV^mH8=j9`]O%,]u^6WS&R7#788S2aSrO.r-5cn[X>FeX?W&SgriLOd6-T7BS1rrS"TFoNk^^,93G1<i$,KAjr2Tm1PAq%A>Gc#`X(e>h`+1!YfCe%8_)Iknj[A@B:M.b&3DA"iMZqrK5a1;:8%9Kh*!O_-]Wg'!9aOE['S*Bn1(FgQOF]q[Q/pF>0<mr;nb)+Ud1NU)=#F*`rV@0Y:7$t%QN`cHV+s.>YS,0#3/\@Z!gb0N,Wl($iJSQn>eQKT*&Bk(<,oi8SHNV_6tm6AE.V6_fO?*85jOh0_Ot0g4K.bF&/lSmUCfMU?Lst"%R?e:+Ee_Pp/-D\o?AP&%a\uRgR\I*W88$+^[@/(nP,Ddf6;4"bOim2l10BQfN<r!594R"n'Y4YVG1ubi]to]bde16Oc)lU/K6R@%%HapfH>?Z@Jmc3`!_fqaIFq8pAJ%YZ^h1^%X#@DtpqmlSUr+4jIiU2c!?Oq>sIXM"ghggA]jRK(C>7\/grt",30FI~>%AI9_PrivateDataEnd